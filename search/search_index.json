{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"This site is a comprehensive archive of Mutable Instruments modules' documentation. Module timeline Module Released Discontinued Grids August 2013 March 2021 Braids August 2013 October 2017 Edges August 2013 October 2016 Ripples August 2013 April 2020 Volts August 2013 March 2018 Links (PCBCart) January 2014 September 2015 Tides March 2014 April 2018 Frames March 2014 June 2021 Yarns March 2014 October 2020 Peaks August 2014 October 2017 Clouds January 2015 October 2017 Shelves January 2015 December 2015 Elements January 2015 January 2022 Streams January 2015 April 2021 Shades February 2015 April 2020 Branches February 2015 December 2021 Shelves Expander April 2015 December 2015 Bag of cables July 2015 July 2020 Links September 2015 March 2022 Warps November 2015 March 2022 Rings December 2015 April 2022 Shelves mkII January 2016 April 2021 Kinks March 2016 May 2021 Blinds June 2016 April 2022 Veils June 2016 September 2020 Ears September 2016 March 2022 Marbles March 2018 April 2022 Plaits March 2018 November 2022 Stages March 2018 July 2022 Tides 2018 September 2018 June 2022 Shades 2020 May 2020 March 2022 Ripples 2020 May 2020 November 2022 Veils 2020 October 2020 December 2022 Blades December 2020 April 2022 Beads February 2021 December 2022 Layout Index contains the main specifications of the module, and a link to the original printed manual. Firmware contains firmware update files and version history. Manual is the comprehensive online manual. Original blurb is an archive of the \"marketing\" text used to highlight the features of the module. Open source contains links to the github repository, and to the schematics. If the module is digital, additional resources for firmware development are provided.","title":"Home"},{"location":"#module-timeline","text":"Module Released Discontinued Grids August 2013 March 2021 Braids August 2013 October 2017 Edges August 2013 October 2016 Ripples August 2013 April 2020 Volts August 2013 March 2018 Links (PCBCart) January 2014 September 2015 Tides March 2014 April 2018 Frames March 2014 June 2021 Yarns March 2014 October 2020 Peaks August 2014 October 2017 Clouds January 2015 October 2017 Shelves January 2015 December 2015 Elements January 2015 January 2022 Streams January 2015 April 2021 Shades February 2015 April 2020 Branches February 2015 December 2021 Shelves Expander April 2015 December 2015 Bag of cables July 2015 July 2020 Links September 2015 March 2022 Warps November 2015 March 2022 Rings December 2015 April 2022 Shelves mkII January 2016 April 2021 Kinks March 2016 May 2021 Blinds June 2016 April 2022 Veils June 2016 September 2020 Ears September 2016 March 2022 Marbles March 2018 April 2022 Plaits March 2018 November 2022 Stages March 2018 July 2022 Tides 2018 September 2018 June 2022 Shades 2020 May 2020 March 2022 Ripples 2020 May 2020 November 2022 Veils 2020 October 2020 December 2022 Blades December 2020 April 2022 Beads February 2021 December 2022","title":"Module timeline"},{"location":"#layout","text":"Index contains the main specifications of the module, and a link to the original printed manual. Firmware contains firmware update files and version history. Manual is the comprehensive online manual. Original blurb is an archive of the \"marketing\" text used to highlight the features of the module. Open source contains links to the github repository, and to the schematics. If the module is digital, additional resources for firmware development are provided.","title":"Layout"},{"location":"modules/beads/","text":"Key data Original printed manual Features Audio acquisition Granular synthesis Attenurandomizers Delay Signal flow Specifications Key data Texture synthesizer Parameter Value Width 14HP Depth 25mm +12V current 100mA -12V current 10mA Lifetime 02/21 to 12/22 Modulargrid Link Processor STM32H743VIT6 @ 480 MHz Codec PCM3060 Original printed manual PDF download Features Audio acquisition Stereo I/O with automatic level detection. Manual override of the level detection. Automatic mono/stereo switching through patch cable detection. Recording time: 4s (48kHz 16-bit, stereo) to 32s (24kHz \u00b5-law, mono). Four quality modes, with different tone and reverb characters: 48kHz 16-bit 32kHz 12-bit with Clouds emulation 24kHz 12-bit with a hi-fi dry signal path 24kHz \u00b5-law with cassette emulation The FREEZE button and the gate input freezes the content of the recording buffer, allowing you to dive into its sonic details. Auto-saving of the FREEZE buffer. Granular synthesis Three grain generation modes: Latched (continuous), with a periodic or randomized rate, tracking V/O. Gated , with bursts of grains triggered by the press of the SEED button or an external gate. Clocked , with randomization or division of an external clock or trigger signal. Four grain parameters: TIME . Temporal position within the buffer. SIZE . Grain duration from 0.03 to 4 seconds, forward or backward playback. SHAPE . Morphing between four key shapes of the grain envelope: solid rectangular, snappy decay, smooth bell, or reversed. PITCH . With V/O tracking. Attenurandomizers Available for each of the four parameters of a grain, sampled each time a grain is started: Direct CV control. CV control of the amount of gaussian randomization. Internal randomization with an independent, uniform or peaky, random source. Delay Control of both the base delay clock rate ( DENSITY ), and its multiplication ( TIME ), with optional random taps. Tap tempo with the SEED button or an external signal. Enveloping of delay repeats, with the SHAPE setting. Pitch shifting of the delayed signal, controlled by PITCH . Signal flow Feedback path delay: 1 sample. Independent knobs for feedback, dry/wet amount, and reverb amount. CV input assignable to each of these three parameters, or to variable combinations of them. When unpatched, the R output is summed to the L output. Optional generation of a gate signal on the R output. Specifications All inputs: 100k impedance. Audio codec: 24kHz, 32kHz or 48kHz, 24-bit. 16-bit CV capture. Processing rate: audio-rate for the SEED and FREEZE inputs, 4kHz for the CV inputs. Latency: 0.25ms. CV input range: +/- 8V for grain parameters, +/- 5V for density (with V/O tracking) and assignable CV. Internal processing: 32-bit floating point.","title":"Index"},{"location":"modules/beads/#key-data","text":"Texture synthesizer Parameter Value Width 14HP Depth 25mm +12V current 100mA -12V current 10mA Lifetime 02/21 to 12/22 Modulargrid Link Processor STM32H743VIT6 @ 480 MHz Codec PCM3060","title":"Key data"},{"location":"modules/beads/#original-printed-manual","text":"PDF download","title":"Original printed manual"},{"location":"modules/beads/#features","text":"","title":"Features"},{"location":"modules/beads/#audio-acquisition","text":"Stereo I/O with automatic level detection. Manual override of the level detection. Automatic mono/stereo switching through patch cable detection. Recording time: 4s (48kHz 16-bit, stereo) to 32s (24kHz \u00b5-law, mono). Four quality modes, with different tone and reverb characters: 48kHz 16-bit 32kHz 12-bit with Clouds emulation 24kHz 12-bit with a hi-fi dry signal path 24kHz \u00b5-law with cassette emulation The FREEZE button and the gate input freezes the content of the recording buffer, allowing you to dive into its sonic details. Auto-saving of the FREEZE buffer.","title":"Audio acquisition"},{"location":"modules/beads/#granular-synthesis","text":"Three grain generation modes: Latched (continuous), with a periodic or randomized rate, tracking V/O. Gated , with bursts of grains triggered by the press of the SEED button or an external gate. Clocked , with randomization or division of an external clock or trigger signal. Four grain parameters: TIME . Temporal position within the buffer. SIZE . Grain duration from 0.03 to 4 seconds, forward or backward playback. SHAPE . Morphing between four key shapes of the grain envelope: solid rectangular, snappy decay, smooth bell, or reversed. PITCH . With V/O tracking.","title":"Granular synthesis"},{"location":"modules/beads/#attenurandomizers","text":"Available for each of the four parameters of a grain, sampled each time a grain is started: Direct CV control. CV control of the amount of gaussian randomization. Internal randomization with an independent, uniform or peaky, random source.","title":"Attenurandomizers"},{"location":"modules/beads/#delay","text":"Control of both the base delay clock rate ( DENSITY ), and its multiplication ( TIME ), with optional random taps. Tap tempo with the SEED button or an external signal. Enveloping of delay repeats, with the SHAPE setting. Pitch shifting of the delayed signal, controlled by PITCH .","title":"Delay"},{"location":"modules/beads/#signal-flow","text":"Feedback path delay: 1 sample. Independent knobs for feedback, dry/wet amount, and reverb amount. CV input assignable to each of these three parameters, or to variable combinations of them. When unpatched, the R output is summed to the L output. Optional generation of a gate signal on the R output.","title":"Signal flow"},{"location":"modules/beads/#specifications","text":"All inputs: 100k impedance. Audio codec: 24kHz, 32kHz or 48kHz, 24-bit. 16-bit CV capture. Processing rate: audio-rate for the SEED and FREEZE inputs, 4kHz for the CV inputs. Latency: 0.25ms. CV input range: +/- 8V for grain parameters, +/- 5V for density (with V/O tracking) and assignable CV. Internal processing: 32-bit floating point.","title":"Specifications"},{"location":"modules/beads/manual/","text":"Oops! In an older printed version of this manual, in the Patch ideas section, the > TIME parameter is incorrectly referred to as POSITION . Installation Beads requires a -12V/+12V power supply (2x5 pin connector). The red stripe of the ribbon cable (-12V side) must be oriented on the same side as the \u201cRed stripe\u201d marking on the module and on your power distribution board. The module draws 100mA from the +12V rail, and 10mA from the -12V rail. Beads in a nutshell One way of picturing how Beads operates is to imagine a tape loop, on which incoming audio is continuously recorded. Every time you request a grain to be played (in reaction to a trigger, a button press, periodically, or randomly), a new replay head positions itself along the tape . If this replay head doesn\u2019t move, the audio will be played back at the original pitch and speed, but if it moves closer to, or further away from the record head, the signal will be replayed at a different speed and pitch. This replay head has its own amplitude envelope , and it will leave the tape once the envelope has reached a null amplitude. Now imagine up to 30 replay heads flying along the tape. Imagine you can stop the incoming audio from being record- ed on the tape so that all these little replay heads can freely move along and gather sounds. And there\u2019s a reverb ... Beads does not use tape, but RAM. In this manual we use computer-science terminology and refer to this virtual piece of tape as a recording buffer . Recording quality and audio input Recording quality is chosen with the selector button [A] . The Cold digital setting most accurately reproduces the sonic character of the late Mutable Instruments Clouds. The Sunny tape setting runs the dry audio signal at a bright and clean 48kHz. The Scorched cassette setting emulates wow and flutter. Beads operates in mono or stereo depending on whether one, or both, of the audio inputs (1) are patched. When patch cables are inserted or removed, Beads monitors for five seconds the level of the incoming signal and adjusts the input gain accordingly, from +0dB to +32dB. The input level LED (2) blinks during this adjustment process. The input gain is chosen to leave some headroom, but in case of big level changes, a limiter kicks in. One can manually restart the gain adjustment process by pressing and holding the audio quality selector button [A] for one second. Holding this button [A] while turning the feedback knob [J] allows manual gain adjustments. The manually-set gain is memorized and applied until a long press on [A] re-enables automatic gain control. The FREEZE latching button [B] and the corresponding gate input (3) disable the recording of the incoming audio signal in the buffer. Otherwise, Beads records continuously! If FREEZE remains engaged for more than 10 seconds, the content of the buffer is backed up, and will be restored the next time the module is powered on. Beads will not switch between stereo and mono operation, or change the recording quality, while FREEZE is engaged. Grain generation Latched Latched grain generation is enabled by holding the SEED button [C] for four seconds, or by pressing the FREEZE button [B] while the SEED button [C] is being held. This is also the default setting when the module is powered on. The SEED button remains illuminated, and its brightness is slowly modulated to indicate that latching is enabled. In this mode, the grains are generated continuously, at a rate set by the DENSITY knob [D] and modulated by the DENSITY CV input (5) . At 12 o\u2019clock, no grains are generated. Turn DENSITY CW and grains will be generated at a randomly modulated rate , or CCW for a constant generation rate . The further you turn, the shorter the interval between grains, reaching at the extreme the period of a C3 note. Clocked When latched grain generation is enabled, and when a signal, such as a clock or sequence, is patched into the SEED input (4) , the DENSITY knob [D] is repurposed as a divider or probability control. At 12 o\u2019clock, no grains are generated. Turn CW to increase the probability (from 0% to 100%) that a grain is triggered by the external signal. Turn CCW to increase the division ratio, from 1/16 to 1. Gated and triggered Disable latched grain generation with a short press on the SEED button [C] . Grains will then be generated only when the SEED button is held, or when a gate signal patched in the SEED input (4) is high. The DENSITY knob [D] controls the repetition rate of grains. When DENSITY is at 12 o\u2019clock, only a single grain will be played at each press of the SEED button, or at each trigger sent in the SEED input (4) . When grain density reaches audio rates, the DENSITY CV input (5) applies exponential FM on this rate, with a scale of 1V/octave Grain playback control Four parameters control at which buffer position, pitch, and with which duration and envelope the grains are replayed. More precisely, these parameters and their respective modulations are read once, whenever a grain starts , and remain unchanged throughout the duration of the grain. If a parameter then changes, it will only impact the next grain. For example, turning the PITCH knob will create a trail of grains with different pitches, rather than change, in lock-step, the pitch of all the grains that are currently playing. E. TIME controls if the grain replays the most recent (fully CCW) or oldest (fully CW) audio material from the recording buffer \u2013 shifting the replay heads further apart from the record head. F. PITCH controls the transposition, from -24 to +24 semi- tones, with virtual notches at selected intervals. G. SIZE controls the duration and playback direction of the grain. At the 11 o\u2019clock position, a very short (30ms) grain is played. Turn CW to increase grain duration up to 4s. Turn CCW to play a reversed grain, lasting up to 4s. Turning SIZE fully clockwise (\u221e) generates never-ending grains acting as delay taps. Please refer to the Beads as a delay section. H. SHAPE adjusts the amplitude envelope of the grain. Fully CCW creates clicky, rectangular envelopes, while fully CW provides envelopes with slow attacks reminiscent of reversed grains (Please note, however, that the envelope shape is independent of the playback direction). I. Attenurandomizers for the TIME, SIZE, SHAPE and PITCH parameters. They control the amount of external CV modu- lation on the corresponding parameters, or repurpose the CV input (6) as a randomization or spread control. Attenurandomizers When a cable is patched into the corresponding CV input (6) , turning the attenurandomizer [I] CW from 12 o\u2019clock increases the amount of external CV modulation . Turning it CCW increases the amount of CV-controlled randomization . With no CV patched into an input, the attenurandomizer controls the amount of randomization from an independent internal random source with a peaky (12 o\u2019clock to fully CCW) or uniform (12 o\u2019clock to fully CW) distribution. The random values from the peaky distribution are clustered towards the middle, with extreme values being infrequently generated. Patch ideas Patch a ramp-down LFO, or a decaying linear envelope into the TIME CV input for \"scrubbing\" the buffer, or a segment of it, at whichever speed the LFO rate or envelope time is set to. Timestretching time! The PITCH CV input tracks V/O when the attenurandomizer is turned fully CW: one can sequence a melody of grains or even play them from a keyboard. Patch a fast arpeggiated sequence into the PITCH CV input to create chords: each grain will be played at a randomly chosen note of the arpeggio. Sequence slices of sound (or phonemes from a recording of speech) by patching the CV output of a sequencer into TIME , and its gate output into SEED . Mixing and audio output J. Feedback , that is to say the amount of output signal mixed with the input signal and fed back into the processing chain. Each quality setting employs a different feedback amplitude limiting scheme typical of the medium it emulates \u2013 from clean brickwall-limiting to grungy tape saturation. K. Dry/wet balance. L. Amount of reverb . Modeled on the acoustics of Thoreau\u2019s cabin, or of a strip-mall spa. The LED under each of these knobs indicates the amount of modulation they receive from the assignable CV input (7) . Press the button [M] to select to which of these 3 destinations the CV input (7) is assigned. Or hold this button and turn the knobs [J] , [K] and [L] to individually adjust the amount of CV modulation. 8. Audio output. While the recording buffer can be mono or stereo, Beads\u2019 signal processing chain is always stereo. If the R output is left unpatched, both L and R signals are summed together and sent to the L output. If one of the grains\u2019 parameters is randomized, or if the grains are generated at a random rate, their pan position will also be randomized. Hold the button [M] and press the SEED button [C] to enable (or disable) the generation of a grain trigger signal on the R output. A patch cable will have to be inserted in the R output for this to work without affecting the L output! Beads as a delay Setting the grain SIZE [G] knob fully clockwise (\u221e) turns Beads into a delay or beat slicer . Effectively, only one grain remains active, forever, continuously reading from the tape. The base delay time (and slice duration) can be manually controlled, tapped, or set by an external clock. Manual control If the SEED input (4) is left unpatched, and if the SEED button [C] is latched (slowly fading in and out), the delay time is freely controlled by the DENSITY knob [D] and CV input (5) . At 12 o\u2019clock, the base delay time corresponds to the full buffer duration . Turn the knob further away to shorten the delay time up to audio rates , for flanger or comb-filtering effects. From 12 o\u2019clock to fully CW, the delay will have an additional, unevenly spaced, tap. Clocked or tap-tempo control If an external clock is patched into the SEED input (4) , or if you rhythmically tap the SEED button, the base delay time will be set as the interval between the taps or clock ticks. The DENSITY knob [D] selects a subdivision of this duration. Turn the knob further away from 12 o\u2019clock to use shorter subdivisions. From 12 o\u2019clock to fully CCW, only binary subdivisions will be used. From 12 o\u2019clock to fully CW, a wider variety of ratios are available. Delaying or slicing When FREEZE [B] is not engaged, Beads operates as a delay. The TIME knob [E] selects the actual delay time, as a multiple of the base delay time set by DENSITY and/or by the external clock or taps. When FREEZE [B] is engaged, a slice from the recording buffer is continuously looped. The duration of a slice is equal to the base delay time. The TIME knob [E] selects which slice is played. The SHAPE knob [H] applies a tempo-synchronized envelope on the repeats. For normal operation, turn it fully CCW. PITCH [F] applies a classic rotary-head pitch-shifting effect on the delayed signal. At 12 o\u2019clock, the pitch-shifter is bypassed. Slow random LFOs are internally routed to the attenurandomizers [I] . Beads as a granular wavetable synth When both audio inputs (1) are left unpatched, and at the end of a period of ten seconds, Beads loses patience and granularizes a collection of internally stored buffers of raw waveforms from Mutable Instruments Plaits\u2019 wavetable model. The feedback control [J] selects which one of these 8 banks of waveforms is played. The dry/wet control [K] adjusts the balance between the continuous oscillator signal, and the granularized signal. The FREEZE button [B] halts the envelope of the grains, and stops the generation of new grains. The audio quality selector [A] selects the output resolution. Finally, the PITCH CV input always acts as a 1 V/octave CV input affecting the root note of the grains, irrespectively of the position of the PITCH attenurandomizer. The PITCH attenurandomizer always controls the amount of pitch randomization of the grains. Advanced topics Firmware update procedure If you think your module is behaving strangely, updating the firmware is certainly not the right thing to do. Unplug all CV inputs/outputs from the module. Connect the output of your audio interface/sound card to the IN L input (1) . Set the TIME knob [E] to an intermediate position. Power on your modular system with the FREEZE illuminated push-button (B) pressed. Make sure that no additional sound (such as email notification sounds, background music etc.) from your computer will be played during the procedure. Make sure that your speakers/monitors are not connected to your audio interface - the noises emitted during the procedure are aggressive and can harm your hearing. On non-studio audio equipment (for example the line output from a desktop computer), you might have to turn up the gain to the maximum. When you are all set, play the firmware update file into the module. While the module receives data, the recording quality LED [A] will act as vu-meter (lit in yellow when the signal level is optimal). Try adjusting the TIME knob to adjust gain. When the end of the audio file is reached, the module automatically restarts - if it is not the case, please retry the procedure from the beginning. In case the signal level is inadequate, all LEDs will blink in red. Press the button [B] and retry with a higher gain. If this does not help, please retry the procedure from another computer/audio interface, and make sure that no piece of equipment or software effect (equalizer, automatic gain control, FX processor) is inserted in the signal chain.","title":"Manual"},{"location":"modules/beads/manual/#oops","text":"In an older printed version of this manual, in the Patch ideas section, the > TIME parameter is incorrectly referred to as POSITION .","title":"Oops!"},{"location":"modules/beads/manual/#installation","text":"Beads requires a -12V/+12V power supply (2x5 pin connector). The red stripe of the ribbon cable (-12V side) must be oriented on the same side as the \u201cRed stripe\u201d marking on the module and on your power distribution board. The module draws 100mA from the +12V rail, and 10mA from the -12V rail.","title":"Installation"},{"location":"modules/beads/manual/#beads-in-a-nutshell","text":"One way of picturing how Beads operates is to imagine a tape loop, on which incoming audio is continuously recorded. Every time you request a grain to be played (in reaction to a trigger, a button press, periodically, or randomly), a new replay head positions itself along the tape . If this replay head doesn\u2019t move, the audio will be played back at the original pitch and speed, but if it moves closer to, or further away from the record head, the signal will be replayed at a different speed and pitch. This replay head has its own amplitude envelope , and it will leave the tape once the envelope has reached a null amplitude. Now imagine up to 30 replay heads flying along the tape. Imagine you can stop the incoming audio from being record- ed on the tape so that all these little replay heads can freely move along and gather sounds. And there\u2019s a reverb ... Beads does not use tape, but RAM. In this manual we use computer-science terminology and refer to this virtual piece of tape as a recording buffer .","title":"Beads in a nutshell"},{"location":"modules/beads/manual/#recording-quality-and-audio-input","text":"Recording quality is chosen with the selector button [A] . The Cold digital setting most accurately reproduces the sonic character of the late Mutable Instruments Clouds. The Sunny tape setting runs the dry audio signal at a bright and clean 48kHz. The Scorched cassette setting emulates wow and flutter. Beads operates in mono or stereo depending on whether one, or both, of the audio inputs (1) are patched. When patch cables are inserted or removed, Beads monitors for five seconds the level of the incoming signal and adjusts the input gain accordingly, from +0dB to +32dB. The input level LED (2) blinks during this adjustment process. The input gain is chosen to leave some headroom, but in case of big level changes, a limiter kicks in. One can manually restart the gain adjustment process by pressing and holding the audio quality selector button [A] for one second. Holding this button [A] while turning the feedback knob [J] allows manual gain adjustments. The manually-set gain is memorized and applied until a long press on [A] re-enables automatic gain control. The FREEZE latching button [B] and the corresponding gate input (3) disable the recording of the incoming audio signal in the buffer. Otherwise, Beads records continuously! If FREEZE remains engaged for more than 10 seconds, the content of the buffer is backed up, and will be restored the next time the module is powered on. Beads will not switch between stereo and mono operation, or change the recording quality, while FREEZE is engaged.","title":"Recording quality and audio input"},{"location":"modules/beads/manual/#grain-generation","text":"","title":"Grain generation"},{"location":"modules/beads/manual/#latched","text":"Latched grain generation is enabled by holding the SEED button [C] for four seconds, or by pressing the FREEZE button [B] while the SEED button [C] is being held. This is also the default setting when the module is powered on. The SEED button remains illuminated, and its brightness is slowly modulated to indicate that latching is enabled. In this mode, the grains are generated continuously, at a rate set by the DENSITY knob [D] and modulated by the DENSITY CV input (5) . At 12 o\u2019clock, no grains are generated. Turn DENSITY CW and grains will be generated at a randomly modulated rate , or CCW for a constant generation rate . The further you turn, the shorter the interval between grains, reaching at the extreme the period of a C3 note.","title":"Latched"},{"location":"modules/beads/manual/#clocked","text":"When latched grain generation is enabled, and when a signal, such as a clock or sequence, is patched into the SEED input (4) , the DENSITY knob [D] is repurposed as a divider or probability control. At 12 o\u2019clock, no grains are generated. Turn CW to increase the probability (from 0% to 100%) that a grain is triggered by the external signal. Turn CCW to increase the division ratio, from 1/16 to 1.","title":"Clocked"},{"location":"modules/beads/manual/#gated-and-triggered","text":"Disable latched grain generation with a short press on the SEED button [C] . Grains will then be generated only when the SEED button is held, or when a gate signal patched in the SEED input (4) is high. The DENSITY knob [D] controls the repetition rate of grains. When DENSITY is at 12 o\u2019clock, only a single grain will be played at each press of the SEED button, or at each trigger sent in the SEED input (4) . When grain density reaches audio rates, the DENSITY CV input (5) applies exponential FM on this rate, with a scale of 1V/octave","title":"Gated and triggered"},{"location":"modules/beads/manual/#grain-playback-control","text":"Four parameters control at which buffer position, pitch, and with which duration and envelope the grains are replayed. More precisely, these parameters and their respective modulations are read once, whenever a grain starts , and remain unchanged throughout the duration of the grain. If a parameter then changes, it will only impact the next grain. For example, turning the PITCH knob will create a trail of grains with different pitches, rather than change, in lock-step, the pitch of all the grains that are currently playing. E. TIME controls if the grain replays the most recent (fully CCW) or oldest (fully CW) audio material from the recording buffer \u2013 shifting the replay heads further apart from the record head. F. PITCH controls the transposition, from -24 to +24 semi- tones, with virtual notches at selected intervals. G. SIZE controls the duration and playback direction of the grain. At the 11 o\u2019clock position, a very short (30ms) grain is played. Turn CW to increase grain duration up to 4s. Turn CCW to play a reversed grain, lasting up to 4s. Turning SIZE fully clockwise (\u221e) generates never-ending grains acting as delay taps. Please refer to the Beads as a delay section. H. SHAPE adjusts the amplitude envelope of the grain. Fully CCW creates clicky, rectangular envelopes, while fully CW provides envelopes with slow attacks reminiscent of reversed grains (Please note, however, that the envelope shape is independent of the playback direction). I. Attenurandomizers for the TIME, SIZE, SHAPE and PITCH parameters. They control the amount of external CV modu- lation on the corresponding parameters, or repurpose the CV input (6) as a randomization or spread control.","title":"Grain playback control"},{"location":"modules/beads/manual/#attenurandomizers","text":"When a cable is patched into the corresponding CV input (6) , turning the attenurandomizer [I] CW from 12 o\u2019clock increases the amount of external CV modulation . Turning it CCW increases the amount of CV-controlled randomization . With no CV patched into an input, the attenurandomizer controls the amount of randomization from an independent internal random source with a peaky (12 o\u2019clock to fully CCW) or uniform (12 o\u2019clock to fully CW) distribution. The random values from the peaky distribution are clustered towards the middle, with extreme values being infrequently generated.","title":"Attenurandomizers"},{"location":"modules/beads/manual/#patch-ideas","text":"Patch a ramp-down LFO, or a decaying linear envelope into the TIME CV input for \"scrubbing\" the buffer, or a segment of it, at whichever speed the LFO rate or envelope time is set to. Timestretching time! The PITCH CV input tracks V/O when the attenurandomizer is turned fully CW: one can sequence a melody of grains or even play them from a keyboard. Patch a fast arpeggiated sequence into the PITCH CV input to create chords: each grain will be played at a randomly chosen note of the arpeggio. Sequence slices of sound (or phonemes from a recording of speech) by patching the CV output of a sequencer into TIME , and its gate output into SEED .","title":"Patch ideas"},{"location":"modules/beads/manual/#mixing-and-audio-output","text":"J. Feedback , that is to say the amount of output signal mixed with the input signal and fed back into the processing chain. Each quality setting employs a different feedback amplitude limiting scheme typical of the medium it emulates \u2013 from clean brickwall-limiting to grungy tape saturation. K. Dry/wet balance. L. Amount of reverb . Modeled on the acoustics of Thoreau\u2019s cabin, or of a strip-mall spa. The LED under each of these knobs indicates the amount of modulation they receive from the assignable CV input (7) . Press the button [M] to select to which of these 3 destinations the CV input (7) is assigned. Or hold this button and turn the knobs [J] , [K] and [L] to individually adjust the amount of CV modulation. 8. Audio output. While the recording buffer can be mono or stereo, Beads\u2019 signal processing chain is always stereo. If the R output is left unpatched, both L and R signals are summed together and sent to the L output. If one of the grains\u2019 parameters is randomized, or if the grains are generated at a random rate, their pan position will also be randomized. Hold the button [M] and press the SEED button [C] to enable (or disable) the generation of a grain trigger signal on the R output. A patch cable will have to be inserted in the R output for this to work without affecting the L output!","title":"Mixing and audio output"},{"location":"modules/beads/manual/#beads-as-a-delay","text":"Setting the grain SIZE [G] knob fully clockwise (\u221e) turns Beads into a delay or beat slicer . Effectively, only one grain remains active, forever, continuously reading from the tape. The base delay time (and slice duration) can be manually controlled, tapped, or set by an external clock.","title":"Beads as a delay"},{"location":"modules/beads/manual/#manual-control","text":"If the SEED input (4) is left unpatched, and if the SEED button [C] is latched (slowly fading in and out), the delay time is freely controlled by the DENSITY knob [D] and CV input (5) . At 12 o\u2019clock, the base delay time corresponds to the full buffer duration . Turn the knob further away to shorten the delay time up to audio rates , for flanger or comb-filtering effects. From 12 o\u2019clock to fully CW, the delay will have an additional, unevenly spaced, tap.","title":"Manual control"},{"location":"modules/beads/manual/#clocked-or-tap-tempo-control","text":"If an external clock is patched into the SEED input (4) , or if you rhythmically tap the SEED button, the base delay time will be set as the interval between the taps or clock ticks. The DENSITY knob [D] selects a subdivision of this duration. Turn the knob further away from 12 o\u2019clock to use shorter subdivisions. From 12 o\u2019clock to fully CCW, only binary subdivisions will be used. From 12 o\u2019clock to fully CW, a wider variety of ratios are available.","title":"Clocked or tap-tempo control"},{"location":"modules/beads/manual/#delaying-or-slicing","text":"When FREEZE [B] is not engaged, Beads operates as a delay. The TIME knob [E] selects the actual delay time, as a multiple of the base delay time set by DENSITY and/or by the external clock or taps. When FREEZE [B] is engaged, a slice from the recording buffer is continuously looped. The duration of a slice is equal to the base delay time. The TIME knob [E] selects which slice is played. The SHAPE knob [H] applies a tempo-synchronized envelope on the repeats. For normal operation, turn it fully CCW. PITCH [F] applies a classic rotary-head pitch-shifting effect on the delayed signal. At 12 o\u2019clock, the pitch-shifter is bypassed. Slow random LFOs are internally routed to the attenurandomizers [I] .","title":"Delaying or slicing"},{"location":"modules/beads/manual/#beads-as-a-granular-wavetable-synth","text":"When both audio inputs (1) are left unpatched, and at the end of a period of ten seconds, Beads loses patience and granularizes a collection of internally stored buffers of raw waveforms from Mutable Instruments Plaits\u2019 wavetable model. The feedback control [J] selects which one of these 8 banks of waveforms is played. The dry/wet control [K] adjusts the balance between the continuous oscillator signal, and the granularized signal. The FREEZE button [B] halts the envelope of the grains, and stops the generation of new grains. The audio quality selector [A] selects the output resolution. Finally, the PITCH CV input always acts as a 1 V/octave CV input affecting the root note of the grains, irrespectively of the position of the PITCH attenurandomizer. The PITCH attenurandomizer always controls the amount of pitch randomization of the grains.","title":"Beads as a granular wavetable synth"},{"location":"modules/beads/manual/#advanced-topics","text":"","title":"Advanced topics"},{"location":"modules/beads/manual/#firmware-update-procedure","text":"If you think your module is behaving strangely, updating the firmware is certainly not the right thing to do. Unplug all CV inputs/outputs from the module. Connect the output of your audio interface/sound card to the IN L input (1) . Set the TIME knob [E] to an intermediate position. Power on your modular system with the FREEZE illuminated push-button (B) pressed. Make sure that no additional sound (such as email notification sounds, background music etc.) from your computer will be played during the procedure. Make sure that your speakers/monitors are not connected to your audio interface - the noises emitted during the procedure are aggressive and can harm your hearing. On non-studio audio equipment (for example the line output from a desktop computer), you might have to turn up the gain to the maximum. When you are all set, play the firmware update file into the module. While the module receives data, the recording quality LED [A] will act as vu-meter (lit in yellow when the signal level is optimal). Try adjusting the TIME knob to adjust gain. When the end of the audio file is reached, the module automatically restarts - if it is not the case, please retry the procedure from the beginning. In case the signal level is inadequate, all LEDs will blink in red. Press the button [B] and retry with a higher gain. If this does not help, please retry the procedure from another computer/audio interface, and make sure that no piece of equipment or software effect (equalizer, automatic gain control, FX processor) is inserted in the signal chain.","title":" Firmware update procedure"},{"location":"modules/beads/original_blurb/","text":"Reinventing a classic Beads is a reinvention of Mutable Instruments' Clouds. The concept is the same, live granular processing of an incoming audio signal, and the labels on the panel remain familiar. The similarities stop here. The hardware and software have been redesigned from the ground up , with several goals in mind: a crisper and broader sound palette, more control, better playability, and direct access to exciting new features. Dotting the i's and crossing the t's Beads' vastly improved specifications allow a higher audio quality, a longer buffer, the use of better interpolation and anti-aliasing algorithms, and key DSP blocks to run at a faster rate. Granular processing can now go to new territories, such as formants, wavetables, hard-sync-like sounds, or crispy noise. The range of parameters, their response to the turn of a knob or a CV modulation have all been refined, for new possibilities such as reverse playback or percussive envelopes. Control, chaos and character Control . To trigger or schedule grains, Beads provides new features to divide or randomize an external clock or trigger stream, spray bursts of grains in response to a gate, or get the grain rate to track a V/O CV or the frequency of an external oscillator. Chaos . Each key parameter of a grain comes with its own attenurandomizer , which allows direct CV control, CV control of the randomization (spread) of this parameter, or internal randomization using some of Marbles' algorithms. Character . Beads provides four audio quality settings, which go well beyond buffer sample rate and bit-depth: they affect the clock of the converters, the amplitude limiting and saturation of the signal path, the tone of the reverb, and additional media-emulation effects. From a pristine digital device to a dirty cassette, through a mode reproducing some of Clouds' characteristics. Modes? Beads can operate as a delay without the need to switch to a different mode: just ask it to play a never-ending grain. Its DENSITY , TIME and SEED controls are repurposed to allow various features such as tap-tempo, beat slicing, time-stretching, or comb-filtering at rates tracking V/O. Without any audio input, Beads will granularize 8 internal banks of wavetables.","title":"Original blurb"},{"location":"modules/beads/original_blurb/#reinventing-a-classic","text":"Beads is a reinvention of Mutable Instruments' Clouds. The concept is the same, live granular processing of an incoming audio signal, and the labels on the panel remain familiar. The similarities stop here. The hardware and software have been redesigned from the ground up , with several goals in mind: a crisper and broader sound palette, more control, better playability, and direct access to exciting new features.","title":"Reinventing a classic"},{"location":"modules/beads/original_blurb/#dotting-the-is-and-crossing-the-ts","text":"Beads' vastly improved specifications allow a higher audio quality, a longer buffer, the use of better interpolation and anti-aliasing algorithms, and key DSP blocks to run at a faster rate. Granular processing can now go to new territories, such as formants, wavetables, hard-sync-like sounds, or crispy noise. The range of parameters, their response to the turn of a knob or a CV modulation have all been refined, for new possibilities such as reverse playback or percussive envelopes.","title":"Dotting the i's and crossing the t's"},{"location":"modules/beads/original_blurb/#control-chaos-and-character","text":"Control . To trigger or schedule grains, Beads provides new features to divide or randomize an external clock or trigger stream, spray bursts of grains in response to a gate, or get the grain rate to track a V/O CV or the frequency of an external oscillator. Chaos . Each key parameter of a grain comes with its own attenurandomizer , which allows direct CV control, CV control of the randomization (spread) of this parameter, or internal randomization using some of Marbles' algorithms. Character . Beads provides four audio quality settings, which go well beyond buffer sample rate and bit-depth: they affect the clock of the converters, the amplitude limiting and saturation of the signal path, the tone of the reverb, and additional media-emulation effects. From a pristine digital device to a dirty cassette, through a mode reproducing some of Clouds' characteristics.","title":"Control, chaos and character"},{"location":"modules/beads/original_blurb/#modes","text":"Beads can operate as a delay without the need to switch to a different mode: just ask it to play a never-ending grain. Its DENSITY , TIME and SEED controls are repurposed to allow various features such as tap-tempo, beat slicing, time-stretching, or comb-filtering at rates tracking V/O. Without any audio input, Beads will granularize 8 internal banks of wavetables.","title":"Modes?"},{"location":"modules/blades/","text":"Key data Original printed manual Features An essential overdrive circuit Two rich multimode filters Unique routing possibilities Specifications Key data Dual multimode filter Parameter Value Width 18HP Depth 25mm +12V current 150mA -12V current 140mA Lifetime 12/20 to 04/22 Modulargrid Link Original printed manual PDF download Features An essential overdrive circuit A CV-controlled overdrive stage precedes each of the two filters. Overdrive response continuously adjustable between soft-clipping and 2-stage wavefolding. Two rich multimode filters Clean 2-pole (12dB/octave) state-variable design. CV-controlled filter response, continuously variable between low-pass, band-pass and high-pass. CV inputs with attenuverters for cutoff and resonance. Unattenuated frequency CV input, calibrated for 1V/Oct tracking. Clean self-oscillation across the audio range, extending into very low frequencies, with constant amplitude. Modulating the filter response is akin to modulating the phase of the self-oscillation tone. Unique routing possibilities Continuously variable (and CV-controlled) routing from single to parallel to series. With a signal patched into filter 2's audio input, the routing knob and CV act as a crossfader. Filter 2's cutoff can be set relatively to filter 1's cutoff. Specifications Fully analog, based on the V2164 quad VCA chip. Frequency knob range: 8Hz to 18kHz. Audio input impedance: 30k. DC-coupled audio inputs. Filter mode CV input impedance: 50k. Other CV inputs impedance: 100k. All CV inputs handle audio-rate modulations.","title":"Index"},{"location":"modules/blades/#key-data","text":"Dual multimode filter Parameter Value Width 18HP Depth 25mm +12V current 150mA -12V current 140mA Lifetime 12/20 to 04/22 Modulargrid Link","title":"Key data"},{"location":"modules/blades/#original-printed-manual","text":"PDF download","title":"Original printed manual"},{"location":"modules/blades/#features","text":"","title":"Features"},{"location":"modules/blades/#an-essential-overdrive-circuit","text":"A CV-controlled overdrive stage precedes each of the two filters. Overdrive response continuously adjustable between soft-clipping and 2-stage wavefolding.","title":"An essential overdrive circuit"},{"location":"modules/blades/#two-rich-multimode-filters","text":"Clean 2-pole (12dB/octave) state-variable design. CV-controlled filter response, continuously variable between low-pass, band-pass and high-pass. CV inputs with attenuverters for cutoff and resonance. Unattenuated frequency CV input, calibrated for 1V/Oct tracking. Clean self-oscillation across the audio range, extending into very low frequencies, with constant amplitude. Modulating the filter response is akin to modulating the phase of the self-oscillation tone.","title":"Two rich multimode filters"},{"location":"modules/blades/#unique-routing-possibilities","text":"Continuously variable (and CV-controlled) routing from single to parallel to series. With a signal patched into filter 2's audio input, the routing knob and CV act as a crossfader. Filter 2's cutoff can be set relatively to filter 1's cutoff.","title":"Unique routing possibilities"},{"location":"modules/blades/#specifications","text":"Fully analog, based on the V2164 quad VCA chip. Frequency knob range: 8Hz to 18kHz. Audio input impedance: 30k. DC-coupled audio inputs. Filter mode CV input impedance: 50k. Other CV inputs impedance: 100k. All CV inputs handle audio-rate modulations.","title":"Specifications"},{"location":"modules/blades/manual/","text":"Installation Blades requires a -12V/+12V power supply (2x5 pin connector). The red stripe of the ribbon cable (-12V side) must be oriented on the same side as the \"Red stripe\" marking on the board. The module draws 150mA from the -12V rail and 140mA from the +12V rail. Controls The same set of controls is provided for both filters. A. Cutoff frequency , from 8 Hz to 18 kHz. B. Resonance. Goes up to self-oscillation. C. Amount of gain and distortion or wavefolding applied to the input signal. A gain of 0dB is achieved with the knob at 11 o\u2019clock. This knob also acts as an offset control for the DRIVE CV input (3) . D. Response of the drive circuit , continuously variable between round soft-clipping, and a two-stage wavefolder. E. Filter input level indicator LED. F. Filter response. Continuously variable between low-pass, band-pass, and high-pass. When the filter is self-oscillating, with no input signal, this adjusts the phase of the sine-wave produced by the filter. G. Filter routing. This knob controls the signal routing (single, parallel or series) between the two filters. H. Attenuverters for the two filters\u2019 frequency and resonance CV inputs, and for the ROUTING CV input. I. Filter cutoff coupling. When this button is pressed and illuminated, filter 2\u2019s cutoff frequency is set relatively to filter 1\u2019s cutoff frequency. For example, when filter 2\u2019s FREQUENCY knob is at 12 o\u2019clock, both filters share the same cutoff frequency. With the knob past (or before) 12 o\u2019clock, filter 2\u2019s cutoff frequency will follow filter 1\u2019s, but transposed up (or down). Inputs and Outputs 1. CV inputs for filter mode, cutoff frequency, resonance and filter routing. 2. V/OCT input . Controls the cutoff frequency according to the 1 V/octave scale. 3. Drive CV input. If no patch cable is inserted in this input, a 2V voltage is applied to the drive circuit. This is why a moderate, but non-null, gain is obtained when the DRIVE knob [C] is fully turned counter-clockwise. 4. DC-coupled signal input. 5. Individual filter output. 6. Main output. Carries a blend of filter 1 and filter 2\u2019s outputs, depending on the ROUTING knob and CV. Controlling the signal path The ROUTING knob [G] acts as a dual crossfader. Firstly, it controls which proportion of filter 1 and filter 2\u2019s output is sent to the MAIN output (6) : only filter 1 when turned fully CCW, only filter 2 when turned fully CW, and a mix of both filters at 12 o\u2019clock. Secondly, it also controls which proportion of filter 1\u2019s input and filter 1\u2019s output is sent to filter 2\u2019s input (provided filter 2\u2019s IN is left unpatched). As a result, the following filter configurations can be obtained: Single: the MAIN output carries the output of filter 1. Parallel: the MAIN output carries a mix of filter 1 and filter 2\u2019s outputs, and both filters process the same signal from filter 1\u2019s input. Series: the MAIN output carries the output of filter 2, which processes filter 1\u2019s output. If you patch your own signal source into filter 2\u2019s input, then the ROUTING control simply acts as a crossfader between filter 1 and 2\u2019s outputs. Tips and patch ideas Patch filter 2\u2019s output into filter 1\u2019s FREQUENCY CV input and vice-versa for some chaotic effects. Use filter 1 in self-oscillation as an oscillator (possibly with feedback from its own output to its FREQUENCY input to bend its waveform). Use filter 2 to wavefold and filter this raw waveform. When a filter self-oscillates, and thus behaves as a sine oscillator, its phase can be modulated through the MODE CV input. This allows the synthesis of metallic tones reminiscent of FM. Try modulating MODE through a VCA, for CV-controlled adjustment of phase-modulation depth. With the two filters in series, both set to a low-pass response, the module can be used as a voltage-con- trolled distortion with pre- and post- tone controls. Set filter 1 to a mild DRIVE , low FREQUENCY and RESO , and choose the high-pass response. The ROUTING knob now acts as a dry/wet control, for whatever function filter 2 performs. The intermediate responses between LP and BP, or BP and HP, have a shelving shape. This can turn Blades into a useful tool for EQ-ing and spectrally coloring signals. Since Blades \u2019 signal path is DC-coupled you can also use it to process CV signals: use FREQUENCY for portamento, RESO to add overshoot and wiggles. DRIVE lets you control the signal amplitude or even its shape.","title":"Manual"},{"location":"modules/blades/manual/#installation","text":"Blades requires a -12V/+12V power supply (2x5 pin connector). The red stripe of the ribbon cable (-12V side) must be oriented on the same side as the \"Red stripe\" marking on the board. The module draws 150mA from the -12V rail and 140mA from the +12V rail.","title":"Installation"},{"location":"modules/blades/manual/#controls","text":"The same set of controls is provided for both filters. A. Cutoff frequency , from 8 Hz to 18 kHz. B. Resonance. Goes up to self-oscillation. C. Amount of gain and distortion or wavefolding applied to the input signal. A gain of 0dB is achieved with the knob at 11 o\u2019clock. This knob also acts as an offset control for the DRIVE CV input (3) . D. Response of the drive circuit , continuously variable between round soft-clipping, and a two-stage wavefolder. E. Filter input level indicator LED. F. Filter response. Continuously variable between low-pass, band-pass, and high-pass. When the filter is self-oscillating, with no input signal, this adjusts the phase of the sine-wave produced by the filter. G. Filter routing. This knob controls the signal routing (single, parallel or series) between the two filters. H. Attenuverters for the two filters\u2019 frequency and resonance CV inputs, and for the ROUTING CV input. I. Filter cutoff coupling. When this button is pressed and illuminated, filter 2\u2019s cutoff frequency is set relatively to filter 1\u2019s cutoff frequency. For example, when filter 2\u2019s FREQUENCY knob is at 12 o\u2019clock, both filters share the same cutoff frequency. With the knob past (or before) 12 o\u2019clock, filter 2\u2019s cutoff frequency will follow filter 1\u2019s, but transposed up (or down).","title":"Controls"},{"location":"modules/blades/manual/#inputs-and-outputs","text":"1. CV inputs for filter mode, cutoff frequency, resonance and filter routing. 2. V/OCT input . Controls the cutoff frequency according to the 1 V/octave scale. 3. Drive CV input. If no patch cable is inserted in this input, a 2V voltage is applied to the drive circuit. This is why a moderate, but non-null, gain is obtained when the DRIVE knob [C] is fully turned counter-clockwise. 4. DC-coupled signal input. 5. Individual filter output. 6. Main output. Carries a blend of filter 1 and filter 2\u2019s outputs, depending on the ROUTING knob and CV.","title":"Inputs and Outputs"},{"location":"modules/blades/manual/#controlling-the-signal-path","text":"The ROUTING knob [G] acts as a dual crossfader. Firstly, it controls which proportion of filter 1 and filter 2\u2019s output is sent to the MAIN output (6) : only filter 1 when turned fully CCW, only filter 2 when turned fully CW, and a mix of both filters at 12 o\u2019clock. Secondly, it also controls which proportion of filter 1\u2019s input and filter 1\u2019s output is sent to filter 2\u2019s input (provided filter 2\u2019s IN is left unpatched). As a result, the following filter configurations can be obtained: Single: the MAIN output carries the output of filter 1. Parallel: the MAIN output carries a mix of filter 1 and filter 2\u2019s outputs, and both filters process the same signal from filter 1\u2019s input. Series: the MAIN output carries the output of filter 2, which processes filter 1\u2019s output. If you patch your own signal source into filter 2\u2019s input, then the ROUTING control simply acts as a crossfader between filter 1 and 2\u2019s outputs.","title":"Controlling the signal path"},{"location":"modules/blades/manual/#tips-and-patch-ideas","text":"Patch filter 2\u2019s output into filter 1\u2019s FREQUENCY CV input and vice-versa for some chaotic effects. Use filter 1 in self-oscillation as an oscillator (possibly with feedback from its own output to its FREQUENCY input to bend its waveform). Use filter 2 to wavefold and filter this raw waveform. When a filter self-oscillates, and thus behaves as a sine oscillator, its phase can be modulated through the MODE CV input. This allows the synthesis of metallic tones reminiscent of FM. Try modulating MODE through a VCA, for CV-controlled adjustment of phase-modulation depth. With the two filters in series, both set to a low-pass response, the module can be used as a voltage-con- trolled distortion with pre- and post- tone controls. Set filter 1 to a mild DRIVE , low FREQUENCY and RESO , and choose the high-pass response. The ROUTING knob now acts as a dry/wet control, for whatever function filter 2 performs. The intermediate responses between LP and BP, or BP and HP, have a shelving shape. This can turn Blades into a useful tool for EQ-ing and spectrally coloring signals. Since Blades \u2019 signal path is DC-coupled you can also use it to process CV signals: use FREQUENCY for portamento, RESO to add overshoot and wiggles. DRIVE lets you control the signal amplitude or even its shape.","title":"Tips and patch ideas"},{"location":"modules/blades/open_source/","text":"Github repository Schematics","title":"Open source"},{"location":"modules/blades/original_blurb/","text":"A dual multimode filter... A CV-controlled overdrive circuit capable of wavefolding. A clean 12dB/octave multimode filter self-oscillating cleanly across the audio range. Times two. And this could have stopped here. For all the in-betweens... What sets Blades apart is that options commonly presented as multiple choices (low-pass or high-pass? serial or parallel?) are presented here as a continuum , ready to be explored at the twist of a knob or with a CV. The filter response is continuously variable between low-pass, band-pass and high-pass, and delivers intermediate shelving responses, for more nuanced spectral coloring. A dual crossfader circuit allows the routing between the two filters to smoothly vary from single to parallel to series . And more... Originally thought as a complex filter, Blades turns out to be capable of much more: A dual distortion with spectral color control? An oscillator mixer with crossfading, wavefolding, and enough filtering to clean up the mess? A voice , using one filter as an oscillator, then distorting, folding it and filtering it with the second filter? A complex oscillator capable of FM, PM and AM?","title":"Original blurb"},{"location":"modules/blades/original_blurb/#a-dual-multimode-filter","text":"A CV-controlled overdrive circuit capable of wavefolding. A clean 12dB/octave multimode filter self-oscillating cleanly across the audio range. Times two. And this could have stopped here.","title":"A dual multimode filter..."},{"location":"modules/blades/original_blurb/#for-all-the-in-betweens","text":"What sets Blades apart is that options commonly presented as multiple choices (low-pass or high-pass? serial or parallel?) are presented here as a continuum , ready to be explored at the twist of a knob or with a CV. The filter response is continuously variable between low-pass, band-pass and high-pass, and delivers intermediate shelving responses, for more nuanced spectral coloring. A dual crossfader circuit allows the routing between the two filters to smoothly vary from single to parallel to series .","title":"For all the in-betweens..."},{"location":"modules/blades/original_blurb/#and-more","text":"Originally thought as a complex filter, Blades turns out to be capable of much more: A dual distortion with spectral color control? An oscillator mixer with crossfading, wavefolding, and enough filtering to clean up the mess? A voice , using one filter as an oscillator, then distorting, folding it and filtering it with the second filter? A complex oscillator capable of FM, PM and AM?","title":"And more..."},{"location":"modules/blinds/","text":"Key data Original printed manual Features A hub for your modulations Specifications Revisions and variants 2021 Key data Quad VC-Polarizer Parameter Value Width 12HP Depth 25mm +12V current 70mA -12V current 70mA Lifetime 06/16 to 04/22 Modulargrid Link Original printed manual PDF download Features A hub for your modulations Scale, invert and offset up to four modulation signals. Mix up to four CVs or audio sources. Multiply (ring-modulate) two audio sources, with adjustable carrier rejection. \"who can do more can do less\": each channel can be used as a plain VCA. Specifications All inputs DC-coupled. All inputs handle audio-rate signals. Input impedance: 100k for all inputs. CV offset range: +/- 5V. Gain scale: linear, a +5V CV translates to a gain of 1. Gain range: +/- 2. Revisions and variants 2021 Hardware revision (identified as 2021. v6 ) with minor manufacturability improvements, such as dimensions of PCB pads and holes.","title":"Index"},{"location":"modules/blinds/#key-data","text":"Quad VC-Polarizer Parameter Value Width 12HP Depth 25mm +12V current 70mA -12V current 70mA Lifetime 06/16 to 04/22 Modulargrid Link","title":"Key data"},{"location":"modules/blinds/#original-printed-manual","text":"PDF download","title":"Original printed manual"},{"location":"modules/blinds/#features","text":"","title":"Features"},{"location":"modules/blinds/#a-hub-for-your-modulations","text":"Scale, invert and offset up to four modulation signals. Mix up to four CVs or audio sources. Multiply (ring-modulate) two audio sources, with adjustable carrier rejection. \"who can do more can do less\": each channel can be used as a plain VCA.","title":"A hub for your modulations"},{"location":"modules/blinds/#specifications","text":"All inputs DC-coupled. All inputs handle audio-rate signals. Input impedance: 100k for all inputs. CV offset range: +/- 5V. Gain scale: linear, a +5V CV translates to a gain of 1. Gain range: +/- 2.","title":"Specifications"},{"location":"modules/blinds/#revisions-and-variants","text":"","title":"Revisions and variants"},{"location":"modules/blinds/#2021","text":"Hardware revision (identified as 2021. v6 ) with minor manufacturability improvements, such as dimensions of PCB pads and holes.","title":"2021"},{"location":"modules/blinds/manual/","text":"Installation Blinds requires a -12V/+12V power supply (2x5 pin connector). The red stripe of the ribbon cable (-12V side) must be oriented on the same side as the \"Red stripe\" marking on the board. The module draws 70mA from the -12V rail and 70mA from the +12V rail. Current consumption can reach 90mA on either rail depending on the color and brightness of the LEDs. Overview and signal flow Blinds is a 4-channel voltage-controlled signal polarizer. Each channel consists of a polarizer circuit, also known as a four-quadrant multiplier. This circuit acts like a VCA, except that a negative control voltage will cause the output signal to be inverted, instead of being silenced. Blinds' outputs are daisy-chained, allowing adjacent groups of 2, 3, or all 4 channels, to be mixed together. Controls, inputs and outputs A. Channel polarity and gain. At 12 o'clock, the channel is muted. Turn clockwise to amplify, turn counter-clock- wise to amplify and invert. B. Modulation attenuverter. Adjusts the amount and polarity of modulation from the modulation input (2), i.e. how much, and in which direction, the channel polarity and gain will wiggle around the central value set by A. 1. Signal input. Blinds' inputs are DC-coupled and accept both audio and CV signals. This input receives +5V when no patch cable is inserted. 2. Modulation input. This input is also DC-coupled. When audio-rate signals are present on both the signal and modulation input, Blinds works as a pure ring-modulator. 3. Signal output. When no patch cable is plugged into an output, the signal from this channel is routed to the next channel. For example, when no patch cable is patched into output 1, output 2 will contain the sum of channel 2 and channel 1. If nothing is patched into outputs 1, 2 and 3, then output 4 will contain the sum of all four channels. 4. Gain and polarity indicator. The color corresponds to the polarity (green = positive, red = negative), the bright- ness to the gain. 5. Output level and polarity indicator. Random bits Output equation The following equation describes the operation performed by each channel: Where Vout is the output voltage, Vin the input voltage, Vmod the control voltage, BigKnob and SmallKnob the position of the big and small knobs, represented as a number between -1 and 1 (0 being the 12 o'clock position). Because Vin is normalized to +5V, when nothing is patched into Vin , this equation becomes: In this case, the big knob controls an offset between -5V and +5V, and the small knob a gain between -1 and +1. In other word, each channel of Blinds can be used as an attenuverter with offset control circuit. Use as a ring modulator A ring modulator is an imperfect four-quadrant multiplier realized with a diode ring circuit. Because it is based on a bipolar VCA circuit, Blinds realizes a purer sounding version of ring-modulation, very close to the mathematical ideal of signal multiplication. Don't worry though, the familiar sounds of bells, american metaphysical circuses and Daleks are still there! When Blinds is used as a ring modulator, with audio rate signals going in both inputs, the big knob controls a very interesting parameter: carrier rejection (how much of the unmodulated signal will \"bleed\" on top of the ring-modulated signal). Zeroing a channel Because of mechanical backlash in the construction of the potentiometer, the vertical mark on the panel might not be perfectly aligned with the white pointer of the knob when a channel has zero offset. In addition, some envelope generators or LFO might have a residual \"bleed\" voltage - they sometimes sit a few mV below 0 after their release. Trust your ears and the LEDs when zeroing a channel!","title":"Manual"},{"location":"modules/blinds/manual/#installation","text":"Blinds requires a -12V/+12V power supply (2x5 pin connector). The red stripe of the ribbon cable (-12V side) must be oriented on the same side as the \"Red stripe\" marking on the board. The module draws 70mA from the -12V rail and 70mA from the +12V rail. Current consumption can reach 90mA on either rail depending on the color and brightness of the LEDs.","title":"Installation"},{"location":"modules/blinds/manual/#overview-and-signal-flow","text":"Blinds is a 4-channel voltage-controlled signal polarizer. Each channel consists of a polarizer circuit, also known as a four-quadrant multiplier. This circuit acts like a VCA, except that a negative control voltage will cause the output signal to be inverted, instead of being silenced. Blinds' outputs are daisy-chained, allowing adjacent groups of 2, 3, or all 4 channels, to be mixed together.","title":"Overview and signal flow"},{"location":"modules/blinds/manual/#controls-inputs-and-outputs","text":"A. Channel polarity and gain. At 12 o'clock, the channel is muted. Turn clockwise to amplify, turn counter-clock- wise to amplify and invert. B. Modulation attenuverter. Adjusts the amount and polarity of modulation from the modulation input (2), i.e. how much, and in which direction, the channel polarity and gain will wiggle around the central value set by A. 1. Signal input. Blinds' inputs are DC-coupled and accept both audio and CV signals. This input receives +5V when no patch cable is inserted. 2. Modulation input. This input is also DC-coupled. When audio-rate signals are present on both the signal and modulation input, Blinds works as a pure ring-modulator. 3. Signal output. When no patch cable is plugged into an output, the signal from this channel is routed to the next channel. For example, when no patch cable is patched into output 1, output 2 will contain the sum of channel 2 and channel 1. If nothing is patched into outputs 1, 2 and 3, then output 4 will contain the sum of all four channels. 4. Gain and polarity indicator. The color corresponds to the polarity (green = positive, red = negative), the bright- ness to the gain. 5. Output level and polarity indicator.","title":"Controls, inputs and outputs"},{"location":"modules/blinds/manual/#random-bits","text":"","title":"Random bits"},{"location":"modules/blinds/manual/#output-equation","text":"The following equation describes the operation performed by each channel: Where Vout is the output voltage, Vin the input voltage, Vmod the control voltage, BigKnob and SmallKnob the position of the big and small knobs, represented as a number between -1 and 1 (0 being the 12 o'clock position). Because Vin is normalized to +5V, when nothing is patched into Vin , this equation becomes: In this case, the big knob controls an offset between -5V and +5V, and the small knob a gain between -1 and +1. In other word, each channel of Blinds can be used as an attenuverter with offset control circuit.","title":"Output equation"},{"location":"modules/blinds/manual/#use-as-a-ring-modulator","text":"A ring modulator is an imperfect four-quadrant multiplier realized with a diode ring circuit. Because it is based on a bipolar VCA circuit, Blinds realizes a purer sounding version of ring-modulation, very close to the mathematical ideal of signal multiplication. Don't worry though, the familiar sounds of bells, american metaphysical circuses and Daleks are still there! When Blinds is used as a ring modulator, with audio rate signals going in both inputs, the big knob controls a very interesting parameter: carrier rejection (how much of the unmodulated signal will \"bleed\" on top of the ring-modulated signal).","title":"Use as a ring modulator"},{"location":"modules/blinds/manual/#zeroing-a-channel","text":"Because of mechanical backlash in the construction of the potentiometer, the vertical mark on the panel might not be perfectly aligned with the white pointer of the knob when a channel has zero offset. In addition, some envelope generators or LFO might have a residual \"bleed\" voltage - they sometimes sit a few mV below 0 after their release. Trust your ears and the LEDs when zeroing a channel!","title":"Zeroing a channel"},{"location":"modules/blinds/open_source/","text":"Github repository Schematics","title":"Open source"},{"location":"modules/blinds/original_blurb/","text":"Remote-controlled Shades Blinds is a 4-channel voltage-controlled signal polarizer. Each channel consists of a polarizer circuit , also known as a four-quadrant multiplier. This circuit acts like a VCA, except that a negative control voltage will cause the output signal to be inverted, instead of being silenced. Blinds' outputs are daisy-chained , allowing adjacent groups of 2, 3, or all 4 channels, to be mixed together.","title":"Original blurb"},{"location":"modules/blinds/original_blurb/#remote-controlled-shades","text":"Blinds is a 4-channel voltage-controlled signal polarizer. Each channel consists of a polarizer circuit , also known as a four-quadrant multiplier. This circuit acts like a VCA, except that a negative control voltage will cause the output signal to be inverted, instead of being silenced. Blinds' outputs are daisy-chained , allowing adjacent groups of 2, 3, or all 4 channels, to be mixed together.","title":"Remote-controlled Shades"},{"location":"modules/braids/","text":"Key data Original printed manual Features Synthesis models The classics Direct digital synthesis Physical and percussive models Wavetables Noise sources Additional settings Specifications Revisions and variants 2015 Key data Macro-oscillator Parameter Value Width 16HP Depth 25mm +12V current 100mA -12V current 15mA Lifetime 08/13 to 10/17 Modulargrid Link Processor STM32F103CBT6 @ 72 MHz DAC DAC8551 Original printed manual PDF download Features Synthesis models The classics CS-80 style sawtooth with a notch. Continuously variable morphing between triangle, sawtooth, square and pulse, with character control. Square/sawtooth with pulse width control. Triangle to sine morphing, with wavefolder. Direct digital synthesis Band-limited dual pulse train, with detuning. Dual square or sawtooth oscillator with hard sync. Triple saw, square, triangle or sine. Stack of three ring-modulated sine waves. Swarm of seven sawtooth waves. Comb-filtered sawtooth wave Circuit-bent sawtooth generator with sample rate reduction and bit toggling. Direct synthesis of filtered waveforms, casio CZ style. Low-fi or hi-fi vowel/formant synthesis. Harmonic oscillator. FM with various feedback paths. Physical and percussive models Plucked string (Karplus Strong). Bowed string. Reed and flute. Bell and metallic drum. 808 bass drum, cymbal noise and snare drum. Wavetables 256 waveforms, organized as 21 wavetables or as a 16x16 XY map. 4-note chord synthesis. Noise sources Noise processed by a tuned multimode filter. Noise processed by a dual BP filter. Clocked digital noise. Cloud of sinusoidal grains. Particle synthesis. Additional settings These settings are accessible through a menu, and are not CV controllable. Bit-depth (from 4 to 16 bits) and sample rate (from 4kHz to 96kHz). Quantizer on the CV-input with a large selection of scales. Analog VCO-style linear detuning of higher frequencies. Analog VCO-style pitch drifting. Waveform quirks, unique to each module built. Built-in AD envelope, assignable to the oscillator frequency, the COLOR and TIMBRE parameters, and to the amplitude. META mode enabling CV-controlled model selection with the FM input. Specifications All inputs: 100k impedance, DC to 4kHz. 12-bit CV capture. 96kHz, 16-bit audio processing (some algorithms are 2x or 4x oversampled). Revisions and variants 2015 Hardware revision labelled \"v5\" with the following differences: 2x5 power connector (originally 2x8). Built-in 5V regulator. FINE knob handled in software (originally handled as an offset on the FM signal, not working in META mode as a side-effect) Thonkiconn jacks. Potentiometers have no center detent.","title":"Index"},{"location":"modules/braids/#key-data","text":"Macro-oscillator Parameter Value Width 16HP Depth 25mm +12V current 100mA -12V current 15mA Lifetime 08/13 to 10/17 Modulargrid Link Processor STM32F103CBT6 @ 72 MHz DAC DAC8551","title":"Key data"},{"location":"modules/braids/#original-printed-manual","text":"PDF download","title":"Original printed manual"},{"location":"modules/braids/#features","text":"","title":"Features"},{"location":"modules/braids/#synthesis-models","text":"","title":"Synthesis models"},{"location":"modules/braids/#the-classics","text":"CS-80 style sawtooth with a notch. Continuously variable morphing between triangle, sawtooth, square and pulse, with character control. Square/sawtooth with pulse width control. Triangle to sine morphing, with wavefolder.","title":"The classics"},{"location":"modules/braids/#direct-digital-synthesis","text":"Band-limited dual pulse train, with detuning. Dual square or sawtooth oscillator with hard sync. Triple saw, square, triangle or sine. Stack of three ring-modulated sine waves. Swarm of seven sawtooth waves. Comb-filtered sawtooth wave Circuit-bent sawtooth generator with sample rate reduction and bit toggling. Direct synthesis of filtered waveforms, casio CZ style. Low-fi or hi-fi vowel/formant synthesis. Harmonic oscillator. FM with various feedback paths.","title":"Direct digital synthesis"},{"location":"modules/braids/#physical-and-percussive-models","text":"Plucked string (Karplus Strong). Bowed string. Reed and flute. Bell and metallic drum. 808 bass drum, cymbal noise and snare drum.","title":"Physical and percussive models"},{"location":"modules/braids/#wavetables","text":"256 waveforms, organized as 21 wavetables or as a 16x16 XY map. 4-note chord synthesis.","title":"Wavetables"},{"location":"modules/braids/#noise-sources","text":"Noise processed by a tuned multimode filter. Noise processed by a dual BP filter. Clocked digital noise. Cloud of sinusoidal grains. Particle synthesis.","title":"Noise sources"},{"location":"modules/braids/#additional-settings","text":"These settings are accessible through a menu, and are not CV controllable. Bit-depth (from 4 to 16 bits) and sample rate (from 4kHz to 96kHz). Quantizer on the CV-input with a large selection of scales. Analog VCO-style linear detuning of higher frequencies. Analog VCO-style pitch drifting. Waveform quirks, unique to each module built. Built-in AD envelope, assignable to the oscillator frequency, the COLOR and TIMBRE parameters, and to the amplitude. META mode enabling CV-controlled model selection with the FM input.","title":"Additional settings"},{"location":"modules/braids/#specifications","text":"All inputs: 100k impedance, DC to 4kHz. 12-bit CV capture. 96kHz, 16-bit audio processing (some algorithms are 2x or 4x oversampled).","title":"Specifications"},{"location":"modules/braids/#revisions-and-variants","text":"","title":"Revisions and variants"},{"location":"modules/braids/#2015","text":"Hardware revision labelled \"v5\" with the following differences: 2x5 power connector (originally 2x8). Built-in 5V regulator. FINE knob handled in software (originally handled as an offset on the FM signal, not working in META mode as a side-effect) Thonkiconn jacks. Potentiometers have no center detent.","title":"2015"},{"location":"modules/braids/firmware/","text":"Download Latest version (1.8) Firmware update procedure Revisions v1.8 Rewrote from scratch the band-limited waveform synthesis code used in the analog waveform models (CS-80 saw, waveform morphing, square-saw morphing, sync square, triple saw, triple square). As a result, the sound quality of these models has been improved. The generated waveforms are crisper, with a more consistent amplitude, and less aliasing. Increased the range of the TIMBRE and COLOR settings on the CSAW model. It is still possible to synthesize the CS-80 \"sawtooth with a notch\" waveform of the previous revisions, but this model now covers a larger range of saw/square hybrid tones. Added a new synthesis model, HARM , which generates a mixture of sine harmonics. COLOR modifies the distribution of the amplitudes of each harmonics, around a central frequency set by TIMBRE . Improved the quality of the Z?PF models when they are played with fast envelopes, by adding linear interpolation to the TIMBRE parameter. Improved the quality of the VFOF model. Removed some of the \"clickiness\" of the built-in VCA. Improved the DRFT setting, which generates analog-style frequency drifting and detuning. The random process generating the noise has a more realistic behavior; and the amount of frequency drifting can be adjusted (instead of a plain on/off switch). Reworked the SIGN setting, which was designed to give each module a unique tone coloration, and glitches, generated from its serial number. The generated curves are now more \"fuzzy\" and \"organic\"; and the amount of coloration can be adjusted (instead of a plain on/off switch). Exposed many of the parameters of the internal AD envelope. The TDST setting has been replaced by 4 new individual settings to control the amount of FM , TIMBRE , COLOR and VCA modulation from the internal AD envelope \u2013 making it dead easy to create drum sounds with Braids. The TENV setting (the preset envelope shapes with silly names) has disappeared and you can now control both the attack and decay of the internal AD. Added many scales (about 50!) to the built-in quantizer, whose code has been rewritten from scratch to allow all kind of stuff not based on the 12TET system. A new setting, ROOT , selects the root note upon which the scale is built. Reversed the polarity of the output signal, so that the sawtooth wave ramps up. v1.7 Added 808 kick and snare models. Added cymbal noise model. Added triple sine and triple triangle models. v1.6 Fixed an issue causing rare glitches with the sawtooth and square modes. v1.5 Added a new TDST option to assign a behavior to the trigger input: phase reset (sync), AD timbre modulation, AD amplitude envelope, and AD timbre/amplitude modulation. Visual feedback added to the META mode. The CV-controlled model change in META mode is now relative to the current model, as selected by the encoder. v1.4 Fixed a bug that prevented the system settings to be written in memory in some situations. Added a new setting to the RANG menu that locks the output frequency to 440 Hz (useful as a reference for tuning other modules). Altered the phase and amplitude of some waveforms in the WTBL and WMAP modes to make the interpolation/scanning smoother. Added a new wavetable mode, WLIN , which allows the wavetable data to be scanned linearly by the TIMBRE control; while COLOR morphs between various interpolation methods and resolutions (between waveforms or within waveform sample data). Added a new wavetable mode, WTx4 , generating four voices of wavetable synthesis. TIMBRE morphs through a representative selection of the waveforms; while COLOR selects various intervals between the four voices (unison with detuning, octaves, chords\u2026) Added two new synthesis modes, with 3 voices of anti-aliased sawtooth or square waves. TIMBRE and COLOR control the interval/detuning of the second and third voices. Added a new synthesis model, DRUM , which is a variant of BELL generating an additive timpani-like sound. TIMBRE controls its decay, while COLOR the tone brightness. Reworked the FOLD mode to provide more destructive wavefolding on its triangle/sine internal inputs. The amount of wavefolding decreases when note frequency is increased to prevent aliasing. Reworked the FBFM mode. The range of the FM index control ( TIMBRE ) is dynamically adjusted as a function of the COLOR and main frequency settings. This allows a greater amount of destructive FM in the low and mid ranges, while keeping aliasing under control when the frequency reaches the higher octaves. v1.3 Initial release.","title":"Firmware"},{"location":"modules/braids/firmware/#download","text":"Latest version (1.8) Firmware update procedure","title":"Download"},{"location":"modules/braids/firmware/#revisions","text":"","title":"Revisions"},{"location":"modules/braids/firmware/#v18","text":"Rewrote from scratch the band-limited waveform synthesis code used in the analog waveform models (CS-80 saw, waveform morphing, square-saw morphing, sync square, triple saw, triple square). As a result, the sound quality of these models has been improved. The generated waveforms are crisper, with a more consistent amplitude, and less aliasing. Increased the range of the TIMBRE and COLOR settings on the CSAW model. It is still possible to synthesize the CS-80 \"sawtooth with a notch\" waveform of the previous revisions, but this model now covers a larger range of saw/square hybrid tones. Added a new synthesis model, HARM , which generates a mixture of sine harmonics. COLOR modifies the distribution of the amplitudes of each harmonics, around a central frequency set by TIMBRE . Improved the quality of the Z?PF models when they are played with fast envelopes, by adding linear interpolation to the TIMBRE parameter. Improved the quality of the VFOF model. Removed some of the \"clickiness\" of the built-in VCA. Improved the DRFT setting, which generates analog-style frequency drifting and detuning. The random process generating the noise has a more realistic behavior; and the amount of frequency drifting can be adjusted (instead of a plain on/off switch). Reworked the SIGN setting, which was designed to give each module a unique tone coloration, and glitches, generated from its serial number. The generated curves are now more \"fuzzy\" and \"organic\"; and the amount of coloration can be adjusted (instead of a plain on/off switch). Exposed many of the parameters of the internal AD envelope. The TDST setting has been replaced by 4 new individual settings to control the amount of FM , TIMBRE , COLOR and VCA modulation from the internal AD envelope \u2013 making it dead easy to create drum sounds with Braids. The TENV setting (the preset envelope shapes with silly names) has disappeared and you can now control both the attack and decay of the internal AD. Added many scales (about 50!) to the built-in quantizer, whose code has been rewritten from scratch to allow all kind of stuff not based on the 12TET system. A new setting, ROOT , selects the root note upon which the scale is built. Reversed the polarity of the output signal, so that the sawtooth wave ramps up.","title":"v1.8"},{"location":"modules/braids/firmware/#v17","text":"Added 808 kick and snare models. Added cymbal noise model. Added triple sine and triple triangle models.","title":"v1.7"},{"location":"modules/braids/firmware/#v16","text":"Fixed an issue causing rare glitches with the sawtooth and square modes.","title":"v1.6"},{"location":"modules/braids/firmware/#v15","text":"Added a new TDST option to assign a behavior to the trigger input: phase reset (sync), AD timbre modulation, AD amplitude envelope, and AD timbre/amplitude modulation. Visual feedback added to the META mode. The CV-controlled model change in META mode is now relative to the current model, as selected by the encoder.","title":"v1.5"},{"location":"modules/braids/firmware/#v14","text":"Fixed a bug that prevented the system settings to be written in memory in some situations. Added a new setting to the RANG menu that locks the output frequency to 440 Hz (useful as a reference for tuning other modules). Altered the phase and amplitude of some waveforms in the WTBL and WMAP modes to make the interpolation/scanning smoother. Added a new wavetable mode, WLIN , which allows the wavetable data to be scanned linearly by the TIMBRE control; while COLOR morphs between various interpolation methods and resolutions (between waveforms or within waveform sample data). Added a new wavetable mode, WTx4 , generating four voices of wavetable synthesis. TIMBRE morphs through a representative selection of the waveforms; while COLOR selects various intervals between the four voices (unison with detuning, octaves, chords\u2026) Added two new synthesis modes, with 3 voices of anti-aliased sawtooth or square waves. TIMBRE and COLOR control the interval/detuning of the second and third voices. Added a new synthesis model, DRUM , which is a variant of BELL generating an additive timpani-like sound. TIMBRE controls its decay, while COLOR the tone brightness. Reworked the FOLD mode to provide more destructive wavefolding on its triangle/sine internal inputs. The amount of wavefolding decreases when note frequency is increased to prevent aliasing. Reworked the FBFM mode. The range of the FM index control ( TIMBRE ) is dynamically adjusted as a function of the COLOR and main frequency settings. This allows a greater amount of destructive FM in the low and mid ranges, while keeping aliasing under control when the frequency reaches the higher octaves.","title":"v1.4"},{"location":"modules/braids/firmware/#v13","text":"Initial release.","title":"v1.3"},{"location":"modules/braids/manual/","text":"This user manual documents the version 1.8 of the firmware. If the settings and menus of your unit look a bit different, it's likely that an older firmware revision is installed. You can find out which version is installed by clicking on the encoder and scrolling to the end of the menu. If an older version is installed, Please upgrade! Overview Braids is a voltage-controlled digital sound source. It features 45 waveform synthesis models, which cover techniques such as FM, wavetable synthesis, waveguide synthesis or analog emulation. Most synthesis models are built with one or several oscillators connected through crossfaders, modulators, filters, or delay lines. Each synthesis model is controlled by 2 parameters, called Timbre and Color . Most of the time, Timbre will impact the brightness of the sound. Installation Braids is designed for Eurorack synthesizer systems and occupies 16 HP of space. Boards manufactured prior to july 2015 require a -12V/+12V / +5V supply (2x8 connector), and draw 15mA from the -12V/+12V rails and 85mA from the +5V rail. Boards manufactured after july 2015 require a -12V/+12V (2x5 connector), and draw 15mA from the -12V rail and 100mA from the +12V rail. In any case, the red stripe of the ribbon cable must be oriented on the same side as the \"Red stripe\" marking on the printed circuit board. Controls A : LED display and rotary encoder. When the module starts, the LED display shows the name of the active synthesis model, and the encoder can be used to select a model. Click the encoder to display a list of additional settings and options. Click the encoder to select an option and modify its value. Once the value has been modified to your liking, click the encoder to get back to the list of options. Selecting the first option (\"WAVE\"), saves to memory the current setup and brings you back in model selection mode. B, C: Fine and coarse frequency control. D : Frequency modulation attenuverter. This knob controls the amount and polarity of modulation applied to frequency, from the FM CV input jack. E : Timbre. This parameter controls the main evolution and motion of the timbre - for example pulse width for a square oscillator or modulation index for a FM model. F : Modulation attenuverter. This knob controls the amount and polarity of modulation applied to the TIMBRE parameter, from the TIMBRE CV input jack. G : Color. This knob controls a second dimension of sound, for example the symmetry of an oscillator or the modulation frequency for a FM model. Inputs and outputs TRIG : This trigger input serves three purposes. 1/ Braids' physical models need to be \"excited\" by an impulse on this input to give birth to a sound. 2/ The other models will treat the trigger as a reset signal, bringing the phase of the oscillator(s) to 0. 3/ This input can also be used to trigger an internal AD envelope applied to the parameters of your choice, to create sound animation and attacks without an external envelope module. V/OCT : 1V/Oct frequency CV input. FM : Frequency modulation CV input - the scale and polarity of this signal is set by the FM attenuverter. TIMBRE and COLOR : Control voltages for the Timbre and Color parameters. A value of 0V corresponds to the minimum position of the knob. A value of +5V corresponds to the maximum position of the knob. This CV is offset by the current position of the knob. OUT : Signal output. Loudness is model-dependent - for example a pure sine wave is always at maximum amplitude; while a ring-modulated sine-wave will have peaks and valleys due to amplitude modulation, and will thus sound quieter. Models CSAW This model is inspired by a quirk/defect of the Yamaha CS80 sawtooth wave shape, consisting of a fixed-width \"notch\" after the raising edge. The width of the notch can be controlled by TIMBRE ; and its depth and polarity can be controlled by COLOR - producing phasing effects. /\\/|-_-_ This model produces the classic waveform trajectory from triangle to sawtooth to square to pulse found in synthesizers such as the RSF Kobol or the Moog Voyager. TIMBRE sweeps through the waveforms. COLOR morphs from several tonal characters by increasingly removing the high-frequencies with a 1-pole filter, and recreating them with a waveshaper. /|/|-_-_ This model blends a sawtooth wave with dephasing control, with a square wave with PWM. TIMBRE controls the dephasing amount or pulse width, and COLOR morphs the waveshape from sawtooth to square. FOLD This model is built with sine and triangle oscillators sent into a wavefolder. TIMBRE controls the wavefolder strength, and COLOR controls the balance between the sine and triangle signals sent to it. _|_|_|_|_ This digital synthesis algorithm generates a smooth sequence of waveforms, transitioning from a sine wave to a Dirac comb, as controlled by TIMBRE . The intermediary steps are reminiscent of a single formant. Two such waveshapes are blended together, with the detuning amount controlled by COLOR . SYN-_-_ SYN/| These model synthesize the classic 2-oscillator hardsync patch, with both oscillators emitting square or saw waves. The main oscillator frequency controls the master frequency. The interval between master and slave is controlled by TIMBRE . COLOR controls the balance between the two oscillators. /|/|x3 -_-_x3 /\\x3 SIx3 Three sawtooth (or square, triangle, sine) oscillators which can be individually tuned. COLOR and TIMBRE control the relative frequency of the second and third oscillator with respect to the main oscillator. These two controls are quantized to \"snap\" on musical intervals like octaves or fifths. RING Three sine wave oscillators are ring-modulated together, and colored by a waveshaper. The main oscillator frequency controls the frequency of the first sine wave, and TIMBRE and COLOR control the relative frequency of the second and third sine waves. /|/|/|/| This model simulates a swarm of 7 sawtooth waves. TIMBRE controls their detuning, and COLOR applies a high-pass filter to the resulting sound. /|/|_|_|_ This model generates a sawtooth waveform, and sends it into a comb filter (tuned delay line). The frequency of the delay line tracks the frequency of the sawtooth oscillator, with a transposition controlled by the TIMBRE knob. COLOR selects the feedback amount and polarity: at 12 o'clock, no feedback is applied. From 12 o'clock to 5 o'clock, positive feedback is increasingly applied. From 12 o'clock to 7 o'clock, negative feedback is progressively applied. TOY* This model traverses a space of timbres typical of (circuit-bent) electronic musical toys. TIMBRE simulates an alteration of the toy's clock rate, while COLOR creates glitches or short-circuits on a converter or memory chip's data lines. ZLPF, ZPKF, ZBPF, ZHPF This family of models directly synthesize in the time-domain the response of a low-pass, peaking, band-pass or high-pass filter excited by classic analog waveforms. Rather than synthesizing the waveform and filtering it (which is what a VA synthesizer would do), this approach directly aims at building the filtered waveshape from scratch. This technique has been used in the Casio CZ or the Roland D series, but is extended here to cover different filter types and waveshapes. TIMBRE controls the cutoff frequency of the filter. COLOR continuously modifies the waveshape, from saw to square to triangle. VOSM This model uses a combination of 3 oscillators arranged in a clever ring-modulation/hardsync patch to emulate formant synthesis - a technique named VOSIM and described by Kaegi and Tempelaars. COLOR and TIMBRE control the relative frequencies of the two formants. VOWL, VFOF Both models synthesize vowel sounds. VOWL is a faithful recreation of early computer speech synthesis programs. VFOF uses a simplified version of Rodet's FOF synthesis technique. Both have the same control layout: TIMBRE controls the vowel, morphing between a, e, i, o, u. COLOR shifts the formants in frequency. Main oscillator frequency and COLOR can be used altogether to simulate age and gender transformations. HARM This model uses additive synthesis, by summing 12 sine harmonics. COLOR modifies the distribution of the amplitudes of each harmonics, around a central frequency set by TIMBRE . FM, FBFM, WTFM Three flavors of 2-operator phase-modulation synthesis. TIMBRE controls the modulation amount. COLOR controls the relative frequency interval between modulator and carrier. FM is a well-behaved implementation. FBFM uses feedback from the carrier to itself to produce harsher tones. WTFM uses two feedback paths, from carrier to modulator and carrier to itself to achieve droning, unstable tones. PLUK Raw plucked string synthesis. TIMBRE controls the damping, COLOR the plucking position. This model needs to be \"excited\" by a trigger signal. BOWD Bowed string modeling. TIMBRE controls the friction level, COLOR the bowing position. A trigger or gate signal is required. Note that this model does not include a body filter - which would be necessary to simulate an actual string instrument. BLOW, FLUTE Reed or flute instrument model. TIMBRE controls the air pressure, COLOR the geometry of the instrument. Note that this model does not include a filter - which would have been necessary to simulate an actual instrument. BELL This model established by Risset uses additive synthesis to recreate the tone of a bell. TIMBRE controls the damping of the sound; and COLOR the inharmonicity of the sound. This model needs to be \"excited\" by a trigger signal (or raising edge of a gate signal). DRUM This variant of the BELL model uses different parameters (partials frequencies and amplitudes) to generate a sound reminiscent of a metallic drum. TIMBRE controls the damping and COLOR the brightness. KICK This model is a simulation of the TR-808 bass drum circuit. TIMBRE controls the decay time, while COLOR controls the brightness (\"tone\") of the sound. The main oscillator frequency controls the tuning of the bridged-T filter. CYMB Raw material for cymbal sound synthesis, as inspired by the TR-808 circuits. COLOR controls the balance between a droning sum of square waves and noise. TIMBRE controls the cutoff of a band-pass filter applied on the resulting signal. SNAR This model is a simulation of the TR-808 snare drum circuit. TIMBRE controls the balance between the two modes of the resonator (\"tone\"), and COLOR controls the amount of noise (\"snappy\"). WTBL WTBL is a classic implementation of wavetable synthesis. TIMBRE sweeps the wavetable, and COLOR selects one of the 20 wavetables to play with. The waveforms are interpolated when traveling through a wavetable, but not when switching from one table to another. WMAP WMAP is a two-dimensional implementation of wavetable synthesis. 256 waveforms have been laid out in a 16x16 grid, so that adjacent waveforms are similar sounding. The TIMBRE parameter scans the table in the X direction, and the COLOR parameter scans the table in the Y direction, with smooth interpolation across the two directions. WLIN WLIN allows one dimensional scanning through the entirety of Braids' wavetables. TIMBRE moves through the waves, while COLOR selects the interpolation method. When COLOR is at 7 o'clock, no interpolation is applied. When COLOR is at 10 o 'clock, interpolation is applied between samples, but not between waves. When COLOR is at 12 o'clock, interpolation is always applied. When COLOR goes past 12 o'clock, interpolation is applied between waves, but the resolution of the playback resolution is decreased. WTx4 This mode is a 4-voice variant of WLIN . TIMBRE morphs through a small selection of 16 waves. COLOR selects the harmonic structures between the 4 voices - from a predefined set of chords. When COLOR is at 7 o'clock, all voices are playing the same note with a variable amount of detuning, creating a thick chorus effect. NOIS This model filters white noise with a state-variable filter. The main oscillator frequency controls the cutoff frequency of the filter. TIMBRE controls the resonance of the filter. COLOR performs a crossfade between the low-pass and high-pass outputs of the filter. TWNQ This \"Twin Peaks\" model generates white noise and process it with two band-pass filters (resonators). TIMBRE controls the Q factor of the filters, and COLOR changes their spacing. The frequency of both filters track the main frequency. CLKN This model generates random samples at a given rate, determined by the main pitch control. TIMBRE controls the periodicity of the generator (up to a 2 samples cycle), and COLOR its quantization level (from 2 distinct values to 32 distinct values). CLOU, PRTC These granular synthesis models create natural textures by mixing short grains of windowed sine waves (CLOU) or short decaying \"pings\" (PRTC). The frequency of the grains is controlled by the main frequency control, but is randomized by an amount proportional to the COLOR control. TIMBRE controls the density and overlap of the grains. QPSK This model generates - in the audio frequency range - the kind of modulated signals used in digital telecommunication systems. The main oscillator frequency is the carrier frequency. The bit-rate is controlled by the TIMBRE knob. The COLOR knob sets an 8-bit value which is modulated into the carrier using QPSK modulation. A 16-byte synchronization frame is sent on every trigger/gate, or every 256 data bytes. Options META allows the synthesis model to be selected by the FM CV. When this mode is active, frequency modulation through the FM CV input is no longer possible - but is replaced by CV-controlled model selection. This option is great for creating sequences featuring the different synthesis models. Keep in mind that discontinuities might be heard when switching from one model to the other! The EDIT encoder can still be used to scroll through synthesis models; and the CV applies to the FM input allows you to scroll forward (positive voltage) or backwards (negative voltage) in the list. BITS selects the bit-depth of the data sent to DAC. RATE selects the refresh rate of the DAC. Note that a handful of models are internally rendered at 48kHz (instead of 96kHz); so the difference between 48kHz and 96kHz might be non-existent for the most complex models. Note also that conversely, to reduce aliasing, the simplest models are rendered internally at 192kHz or 384kHz. TSRC selects a trigger source: EXT. uses the gate/trigger jack; AUTO additionally tracks changes in the V/OCT frequency input larger than a semitone and generates a trigger on each of these. This allows, for example, the physical models or the internal AD generator to be controlled by a note sequencer which does not provide gate outputs. TDLY applies a delay between the moment the trigger is received and the moment the note is \"struck\" on the physical models. We have observed that some CV-gate converters or sequencers sometimes have slow settling times, or have a short timing errors between the refresh of their analog and digital outputs. Delaying the processing of the trigger allows the physical model to sample the accurate CV rather than a fluctuating one - which can cause unwanted glitches or portamento-like effects at note onsets. |\\ATT, |\\DEC are the attack and decay time of the internal AD envelope generator. |\\FM, |\\TIM, |\\COL, |\\VCA control the amount of modulation from the internal AD envelope generator to the FM, Timbre, Color and output amplitude parameters. When all these settings are null, the TRIG input works as a sync / reset input. RANG chooses the range of the \"coarse\" knob. EXT. adjusts the range of this knob +/- 4 octaves around the note received on the V/Oct input. Because of this, when no frequency CV signal is sent to the module (which would be the equivalent to sending a CV of 0V - corresponding to a very low note!), the coarse button will have a bias towards low frequencies, which might not always be desirable. FREE adjusts the range of the coarse knob to +/- 4 octave centered around C3 (261.5 Hz). This setting is recommended when the module is used with no external signal on the V/Oct CV input. XTND (extended) provides a larger frequency range, but disables accurate V/Oct scaling as a side effect. The last option ( 440 ) locks the oscillator frequency to 440 Hz exactly - helpful for tuning another VCO. OCTV is a transposition (by octave) switch. QNTZ applies a quantification to the incoming V/OCT control voltage. The frequency can be quantized to semitones, or to one of the many available scales, or disabled. ROOT selects the root note upon which is built the quantizer's scale. FLAT applies a detuning in the lower and higher frequencies, to recreate some of the tuning imperfections of VCOs. DRFT recreates the drifting of a disastrously designed VCO. SIGN applies grungy glitches/waveform imperfections to the output signal. The exact behavior of this option is unique to each module built. BRIG adjusts the screen brightness. Calibration The module is factory-calibrated using precision voltage sources. Follow this procedure only if you want to compensate for inaccuracies in your CV sources, or if your module has lost its calibration settings following a fault or the installation of alternative firmware. To calibrate the unit, disconnect any signal from the FM input, and connect the note CV output of a well-calibrated keyboard interface or MIDI-CV converter to the V/OCT input. Move the COARSE and FINE knobs to 12 o'clock position. Go to CAL. in the options list, and keep the encoder pressed for 1s (this is not an option you want to select by mistake during a performance !). The screen displays >C2 . Send a voltage of 1V to the CV input. Click on the encoder. The screen displays >C4 . Send a voltage of 3V to the CV input. Click on the encoder to finish calibration. Because Braids uses this software calibration procedure, it is compatible with the 1.2V/Oct standard too! Here is a tip: you can very well perform the calibration procedure with another pair of notes 2 octaves apart, and with the COARSE knob in another position. This can be used to shift up or down the range of the COARSE knob. Toys Following CAL. in the menu is a screen showing a visual representation of the internal ADC readings for the TIMBRE , COLOR , V/OCT and FM inputs. This page is helpful for visualizing the polarity and range of incoming CV signals. The next option shows a scrolling line of text. TIMBRE controls the scrolling; and a gate/trigger can be used to scroll the text left by one column. To edit the text, keep the encoder pressed for more than 1s. Rotate the encoder to select the first character. Click to move to the next character and continue editing. Once the line of text has been composed, select the last character (all segments lit) to confirm. At any time, you can also hold the encoder to leave the edit mode. Firmware update procedure Unplug all CV inputs/outputs from the module. Connect the output of your audio interface/sound card to the FM input ( 3 ). Set the FINE knob ( B ) to 12 o'clock , and the FM attenuverter ( D ) to 5 o'clock. Power on your modular system with Braids' encoder pressed. The screen will show _RDY , with a \"snake\" pattern on the first character. Make sure that no additional sound (such as email notification sounds, background music etc.) from your computer will be played during the procedure. Make sure that your speakers/monitors are not connected to your audio interface - the noises emitted during the procedure are aggressive and can harm your hearing. On non-studio audio equipment (for example the line output from a Desktop computer), you might have to turn up the gain to the maximum. When you are all set, play the firmware update file into the module. The display shows the number of data packets received. The firmware contains between 90 and 112 packets, and the unit reboots after the last packet has been received. In case the signal level is inadequate, the unit will display @SYN . Try adjusting the position of the FM attenuverter, click the encoder and retry from the start of the update file. The unit displays @CRC if a data packet is corrupted. It is suggested in this case to retry the procedure from another computer/audio interface, and to make sure that no piece of equipment (equalizer, FX processor) is inserted in the signal chain.","title":"Manual"},{"location":"modules/braids/manual/#overview","text":"Braids is a voltage-controlled digital sound source. It features 45 waveform synthesis models, which cover techniques such as FM, wavetable synthesis, waveguide synthesis or analog emulation. Most synthesis models are built with one or several oscillators connected through crossfaders, modulators, filters, or delay lines. Each synthesis model is controlled by 2 parameters, called Timbre and Color . Most of the time, Timbre will impact the brightness of the sound.","title":"Overview"},{"location":"modules/braids/manual/#installation","text":"Braids is designed for Eurorack synthesizer systems and occupies 16 HP of space. Boards manufactured prior to july 2015 require a -12V/+12V / +5V supply (2x8 connector), and draw 15mA from the -12V/+12V rails and 85mA from the +5V rail. Boards manufactured after july 2015 require a -12V/+12V (2x5 connector), and draw 15mA from the -12V rail and 100mA from the +12V rail. In any case, the red stripe of the ribbon cable must be oriented on the same side as the \"Red stripe\" marking on the printed circuit board.","title":"Installation"},{"location":"modules/braids/manual/#controls","text":"A : LED display and rotary encoder. When the module starts, the LED display shows the name of the active synthesis model, and the encoder can be used to select a model. Click the encoder to display a list of additional settings and options. Click the encoder to select an option and modify its value. Once the value has been modified to your liking, click the encoder to get back to the list of options. Selecting the first option (\"WAVE\"), saves to memory the current setup and brings you back in model selection mode. B, C: Fine and coarse frequency control. D : Frequency modulation attenuverter. This knob controls the amount and polarity of modulation applied to frequency, from the FM CV input jack. E : Timbre. This parameter controls the main evolution and motion of the timbre - for example pulse width for a square oscillator or modulation index for a FM model. F : Modulation attenuverter. This knob controls the amount and polarity of modulation applied to the TIMBRE parameter, from the TIMBRE CV input jack. G : Color. This knob controls a second dimension of sound, for example the symmetry of an oscillator or the modulation frequency for a FM model.","title":"Controls"},{"location":"modules/braids/manual/#inputs-and-outputs","text":"TRIG : This trigger input serves three purposes. 1/ Braids' physical models need to be \"excited\" by an impulse on this input to give birth to a sound. 2/ The other models will treat the trigger as a reset signal, bringing the phase of the oscillator(s) to 0. 3/ This input can also be used to trigger an internal AD envelope applied to the parameters of your choice, to create sound animation and attacks without an external envelope module. V/OCT : 1V/Oct frequency CV input. FM : Frequency modulation CV input - the scale and polarity of this signal is set by the FM attenuverter. TIMBRE and COLOR : Control voltages for the Timbre and Color parameters. A value of 0V corresponds to the minimum position of the knob. A value of +5V corresponds to the maximum position of the knob. This CV is offset by the current position of the knob. OUT : Signal output. Loudness is model-dependent - for example a pure sine wave is always at maximum amplitude; while a ring-modulated sine-wave will have peaks and valleys due to amplitude modulation, and will thus sound quieter.","title":"Inputs and outputs"},{"location":"modules/braids/manual/#models","text":"","title":"Models"},{"location":"modules/braids/manual/#csaw","text":"This model is inspired by a quirk/defect of the Yamaha CS80 sawtooth wave shape, consisting of a fixed-width \"notch\" after the raising edge. The width of the notch can be controlled by TIMBRE ; and its depth and polarity can be controlled by COLOR - producing phasing effects.","title":"CSAW"},{"location":"modules/braids/manual/#-_-_","text":"This model produces the classic waveform trajectory from triangle to sawtooth to square to pulse found in synthesizers such as the RSF Kobol or the Moog Voyager. TIMBRE sweeps through the waveforms. COLOR morphs from several tonal characters by increasingly removing the high-frequencies with a 1-pole filter, and recreating them with a waveshaper.","title":"/\\/|-_-_"},{"location":"modules/braids/manual/#-_-__1","text":"This model blends a sawtooth wave with dephasing control, with a square wave with PWM. TIMBRE controls the dephasing amount or pulse width, and COLOR morphs the waveshape from sawtooth to square.","title":"/|/|-_-_"},{"location":"modules/braids/manual/#fold","text":"This model is built with sine and triangle oscillators sent into a wavefolder. TIMBRE controls the wavefolder strength, and COLOR controls the balance between the sine and triangle signals sent to it.","title":"FOLD"},{"location":"modules/braids/manual/#_____","text":"This digital synthesis algorithm generates a smooth sequence of waveforms, transitioning from a sine wave to a Dirac comb, as controlled by TIMBRE . The intermediary steps are reminiscent of a single formant. Two such waveshapes are blended together, with the detuning amount controlled by COLOR .","title":"_|_|_|_|_"},{"location":"modules/braids/manual/#syn-_-_-syn","text":"These model synthesize the classic 2-oscillator hardsync patch, with both oscillators emitting square or saw waves. The main oscillator frequency controls the master frequency. The interval between master and slave is controlled by TIMBRE . COLOR controls the balance between the two oscillators.","title":"SYN-_-_ SYN/|"},{"location":"modules/braids/manual/#x3-_-_x3-x3-six3","text":"Three sawtooth (or square, triangle, sine) oscillators which can be individually tuned. COLOR and TIMBRE control the relative frequency of the second and third oscillator with respect to the main oscillator. These two controls are quantized to \"snap\" on musical intervals like octaves or fifths.","title":"/|/|x3 -_-_x3 /\\x3 SIx3"},{"location":"modules/braids/manual/#ring","text":"Three sine wave oscillators are ring-modulated together, and colored by a waveshaper. The main oscillator frequency controls the frequency of the first sine wave, and TIMBRE and COLOR control the relative frequency of the second and third sine waves.","title":"RING"},{"location":"modules/braids/manual/#_1","text":"This model simulates a swarm of 7 sawtooth waves. TIMBRE controls their detuning, and COLOR applies a high-pass filter to the resulting sound.","title":"/|/|/|/|"},{"location":"modules/braids/manual/#___","text":"This model generates a sawtooth waveform, and sends it into a comb filter (tuned delay line). The frequency of the delay line tracks the frequency of the sawtooth oscillator, with a transposition controlled by the TIMBRE knob. COLOR selects the feedback amount and polarity: at 12 o'clock, no feedback is applied. From 12 o'clock to 5 o'clock, positive feedback is increasingly applied. From 12 o'clock to 7 o'clock, negative feedback is progressively applied.","title":"/|/|_|_|_"},{"location":"modules/braids/manual/#toy","text":"This model traverses a space of timbres typical of (circuit-bent) electronic musical toys. TIMBRE simulates an alteration of the toy's clock rate, while COLOR creates glitches or short-circuits on a converter or memory chip's data lines.","title":"TOY*"},{"location":"modules/braids/manual/#zlpf-zpkf-zbpf-zhpf","text":"This family of models directly synthesize in the time-domain the response of a low-pass, peaking, band-pass or high-pass filter excited by classic analog waveforms. Rather than synthesizing the waveform and filtering it (which is what a VA synthesizer would do), this approach directly aims at building the filtered waveshape from scratch. This technique has been used in the Casio CZ or the Roland D series, but is extended here to cover different filter types and waveshapes. TIMBRE controls the cutoff frequency of the filter. COLOR continuously modifies the waveshape, from saw to square to triangle.","title":"ZLPF, ZPKF, ZBPF, ZHPF"},{"location":"modules/braids/manual/#vosm","text":"This model uses a combination of 3 oscillators arranged in a clever ring-modulation/hardsync patch to emulate formant synthesis - a technique named VOSIM and described by Kaegi and Tempelaars. COLOR and TIMBRE control the relative frequencies of the two formants.","title":"VOSM"},{"location":"modules/braids/manual/#vowl-vfof","text":"Both models synthesize vowel sounds. VOWL is a faithful recreation of early computer speech synthesis programs. VFOF uses a simplified version of Rodet's FOF synthesis technique. Both have the same control layout: TIMBRE controls the vowel, morphing between a, e, i, o, u. COLOR shifts the formants in frequency. Main oscillator frequency and COLOR can be used altogether to simulate age and gender transformations.","title":"VOWL, VFOF"},{"location":"modules/braids/manual/#harm","text":"This model uses additive synthesis, by summing 12 sine harmonics. COLOR modifies the distribution of the amplitudes of each harmonics, around a central frequency set by TIMBRE .","title":"HARM"},{"location":"modules/braids/manual/#fm-fbfm-wtfm","text":"Three flavors of 2-operator phase-modulation synthesis. TIMBRE controls the modulation amount. COLOR controls the relative frequency interval between modulator and carrier. FM is a well-behaved implementation. FBFM uses feedback from the carrier to itself to produce harsher tones. WTFM uses two feedback paths, from carrier to modulator and carrier to itself to achieve droning, unstable tones.","title":"FM, FBFM, WTFM"},{"location":"modules/braids/manual/#pluk","text":"Raw plucked string synthesis. TIMBRE controls the damping, COLOR the plucking position. This model needs to be \"excited\" by a trigger signal.","title":"PLUK"},{"location":"modules/braids/manual/#bowd","text":"Bowed string modeling. TIMBRE controls the friction level, COLOR the bowing position. A trigger or gate signal is required. Note that this model does not include a body filter - which would be necessary to simulate an actual string instrument.","title":"BOWD"},{"location":"modules/braids/manual/#blow-flute","text":"Reed or flute instrument model. TIMBRE controls the air pressure, COLOR the geometry of the instrument. Note that this model does not include a filter - which would have been necessary to simulate an actual instrument.","title":"BLOW, FLUTE"},{"location":"modules/braids/manual/#bell","text":"This model established by Risset uses additive synthesis to recreate the tone of a bell. TIMBRE controls the damping of the sound; and COLOR the inharmonicity of the sound. This model needs to be \"excited\" by a trigger signal (or raising edge of a gate signal).","title":"BELL"},{"location":"modules/braids/manual/#drum","text":"This variant of the BELL model uses different parameters (partials frequencies and amplitudes) to generate a sound reminiscent of a metallic drum. TIMBRE controls the damping and COLOR the brightness.","title":"DRUM"},{"location":"modules/braids/manual/#kick","text":"This model is a simulation of the TR-808 bass drum circuit. TIMBRE controls the decay time, while COLOR controls the brightness (\"tone\") of the sound. The main oscillator frequency controls the tuning of the bridged-T filter.","title":"KICK"},{"location":"modules/braids/manual/#cymb","text":"Raw material for cymbal sound synthesis, as inspired by the TR-808 circuits. COLOR controls the balance between a droning sum of square waves and noise. TIMBRE controls the cutoff of a band-pass filter applied on the resulting signal.","title":"CYMB"},{"location":"modules/braids/manual/#snar","text":"This model is a simulation of the TR-808 snare drum circuit. TIMBRE controls the balance between the two modes of the resonator (\"tone\"), and COLOR controls the amount of noise (\"snappy\").","title":"SNAR"},{"location":"modules/braids/manual/#wtbl","text":"WTBL is a classic implementation of wavetable synthesis. TIMBRE sweeps the wavetable, and COLOR selects one of the 20 wavetables to play with. The waveforms are interpolated when traveling through a wavetable, but not when switching from one table to another.","title":"WTBL"},{"location":"modules/braids/manual/#wmap","text":"WMAP is a two-dimensional implementation of wavetable synthesis. 256 waveforms have been laid out in a 16x16 grid, so that adjacent waveforms are similar sounding. The TIMBRE parameter scans the table in the X direction, and the COLOR parameter scans the table in the Y direction, with smooth interpolation across the two directions.","title":"WMAP"},{"location":"modules/braids/manual/#wlin","text":"WLIN allows one dimensional scanning through the entirety of Braids' wavetables. TIMBRE moves through the waves, while COLOR selects the interpolation method. When COLOR is at 7 o'clock, no interpolation is applied. When COLOR is at 10 o 'clock, interpolation is applied between samples, but not between waves. When COLOR is at 12 o'clock, interpolation is always applied. When COLOR goes past 12 o'clock, interpolation is applied between waves, but the resolution of the playback resolution is decreased.","title":"WLIN"},{"location":"modules/braids/manual/#wtx4","text":"This mode is a 4-voice variant of WLIN . TIMBRE morphs through a small selection of 16 waves. COLOR selects the harmonic structures between the 4 voices - from a predefined set of chords. When COLOR is at 7 o'clock, all voices are playing the same note with a variable amount of detuning, creating a thick chorus effect.","title":"WTx4"},{"location":"modules/braids/manual/#nois","text":"This model filters white noise with a state-variable filter. The main oscillator frequency controls the cutoff frequency of the filter. TIMBRE controls the resonance of the filter. COLOR performs a crossfade between the low-pass and high-pass outputs of the filter.","title":"NOIS"},{"location":"modules/braids/manual/#twnq","text":"This \"Twin Peaks\" model generates white noise and process it with two band-pass filters (resonators). TIMBRE controls the Q factor of the filters, and COLOR changes their spacing. The frequency of both filters track the main frequency.","title":"TWNQ"},{"location":"modules/braids/manual/#clkn","text":"This model generates random samples at a given rate, determined by the main pitch control. TIMBRE controls the periodicity of the generator (up to a 2 samples cycle), and COLOR its quantization level (from 2 distinct values to 32 distinct values).","title":"CLKN"},{"location":"modules/braids/manual/#clou-prtc","text":"These granular synthesis models create natural textures by mixing short grains of windowed sine waves (CLOU) or short decaying \"pings\" (PRTC). The frequency of the grains is controlled by the main frequency control, but is randomized by an amount proportional to the COLOR control. TIMBRE controls the density and overlap of the grains.","title":"CLOU, PRTC"},{"location":"modules/braids/manual/#qpsk","text":"This model generates - in the audio frequency range - the kind of modulated signals used in digital telecommunication systems. The main oscillator frequency is the carrier frequency. The bit-rate is controlled by the TIMBRE knob. The COLOR knob sets an 8-bit value which is modulated into the carrier using QPSK modulation. A 16-byte synchronization frame is sent on every trigger/gate, or every 256 data bytes.","title":"QPSK"},{"location":"modules/braids/manual/#options","text":"META allows the synthesis model to be selected by the FM CV. When this mode is active, frequency modulation through the FM CV input is no longer possible - but is replaced by CV-controlled model selection. This option is great for creating sequences featuring the different synthesis models. Keep in mind that discontinuities might be heard when switching from one model to the other! The EDIT encoder can still be used to scroll through synthesis models; and the CV applies to the FM input allows you to scroll forward (positive voltage) or backwards (negative voltage) in the list. BITS selects the bit-depth of the data sent to DAC. RATE selects the refresh rate of the DAC. Note that a handful of models are internally rendered at 48kHz (instead of 96kHz); so the difference between 48kHz and 96kHz might be non-existent for the most complex models. Note also that conversely, to reduce aliasing, the simplest models are rendered internally at 192kHz or 384kHz. TSRC selects a trigger source: EXT. uses the gate/trigger jack; AUTO additionally tracks changes in the V/OCT frequency input larger than a semitone and generates a trigger on each of these. This allows, for example, the physical models or the internal AD generator to be controlled by a note sequencer which does not provide gate outputs. TDLY applies a delay between the moment the trigger is received and the moment the note is \"struck\" on the physical models. We have observed that some CV-gate converters or sequencers sometimes have slow settling times, or have a short timing errors between the refresh of their analog and digital outputs. Delaying the processing of the trigger allows the physical model to sample the accurate CV rather than a fluctuating one - which can cause unwanted glitches or portamento-like effects at note onsets. |\\ATT, |\\DEC are the attack and decay time of the internal AD envelope generator. |\\FM, |\\TIM, |\\COL, |\\VCA control the amount of modulation from the internal AD envelope generator to the FM, Timbre, Color and output amplitude parameters. When all these settings are null, the TRIG input works as a sync / reset input. RANG chooses the range of the \"coarse\" knob. EXT. adjusts the range of this knob +/- 4 octaves around the note received on the V/Oct input. Because of this, when no frequency CV signal is sent to the module (which would be the equivalent to sending a CV of 0V - corresponding to a very low note!), the coarse button will have a bias towards low frequencies, which might not always be desirable. FREE adjusts the range of the coarse knob to +/- 4 octave centered around C3 (261.5 Hz). This setting is recommended when the module is used with no external signal on the V/Oct CV input. XTND (extended) provides a larger frequency range, but disables accurate V/Oct scaling as a side effect. The last option ( 440 ) locks the oscillator frequency to 440 Hz exactly - helpful for tuning another VCO. OCTV is a transposition (by octave) switch. QNTZ applies a quantification to the incoming V/OCT control voltage. The frequency can be quantized to semitones, or to one of the many available scales, or disabled. ROOT selects the root note upon which is built the quantizer's scale. FLAT applies a detuning in the lower and higher frequencies, to recreate some of the tuning imperfections of VCOs. DRFT recreates the drifting of a disastrously designed VCO. SIGN applies grungy glitches/waveform imperfections to the output signal. The exact behavior of this option is unique to each module built. BRIG adjusts the screen brightness.","title":"Options"},{"location":"modules/braids/manual/#calibration","text":"The module is factory-calibrated using precision voltage sources. Follow this procedure only if you want to compensate for inaccuracies in your CV sources, or if your module has lost its calibration settings following a fault or the installation of alternative firmware. To calibrate the unit, disconnect any signal from the FM input, and connect the note CV output of a well-calibrated keyboard interface or MIDI-CV converter to the V/OCT input. Move the COARSE and FINE knobs to 12 o'clock position. Go to CAL. in the options list, and keep the encoder pressed for 1s (this is not an option you want to select by mistake during a performance !). The screen displays >C2 . Send a voltage of 1V to the CV input. Click on the encoder. The screen displays >C4 . Send a voltage of 3V to the CV input. Click on the encoder to finish calibration. Because Braids uses this software calibration procedure, it is compatible with the 1.2V/Oct standard too! Here is a tip: you can very well perform the calibration procedure with another pair of notes 2 octaves apart, and with the COARSE knob in another position. This can be used to shift up or down the range of the COARSE knob.","title":"Calibration"},{"location":"modules/braids/manual/#toys","text":"Following CAL. in the menu is a screen showing a visual representation of the internal ADC readings for the TIMBRE , COLOR , V/OCT and FM inputs. This page is helpful for visualizing the polarity and range of incoming CV signals. The next option shows a scrolling line of text. TIMBRE controls the scrolling; and a gate/trigger can be used to scroll the text left by one column. To edit the text, keep the encoder pressed for more than 1s. Rotate the encoder to select the first character. Click to move to the next character and continue editing. Once the line of text has been composed, select the last character (all segments lit) to confirm. At any time, you can also hold the encoder to leave the edit mode.","title":"Toys"},{"location":"modules/braids/manual/#firmware-update-procedure","text":"Unplug all CV inputs/outputs from the module. Connect the output of your audio interface/sound card to the FM input ( 3 ). Set the FINE knob ( B ) to 12 o'clock , and the FM attenuverter ( D ) to 5 o'clock. Power on your modular system with Braids' encoder pressed. The screen will show _RDY , with a \"snake\" pattern on the first character. Make sure that no additional sound (such as email notification sounds, background music etc.) from your computer will be played during the procedure. Make sure that your speakers/monitors are not connected to your audio interface - the noises emitted during the procedure are aggressive and can harm your hearing. On non-studio audio equipment (for example the line output from a Desktop computer), you might have to turn up the gain to the maximum. When you are all set, play the firmware update file into the module. The display shows the number of data packets received. The firmware contains between 90 and 112 packets, and the unit reboots after the last packet has been received. In case the signal level is inadequate, the unit will display @SYN . Try adjusting the position of the FM attenuverter, click the encoder and retry from the start of the update file. The unit displays @CRC if a data packet is corrupted. It is suggested in this case to retry the procedure from another computer/audio interface, and to make sure that no piece of equipment (equalizer, FX processor) is inserted in the signal chain.","title":" Firmware update procedure"},{"location":"modules/braids/open_source/","text":"Github repository Schematics Firmware hacking Braids' source code is available under the MIT licence. The code (along with the hardware description files) can be found in the braids directory in our Eurorack modules git repository . After having cloned the repository, don't forget to run git submodule init && git submodule update to make sure the sub-projects referenced in the code are also pulled. Playground A simple way of testing the oscillators code locally on a desktop computer, without long flash/test cycles, is to use the command line program in braids/test. It can be built and run with make -f braids/test/makefile && ./oscillator_test . No embedded toolchain is needed for that! The program generates a .wav file, oscillator.wav . Playing with the methods of the MacroOscillator class is a good way of familiarizing oneself's with Braids code. Toolchain If you don't mind installing Vagrant and VirtualBox a cozy environment for firmware hacking is available. If you want to set up your own environment to build Braids' code, an ARM EABI toolchain must be installed. Because of tight CPU and code size limits, we recommend you to use the same compiler version as we do: 4.8-2013-q4-major . Various pre-compiled binaries and source packages are available here . The path to the toolchain binaries must be specified in the TOOLCHAIN_PATH variable in braids/makefile . To build the bootloader, use the following command: make -f braids/bootloader/makefile hex To build the code, use the following command: make -f braids/makefile If you modify lookup tables and want the big resources.cc file to be regenerated: touch braids/resources/resources.py && make -f braids/makefile resources Firmware programming A first solution is to simply use the firmware update procedure. A .wav file for firmware upgrade can be generated with: make -f braids/makefile wav The firmware can then be loaded into the module using the procedure described in the manual. Past this point, we assume you know what you are doing and we are not responsible for any damage to your module! Another solution is to use the built-in serial bootloader of the STM32F. Connect a FTDI dongle with a 3.3V output level ( such as this ) to the 6 pin connector at the back of the module. If necessary, edit the serial port special file corresponding to the FTDI dongle in the PGM_SERIAL_PORT variable in stmlib/makefile.inc. GND must match GND, TX must match RX and vice-versa. Hold the RESET switch on the side of the module. Press the SYSBOOT switch next to it, and release RESET . Nothing is shown on the module display (it is in bootloader limbo...) Upload the firmware with: make -f braids/makefile upload_combo_serial The last \u2013 and recommended \u2013 solution for firmware programming is to use a JTAG interface and openOCD. We recommend Olimex' ARM-USB-OCD-H devices . An adapter must also be purchased for the mini-JTAG connector used by Braids. Upload the firmware with: make -f braids/makefile upload_combo_jtag","title":"Open source"},{"location":"modules/braids/open_source/#firmware-hacking","text":"Braids' source code is available under the MIT licence. The code (along with the hardware description files) can be found in the braids directory in our Eurorack modules git repository . After having cloned the repository, don't forget to run git submodule init && git submodule update to make sure the sub-projects referenced in the code are also pulled.","title":"Firmware hacking"},{"location":"modules/braids/open_source/#playground","text":"A simple way of testing the oscillators code locally on a desktop computer, without long flash/test cycles, is to use the command line program in braids/test. It can be built and run with make -f braids/test/makefile && ./oscillator_test . No embedded toolchain is needed for that! The program generates a .wav file, oscillator.wav . Playing with the methods of the MacroOscillator class is a good way of familiarizing oneself's with Braids code.","title":"Playground"},{"location":"modules/braids/open_source/#toolchain","text":"If you don't mind installing Vagrant and VirtualBox a cozy environment for firmware hacking is available. If you want to set up your own environment to build Braids' code, an ARM EABI toolchain must be installed. Because of tight CPU and code size limits, we recommend you to use the same compiler version as we do: 4.8-2013-q4-major . Various pre-compiled binaries and source packages are available here . The path to the toolchain binaries must be specified in the TOOLCHAIN_PATH variable in braids/makefile . To build the bootloader, use the following command: make -f braids/bootloader/makefile hex To build the code, use the following command: make -f braids/makefile If you modify lookup tables and want the big resources.cc file to be regenerated: touch braids/resources/resources.py && make -f braids/makefile resources","title":"Toolchain"},{"location":"modules/braids/open_source/#firmware-programming","text":"A first solution is to simply use the firmware update procedure. A .wav file for firmware upgrade can be generated with: make -f braids/makefile wav The firmware can then be loaded into the module using the procedure described in the manual. Past this point, we assume you know what you are doing and we are not responsible for any damage to your module! Another solution is to use the built-in serial bootloader of the STM32F. Connect a FTDI dongle with a 3.3V output level ( such as this ) to the 6 pin connector at the back of the module. If necessary, edit the serial port special file corresponding to the FTDI dongle in the PGM_SERIAL_PORT variable in stmlib/makefile.inc. GND must match GND, TX must match RX and vice-versa. Hold the RESET switch on the side of the module. Press the SYSBOOT switch next to it, and release RESET . Nothing is shown on the module display (it is in bootloader limbo...) Upload the firmware with: make -f braids/makefile upload_combo_serial The last \u2013 and recommended \u2013 solution for firmware programming is to use a JTAG interface and openOCD. We recommend Olimex' ARM-USB-OCD-H devices . An adapter must also be purchased for the mini-JTAG connector used by Braids. Upload the firmware with: make -f braids/makefile upload_combo_jtag","title":"Firmware programming"},{"location":"modules/braids/original_blurb/","text":"An atlas of waveform generation techniques Braids is a voltage-controlled monophonic digital sound source. Sound source... like an oscillator? Not really. Most of the timbres it generates are so complex that approaching them with a classic analog modular setup would require a full case of oscillators, filters, VCAs, waveshapers and ring-modulators \u2013 that's why we call it a macro-oscillator \u2013 intricate digital synthesis algorithms wrapped in oscillator's clothes. 2 Knobs to Rule Them All Each algorithm is controlled by two continuously variable parameters, TIMBRE and COLOR , both of them voltage controllable. Instead of being directly assigned to the intricate details of the synthesis algorithm, they work as meta-parameters going through all the sweet spots. Very often, these parameters simultaneously affect several dimensions of timbre, creating very complex movements which would be hard to generate with a traditional setup.","title":"Original blurb"},{"location":"modules/braids/original_blurb/#an-atlas-of-waveform-generation-techniques","text":"Braids is a voltage-controlled monophonic digital sound source. Sound source... like an oscillator? Not really. Most of the timbres it generates are so complex that approaching them with a classic analog modular setup would require a full case of oscillators, filters, VCAs, waveshapers and ring-modulators \u2013 that's why we call it a macro-oscillator \u2013 intricate digital synthesis algorithms wrapped in oscillator's clothes.","title":"An atlas of waveform generation techniques"},{"location":"modules/braids/original_blurb/#2-knobs-to-rule-them-all","text":"Each algorithm is controlled by two continuously variable parameters, TIMBRE and COLOR , both of them voltage controllable. Instead of being directly assigned to the intricate details of the synthesis algorithm, they work as meta-parameters going through all the sweet spots. Very often, these parameters simultaneously affect several dimensions of timbre, creating very complex movements which would be hard to generate with a traditional setup.","title":"2 Knobs to Rule Them All"},{"location":"modules/branches/","text":"Key data Original printed manual Features Liven up your patches Specifications Revisions and variants 2014 Key data Dual Bernoulli Gate Parameter Value Width 6HP Depth 25mm +12V current 10mA -12V current 1mA Lifetime 02/15 to 12/21 Modulargrid Link Processor ATMega88p @ 8 MHz Original printed manual PDF download Features Liven up your patches Randomly skip steps in a sequence, triggers in a rhythmic pattern. Dispatch rhythmic events to two instruments or sub-patches. A building block for large generative patches. An abrasive digital noise source at audio rates! Specifications Gate inputs: 100k impedance, 0.6V threshold. CV inputs: 100k impedance, +/- 5V. Outputs: +5V for the HIGH level. Response time: 15\u00b5s. Revisions and variants An initial batch of 250 units was made by a dubious CM in the US, only a small fraction of which has been sold. The next batches were made in France at the end of 2014. 2014 Hardware revision labelled \"v4\" with the following differences: Green PCB (originally black). Thonkiconn jacks.","title":"Index"},{"location":"modules/branches/#key-data","text":"Dual Bernoulli Gate Parameter Value Width 6HP Depth 25mm +12V current 10mA -12V current 1mA Lifetime 02/15 to 12/21 Modulargrid Link Processor ATMega88p @ 8 MHz","title":"Key data"},{"location":"modules/branches/#original-printed-manual","text":"PDF download","title":"Original printed manual"},{"location":"modules/branches/#features","text":"","title":"Features"},{"location":"modules/branches/#liven-up-your-patches","text":"Randomly skip steps in a sequence, triggers in a rhythmic pattern. Dispatch rhythmic events to two instruments or sub-patches. A building block for large generative patches. An abrasive digital noise source at audio rates!","title":"Liven up your patches"},{"location":"modules/branches/#specifications","text":"Gate inputs: 100k impedance, 0.6V threshold. CV inputs: 100k impedance, +/- 5V. Outputs: +5V for the HIGH level. Response time: 15\u00b5s.","title":"Specifications"},{"location":"modules/branches/#revisions-and-variants","text":"An initial batch of 250 units was made by a dubious CM in the US, only a small fraction of which has been sold. The next batches were made in France at the end of 2014.","title":"Revisions and variants"},{"location":"modules/branches/#2014","text":"Hardware revision labelled \"v4\" with the following differences: Green PCB (originally black). Thonkiconn jacks.","title":"2014"},{"location":"modules/branches/firmware/","text":"Download Original version No firmware update has ever been released by Mutable Instruments, but this file can be used to revert the module to the stock firmware.","title":"Firmware"},{"location":"modules/branches/firmware/#download","text":"Original version No firmware update has ever been released by Mutable Instruments, but this file can be used to revert the module to the stock firmware.","title":"Download"},{"location":"modules/branches/manual/","text":"Installation Branches requires a -12V/+12V power supply (2x5 pin connector). The ribbon cable connector must be aligned so that the red stripe of the ribbon cable (-12V) is on the same side of the module's power header as the \"Red stripe\" marking on the board. The power consumption is 10 mA on the +12V rail and 1 mA on the -12V rail. Controls Branches consists of two identical sections called Bernoulli gates. An internal connection routes the input of section 1 to section 2 \u2013 unless a jack is connected into the input of section 2. The Bernoulli gate Upon receiving a trigger on its IN input (1) , the module tosses a virtual coin: if the outcome is heads, the trigger is sent to output A (3) ; if the outcome is tails, the trigger is sent to output B (4) . The probability knob (A) and the associated CV input (2) change the odds of the \"heads\" and \"tails\" outcomes. In extreme settings, the outcome is no longer random - causing the module to behave like a voltage-controlled switch. Toggle mode In toggle mode , the module associates the \"heads\" and \"tails\" outcomes to a different pair of decisions: \"continue sending the trigger to the same output as before\" and \"send the trigger to the opposite output\". As a result, when the probability knob (A) is set to its maximum value, the trigger will alternate between outputs A and B. Press the switch (B) to enable or disable the toggle mode. Latch mode When the latch mode is enabled, an output (3) or (4) stays at +5V until the other output gets activated. Hold the switch (B) for more than 1s to enable or disable the latch mode. Toggle and Latch settings are kept in memory even if the module is powered off.","title":"Manual"},{"location":"modules/branches/manual/#installation","text":"Branches requires a -12V/+12V power supply (2x5 pin connector). The ribbon cable connector must be aligned so that the red stripe of the ribbon cable (-12V) is on the same side of the module's power header as the \"Red stripe\" marking on the board. The power consumption is 10 mA on the +12V rail and 1 mA on the -12V rail.","title":"Installation"},{"location":"modules/branches/manual/#controls","text":"Branches consists of two identical sections called Bernoulli gates. An internal connection routes the input of section 1 to section 2 \u2013 unless a jack is connected into the input of section 2.","title":"Controls"},{"location":"modules/branches/manual/#the-bernoulli-gate","text":"Upon receiving a trigger on its IN input (1) , the module tosses a virtual coin: if the outcome is heads, the trigger is sent to output A (3) ; if the outcome is tails, the trigger is sent to output B (4) . The probability knob (A) and the associated CV input (2) change the odds of the \"heads\" and \"tails\" outcomes. In extreme settings, the outcome is no longer random - causing the module to behave like a voltage-controlled switch.","title":"The Bernoulli gate"},{"location":"modules/branches/manual/#toggle-mode","text":"In toggle mode , the module associates the \"heads\" and \"tails\" outcomes to a different pair of decisions: \"continue sending the trigger to the same output as before\" and \"send the trigger to the opposite output\". As a result, when the probability knob (A) is set to its maximum value, the trigger will alternate between outputs A and B. Press the switch (B) to enable or disable the toggle mode.","title":"Toggle mode"},{"location":"modules/branches/manual/#latch-mode","text":"When the latch mode is enabled, an output (3) or (4) stays at +5V until the other output gets activated. Hold the switch (B) for more than 1s to enable or disable the latch mode. Toggle and Latch settings are kept in memory even if the module is powered off.","title":"Latch mode"},{"location":"modules/branches/open_source/","text":"Github repository Schematics Firmware hacking Branches' source code is available under the GPL licence. The code (along with the hardware description files) can be found in the branches directory in our Eurorack modules git repository . After having cloned the repository, don't forget to run git submodule init && git submodule update to make sure the sub-projects referenced in the code are also pulled. Toolchain If you don't mind installing Vagrant and VirtualBox a cozy environment for firmware hacking is available. If you want to set up your own environment to build Branches' code, avr-gcc and avrdude must be installed. These are standard packages on Linux. On OS X, Crosspack can be installed. The path to the toolchain can be edited in the AVRLIB_TOOLS_PATH variable in avrlib/makefile.mk directory. It might also be necessary to change the ISP programmer name in the PROGRAMMER variable. To build the code, use the following command: make -f branches/makefile Firmware programming Programming must be done with an AVR ISP programmer. These are very common and can be found for a few dollars - however, the most reliable units are Atmel's own AVR ISP mkII. The ISP programmer must be connected on the back of the module - red stripe of the cable on the same side as the ISP text on the board. To upload the code: make -f branches/makefile bootstrap_all","title":"Open source"},{"location":"modules/branches/open_source/#firmware-hacking","text":"Branches' source code is available under the GPL licence. The code (along with the hardware description files) can be found in the branches directory in our Eurorack modules git repository . After having cloned the repository, don't forget to run git submodule init && git submodule update to make sure the sub-projects referenced in the code are also pulled.","title":"Firmware hacking"},{"location":"modules/branches/open_source/#toolchain","text":"If you don't mind installing Vagrant and VirtualBox a cozy environment for firmware hacking is available. If you want to set up your own environment to build Branches' code, avr-gcc and avrdude must be installed. These are standard packages on Linux. On OS X, Crosspack can be installed. The path to the toolchain can be edited in the AVRLIB_TOOLS_PATH variable in avrlib/makefile.mk directory. It might also be necessary to change the ISP programmer name in the PROGRAMMER variable. To build the code, use the following command: make -f branches/makefile","title":"Toolchain"},{"location":"modules/branches/open_source/#firmware-programming","text":"Programming must be done with an AVR ISP programmer. These are very common and can be found for a few dollars - however, the most reliable units are Atmel's own AVR ISP mkII. The ISP programmer must be connected on the back of the module - red stripe of the cable on the same side as the ISP text on the board. To upload the code: make -f branches/makefile bootstrap_all","title":"Firmware programming"},{"location":"modules/branches/original_blurb/","text":"Either/or A Bernoulli gate takes a logic signal (trigger or gate) as an input, and routes it to either of its two outputs according to a random coin toss. Branches packs two such gates in a small 6-HP panel. The knob and CV input on each channel controls the probability of routing the gate to either outputs, from 100% output A, 0% output B; to 0% output A, 100% output B.","title":"Original blurb"},{"location":"modules/branches/original_blurb/#eitheror","text":"A Bernoulli gate takes a logic signal (trigger or gate) as an input, and routes it to either of its two outputs according to a random coin toss. Branches packs two such gates in a small 6-HP panel. The knob and CV input on each channel controls the probability of routing the gate to either outputs, from 100% output A, 0% output B; to 0% output A, 100% output B.","title":"Either/or"},{"location":"modules/clouds/","text":"Key data Original printed manual Features Audio buffer acquisition Granular synthesis Post-processing (\"blending\") settings Specifications Revisions and variants 2015 Key data Texture synthesizer Parameter Value Width 18HP Depth 25mm +12V current 120mA -12V current 10mA Lifetime 01/15 to 10/17 Modulargrid Link Processor STM32F405RGT6 @ 168 MHz Codec WM8731 Original printed manual PDF download Features Audio buffer acquisition Stereo I/O. Even with a mono recording buffer, a wide stereo output can still be simulated by randomly panning grains or through the stereo reverberator. Stereo pre-amp with a gain range covering modular and line levels. Recording buffer size: 1s (32kHz, stereo) to 8s (16kHz, \u00b5-law, mono). The FREEZE button and the corresponding gate input freezes the content of the recording buffer, allowing you to dive into its sonic details. 4 memory slots for storing and recalling buffers. Granular synthesis Grain generation time base: periodical, randomized, or externally clocked. The POSITION knob selects from which part of the recording buffer the grains are extracted. Grain size from 16ms to 1s. Up to 40 to 60 concurrent grains (depending on recording buffer resolution). Transposition from -2 octaves to +2 octaves, with V/O tracking. Grain envelope continuously variable between boxcar, triangle and Hann functions. CV inputs for all grain parameters, individually sampled and held by each grain. For stochastic, Xenakis-style explorations, try feeding random voltages to those! Diffusion network with 4 All-pass filters to post process the granularized signals. Post-processing (\"blending\") settings 4 post-processing parameters are controlled by the BLEND knob and CV input: Dry/wet balance. Random panning amount. Feedback amount. Reverb amount. Specifications Input impedances: 100k. Audio input gain range: line level to modular level. CV range: +/- 5V. CVs outside of this range are simply clipped. Internal processing: 32kHz, 32-bit floating point. RAM Recording buffer uses 16-bit (high quality) or 8-bit \u00b5-law (low quality) resolution. Revisions and variants 2015 Hardware revision labelled \"v3\" with the following differences: Metal-shaft IN GAIN potentiometer (originally, plastic shaft, with a wobbly feel since it was not fastened to the panel). This potentiometer is hand-soldered, since it can become very scratchy when exposed to the heat of a regular wave-soldering process.","title":"Index"},{"location":"modules/clouds/#key-data","text":"Texture synthesizer Parameter Value Width 18HP Depth 25mm +12V current 120mA -12V current 10mA Lifetime 01/15 to 10/17 Modulargrid Link Processor STM32F405RGT6 @ 168 MHz Codec WM8731","title":"Key data"},{"location":"modules/clouds/#original-printed-manual","text":"PDF download","title":"Original printed manual"},{"location":"modules/clouds/#features","text":"","title":"Features"},{"location":"modules/clouds/#audio-buffer-acquisition","text":"Stereo I/O. Even with a mono recording buffer, a wide stereo output can still be simulated by randomly panning grains or through the stereo reverberator. Stereo pre-amp with a gain range covering modular and line levels. Recording buffer size: 1s (32kHz, stereo) to 8s (16kHz, \u00b5-law, mono). The FREEZE button and the corresponding gate input freezes the content of the recording buffer, allowing you to dive into its sonic details. 4 memory slots for storing and recalling buffers.","title":"Audio buffer acquisition"},{"location":"modules/clouds/#granular-synthesis","text":"Grain generation time base: periodical, randomized, or externally clocked. The POSITION knob selects from which part of the recording buffer the grains are extracted. Grain size from 16ms to 1s. Up to 40 to 60 concurrent grains (depending on recording buffer resolution). Transposition from -2 octaves to +2 octaves, with V/O tracking. Grain envelope continuously variable between boxcar, triangle and Hann functions. CV inputs for all grain parameters, individually sampled and held by each grain. For stochastic, Xenakis-style explorations, try feeding random voltages to those! Diffusion network with 4 All-pass filters to post process the granularized signals.","title":"Granular synthesis"},{"location":"modules/clouds/#post-processing-blending-settings","text":"4 post-processing parameters are controlled by the BLEND knob and CV input: Dry/wet balance. Random panning amount. Feedback amount. Reverb amount.","title":"Post-processing (\"blending\") settings"},{"location":"modules/clouds/#specifications","text":"Input impedances: 100k. Audio input gain range: line level to modular level. CV range: +/- 5V. CVs outside of this range are simply clipped. Internal processing: 32kHz, 32-bit floating point. RAM Recording buffer uses 16-bit (high quality) or 8-bit \u00b5-law (low quality) resolution.","title":"Specifications"},{"location":"modules/clouds/#revisions-and-variants","text":"","title":"Revisions and variants"},{"location":"modules/clouds/#2015","text":"Hardware revision labelled \"v3\" with the following differences: Metal-shaft IN GAIN potentiometer (originally, plastic shaft, with a wobbly feel since it was not fastened to the panel). This potentiometer is hand-soldered, since it can become very scratchy when exposed to the heat of a regular wave-soldering process.","title":"2015"},{"location":"modules/clouds/firmware/","text":"Download Latest version (1.31) Firmware update procedure Revisions v1.31 Fixed a bug causing the BLEND knob to temporarily match a previously saved value instead of immediately tracking changes when the module is powered on. v1.3 Changed the response curve of the DRY/WET setting to an equal power curve. v1.2 Delayed the processing of triggers received on the TRIG input by 1 ms. This change allows Clouds to work better with CV sources with slow settling times. v1.1 Initial release.","title":"Firmware"},{"location":"modules/clouds/firmware/#download","text":"Latest version (1.31) Firmware update procedure","title":"Download"},{"location":"modules/clouds/firmware/#revisions","text":"","title":"Revisions"},{"location":"modules/clouds/firmware/#v131","text":"Fixed a bug causing the BLEND knob to temporarily match a previously saved value instead of immediately tracking changes when the module is powered on.","title":"v1.31"},{"location":"modules/clouds/firmware/#v13","text":"Changed the response curve of the DRY/WET setting to an equal power curve.","title":"v1.3"},{"location":"modules/clouds/firmware/#v12","text":"Delayed the processing of triggers received on the TRIG input by 1 ms. This change allows Clouds to work better with CV sources with slow settling times.","title":"v1.2"},{"location":"modules/clouds/firmware/#v11","text":"Initial release.","title":"v1.1"},{"location":"modules/clouds/manual/","text":"Overview Clouds is a granular audio processor. It creates textures and soundscapes by combining multiple overlapping, delayed, transposed and enveloped segments of sound taken from an audio recording buffer. Clouds differs from other granular Eurorack modules in that it focuses on the real-time processing of audio sources from your modular system itself, rather than the playback of pre-recorded samples from a storage device. It rewards the freezing, fragmentation and dissolution of the unexpected instant, rather than the careful planning of what might very well not come. Installation Clouds is designed for Eurorack synthesizer systems and occupies 18 HP of space. It requires a -12V/+12V supply (2x5 pin connector), drawing 10mA from the -12V rail and 120mA from the +12V rail. The red stripe of the ribbon cable must be oriented on the same side as the \"Red stripe\" marking on the printed circuit board. About Granular synthesis Clouds continuously records the incoming audio into a short amount of sample memory. While recording time can reach up to 8s by reducing the audio quality setting, you ought to feel very guilty every time you think of this as \"tape\" - think of it as a space, a room. Using this recorded audio data, the module synthesizes a sonic texture by playing back short (overlapping) segments of audio (also known as \"grains\") extracted from it. Clouds allows you to control: From which part of the buffer the grains are taken. How long the grains are. At which speed/pitch the grains are replayed. How much overlap there is between the grains (density). Whether the distribution of grains in time is constant or random. Which envelope curve is applied to the grains - giving the impression of a \"rough\" or \"smooth\" texture. In addition, to create textures with a \"blurry\" feel, a diffuser (network of all-pass filters - like a reverb without tail) can be applied. The module plays grains continuously, at a rate determined by the DENSITY and SIZE settings. A trigger input is also present, to explicitly instruct the module to start the playback of a new grain. The maximum number of concurrent grains is quite large - between 40 and 60. This specificity brings Clouds closer to the roots of granular synthesis, and allows the synthesis of varied textures even from basic waveforms - there's indeed many more dimensions to granular synthesis than keeping a playback pointer moving through a SD-card sample! It is possible, at any time, to FREEZE the audio buffer from which the grains are taken - In this case, the incoming audio is no longer recorded. Somehow, Clouds is the exact opposite of a sampler: by default, the module always samples the audio it receives, except when it is in the frozen state. Front panel Controls A. FREEZE button. This latching button stops the recording of incoming audio. Granularization is now performed on the last few seconds of audio kept in memory in the module. B . Blending parameter/Audio quality button. Selects which of the blending parameters is controlled by the BLEND knob and CV input, or selects one of the four audio quality settings. C . Load/Save button. See the \"Advanced topics\" section. D . Grain POSITION . Selects from which part of the recording buffer the audio grains are played. Turn the knob clockwise to travel back in time. E. F. Grain SIZE and PITCH (transposition). At 12 o'clock, the buffer is played at its original frequency. G. Audio INPUT GAIN , from -18dB to +6dB. H. Grain DENSITY . At 12 o'clock, no grains are generated. Turn clockwise and grains will be sown randomly, counter-clockwise and they will be played at a constant rate. The further you turn, the higher the overlap between grains. I. Grain TEXTURE . Morphs through various shapes of grain envelopes: square (boxcar), triangle, and then Hann window. Past 2 o'clock, activates a diffuser which smears transients. J. BLEND knob. This multi-function knob is described in the Blending parameters section. K. Indicator LEDs. They work as an input vu-meter. When FREEZE is active, they monitor the output level. Soft-clipping occurs when the last LED is on. They can also indicate the quality setting (red), the function assigned to the BLEND knob (green), or the value of the four blending parameters (multicolor). Inputs and outputs All CV inputs are calibrated for a range of +/- 5V. Voltages outside of this range are tolerated, but will be clamped. 1. FREEZE gate input. When the input gate signal is high, stops the recording of incoming audio, just as latching the FREEZE button would do. 2. TRIGGER input. Generates a single grain. By moving the grain DENSITY to 12 o'clock, and sending a trigger to this input, Clouds can be controlled like a micro-sample player. An LFO or clock divider (or even a pressure plate) can thus be used to sow grains at the rate of your choice. 3. 4. Grain POSITION and SIZE CV inputs. 5. Grain transposition ( PITCH ) CV input, with V/Oct response. 6. BLEND CV input. This CV input can control one of the following functions depending on the active blending parameter: dry/wet balance, grain stereo spread, feedback amount and reverb amount. 7. 8. Stereo audio input. When no patch cable is inserted in the right channel input, this input will receive the signal from the left channel. 9. 10. Grain DENSITY and TEXTURE CV inputs. 11. 12. Stereo audio output. Blend parameters The BLEND knob can control one of these four settings: Dry/wet balance. Stereo spread (amount of random panning/balance applied to the grains). Feedback amount. Reverberation amount. To select which parameter is controlled by the BLEND knob and the BLEND CV input, press the Blend parameter/Audio quality button. The current parameter is temporarily indicated by a green LED. When turning the BLEND knob, the color of the four status LEDs temporarily shows the value of the four blending parameters (from black when the parameter is set to its minimum value to green, yellow and then red for the maximum value). It could happen that the position of the knob does not match the value of the parameter - the curse of multi-function knobs! If this is the case, turning the BLEND knob clockwise (resp. counterclockwise) causes a small increase (resp. decrease) in the value of the parameter, and turning it further causes larger changes, until the value progressively catches up with the knob's position. There are a few things worth knowing about these settings: All settings are automatically saved, and will be restored the next time the module is powered on. Strange things happen when FREEZE is enabled. Because feedback/layering can no longer occur in the recording buffer (hey, it's frozen...), we route the output signal through delays and all-pass filters, and let the feedback build-up occur in this extra recording space - giving the sound a very reverb-like nature. Advanced topics Audio quality Hold the Blend parameter/Audio quality button for one second, then press it repeatedly to choose a recording quality. The current quality setting is indicated by a red LED. Note that Clouds' 8-bit is a lovely flavour of 8-bit: \u00b5-law companding. It sounds like a Cassette, or a Fairlight - less hiss, more distortion. Saving and loading buffers Up to 4 frozen audio buffers can be saved and reloaded. Along with the audio data itself, the quality settings and the processing mode are saved with it. To save the recording buffer in permanent memory: Hold the Load/Save button for one second. Press the Blend parameter/Audio quality button repeatedly to select one of the 4 memory slots. The selected slot is indicated by a blinking red LED. Press the Load/Save button to confirm. To load a recording buffer from permanent memory: Press the Load/Save button. Press the Blend parameter/Audio quality button repeatedly to select one of the 4 memory slots. The selected slot is indicated by a blinking green LED. Press the Load/Save button to confirm. If you press the Load/Save button by mistake, do not press any button for a few seconds and the module will return to its normal state. Tips and tricks If you need a noise source to randomize grain position or pitch, you could do worse than reusing one of the audio outputs. It's certainly not white noise, but it's random enough... Scratch and caress a sound by using a contact microphone or a touch strip to trigger grains and modify playback POSITION . Very dense clouds sound the best when at least one parameter (pitch or position) receives random modulations. Otherwise, the many identical \"echoes\" created by the repeating grains will sound like a very resonant feedback comb filter. Raw material like sawtooth or sine waves sound very good, especially with heavy random modulation. A fun exercise is to recreate the classic THX sound with a random source and a VCA. Send a very fast sequence of 3 or 4 notes to the V/O input, so that each grain (if sown randomly) randomly picks one of those notes. The result? A chord! Experiment with capturing many small fragments of sound by sending short pulses to FREEZE while a complex patch is being played through the audio input! Calibration procedure The module is factory-calibrated using precision voltage sources. Follow this procedure only if you want to compensate for inaccuracies in your CV sources, or if your module has lost its calibration settings following a fault or the installation of alternative firmware. To calibrate the unit: Disconnect all CV inputs. Connect the note CV output of a well-calibrated keyboard interface or MIDI-CV converter to the V/OCT input. Press the Load/save button, and while you hold it down, press the Blend parameter/Audio quality button. The first 2 LEDs will blink in orange. Play a C2 note, or send a 1V voltage from your CV source. Press the Load/Save button. The four LEDs will blink in orange. Play a C4 note, or send a 3V voltage from your CV source. Press the Load/Save push-button. Calibration is done! Firmware update procedure Unplug all CV inputs/outputs from the module. Connect the output of your audio interface/sound card to the IN L input. Power on your modular system with the FREEZE push-button pressed. The FREEZE LED will blink. Make sure that no additional sound (such as email notification sounds, background music etc.) from your computer will be played during the procedure. Make sure that your speakers/monitors are not connected to your audio interface - the noises emitted during the procedure are aggressive and can harm your hearing. On non-studio audio equipment (for example the line output from a desktop computer), you might have to turn up the gain to the maximum. When you are all set, play the firmware update file into the module. While the module receives data, the bargraph will show the signal level. Signal reception is optimal when two or three LEDs are lit. You can use the IN GAIN knob to boost or reduce the gain. When the end of the audio file is reached, the module automatically restarts - if it is not the case, please retry the procedure. In case the signal level is inadequate, the LEDs will blink in red. Press the FREEZE push-button and retry with a higher gain. If this does not help, please retry the procedure from another computer/audio interface, and make sure that no piece of equipment (equalizer, FX processor) is inserted in the signal chain. The infamous alternate modes In its tumultuous teenage years, Clouds tried to be everything, including a delay/pitch-shifter, a spectral processor, a projectionist and a cab driver in Rouen. This experimental code is still available in the module, by pressing the B button for 5 seconds until one of the LEDs glows in orange, and then repeatedly pressing the button to select one of 4 functions: (First LED lit) Granular processor (normal operation). (Second LED lit) Pitch shifter/time-stretcher. (Third LED lit) Looping delay. (Fourth LED lit) Spectral processor. These features are experimental, and the knobs might be reassigned to functions very different from what is printed on the panel. It is not recommended to use these alternate modes if you plan to let Tony Rolando come play with your system. Granular mode Home sweet home. Pitch-shifter/time-stretcher This mode is quite similar to the granular mode, except that it uses two overlapping grains synchronized with the most salient period of the sound. The grains are carefully spliced so that they mesh well with each other (a technique similar to the \"deglitching\" of early pitch-shifters). Modulating POSITION when recording is frozen will \"scrub\" through the audio buffer. Clouds' uses classic time-domain methods which are not suitable for polyphonic or percussive material (unless this percussive material is breakbeats and you liked Akai samplers. Then: smile). DENSITY creates a granular diffusion effect based on all-pass filters. TEXTURE acts as a low-pass/high-pass filter. SIZE controls the size of the overlapping windows used for pitch-shifting and time-stretching \u2013 from an extremely grainy \"drilling\" sound to smooth bits of loops. Sending a trigger to the TRIG input creates a clock-synchronized loop (when FREEZE is enabled) or stuttering effect \u2013 equivalent to applying a tempo-synchronized decaying envelope on the POSITION parameter. Looping delay The looping delay mode continuously plays back audio from the buffer without any kind of granularization. POSITION controls the distance between the playback head and the recording head (in other words, the delay time). Modulating POSITION will create effects similar to vinyl scratching or manual manipulation of tape. When FREEZE is activated, the content of the audio buffer is looped (stutter effect). POSITION controls the loop start and SIZE the loop duration. DENSITY creates a granular diffusion effect based on all-pass filters; and TEXTURE acts as a low-pass/high-pass filter. SIZE controls the size of the overlapping windows used for pitch-shifting \u2013 fully clockwise for a smooth result that might smear transients, fully counterclockwise for a grainy, almost ring-modulated sound. When FREEZE is enabled, sending a trigger on the TRIG input creates a clock-synchronized stuttering loop. Otherwise, the period of the trigger pulses sets the delay time \u2013 provided this delay is shorter than the recording buffer size. Spectral madness In this mode, the incoming signal is converted into \"frames\" of spectral data, that are stored, transformed, recombined, and resynthesized as a time-domain signal. POSITION selects into which buffer the audio is poured (when FREEZE is not active), or from which buffer the audio is synthesised (when FREEZE is active). For example, set POSITION to its minimum value. Press FREEZE . You get a first texture. Set POSITION to its maximum value. UNFREEZE . Wait for something else to happen in the incoming audio. Press FREEZE again. By moving POSITION you interpolate between the two textures which had been captured at the press of FREEZE . Depending on the quality settings there are 2 to 7 buffers laid out over the course of the POSITION knob. What the module does is crossfade between a \"wavetable\" of FFT slices. SIZE changes the coefficients of a polynomial that determines how frequencies are mapped between the analysis and synthesis buffers. It's like a 1-knob GRM Warp. Over the course of the knob it will do spectral shifting, but also spectral reversal. PITCH controls the transposition (pitch-shifting). DENSITY determines how results from the analyzer are passed to the resynthesizer. Below 12 o'clock, there's some increasing probability that a given FFT bin won't get updated, causing a kind of partial freeze. After 12 o'clock, adjacent analysis frames are increasingly merged together (like a low-pass filter in the amplitude each frequency bin). At extreme settings, random phase modulation is applied to smooth things - giving you different flavours of spectral muddling/reverb. TEXTURE does two things: below 12 o'clock, it increasingly quantizes the amplitudes of the spectral components, like a very low-bitrate audio file. After 12 o'clock, it increasingly weakens the strongest partials and amplifies the weakest ones. This has the effect of making the spectrum more noise-like. Sending a trigger to the TRIG input creates various frequency-domain glitches typical of corrupted (encoded) audio files. It works as a kind of build-up/feedback effect - the shorter the pulse, the smaller the effect. With a continuous gate, it'll really start to rot.","title":"Manual"},{"location":"modules/clouds/manual/#overview","text":"Clouds is a granular audio processor. It creates textures and soundscapes by combining multiple overlapping, delayed, transposed and enveloped segments of sound taken from an audio recording buffer. Clouds differs from other granular Eurorack modules in that it focuses on the real-time processing of audio sources from your modular system itself, rather than the playback of pre-recorded samples from a storage device. It rewards the freezing, fragmentation and dissolution of the unexpected instant, rather than the careful planning of what might very well not come.","title":"Overview"},{"location":"modules/clouds/manual/#installation","text":"Clouds is designed for Eurorack synthesizer systems and occupies 18 HP of space. It requires a -12V/+12V supply (2x5 pin connector), drawing 10mA from the -12V rail and 120mA from the +12V rail. The red stripe of the ribbon cable must be oriented on the same side as the \"Red stripe\" marking on the printed circuit board.","title":"Installation"},{"location":"modules/clouds/manual/#about-granular-synthesis","text":"Clouds continuously records the incoming audio into a short amount of sample memory. While recording time can reach up to 8s by reducing the audio quality setting, you ought to feel very guilty every time you think of this as \"tape\" - think of it as a space, a room. Using this recorded audio data, the module synthesizes a sonic texture by playing back short (overlapping) segments of audio (also known as \"grains\") extracted from it. Clouds allows you to control: From which part of the buffer the grains are taken. How long the grains are. At which speed/pitch the grains are replayed. How much overlap there is between the grains (density). Whether the distribution of grains in time is constant or random. Which envelope curve is applied to the grains - giving the impression of a \"rough\" or \"smooth\" texture. In addition, to create textures with a \"blurry\" feel, a diffuser (network of all-pass filters - like a reverb without tail) can be applied. The module plays grains continuously, at a rate determined by the DENSITY and SIZE settings. A trigger input is also present, to explicitly instruct the module to start the playback of a new grain. The maximum number of concurrent grains is quite large - between 40 and 60. This specificity brings Clouds closer to the roots of granular synthesis, and allows the synthesis of varied textures even from basic waveforms - there's indeed many more dimensions to granular synthesis than keeping a playback pointer moving through a SD-card sample! It is possible, at any time, to FREEZE the audio buffer from which the grains are taken - In this case, the incoming audio is no longer recorded. Somehow, Clouds is the exact opposite of a sampler: by default, the module always samples the audio it receives, except when it is in the frozen state.","title":"About Granular synthesis"},{"location":"modules/clouds/manual/#front-panel","text":"","title":"Front panel"},{"location":"modules/clouds/manual/#controls","text":"A. FREEZE button. This latching button stops the recording of incoming audio. Granularization is now performed on the last few seconds of audio kept in memory in the module. B . Blending parameter/Audio quality button. Selects which of the blending parameters is controlled by the BLEND knob and CV input, or selects one of the four audio quality settings. C . Load/Save button. See the \"Advanced topics\" section. D . Grain POSITION . Selects from which part of the recording buffer the audio grains are played. Turn the knob clockwise to travel back in time. E. F. Grain SIZE and PITCH (transposition). At 12 o'clock, the buffer is played at its original frequency. G. Audio INPUT GAIN , from -18dB to +6dB. H. Grain DENSITY . At 12 o'clock, no grains are generated. Turn clockwise and grains will be sown randomly, counter-clockwise and they will be played at a constant rate. The further you turn, the higher the overlap between grains. I. Grain TEXTURE . Morphs through various shapes of grain envelopes: square (boxcar), triangle, and then Hann window. Past 2 o'clock, activates a diffuser which smears transients. J. BLEND knob. This multi-function knob is described in the Blending parameters section. K. Indicator LEDs. They work as an input vu-meter. When FREEZE is active, they monitor the output level. Soft-clipping occurs when the last LED is on. They can also indicate the quality setting (red), the function assigned to the BLEND knob (green), or the value of the four blending parameters (multicolor).","title":"Controls"},{"location":"modules/clouds/manual/#inputs-and-outputs","text":"All CV inputs are calibrated for a range of +/- 5V. Voltages outside of this range are tolerated, but will be clamped. 1. FREEZE gate input. When the input gate signal is high, stops the recording of incoming audio, just as latching the FREEZE button would do. 2. TRIGGER input. Generates a single grain. By moving the grain DENSITY to 12 o'clock, and sending a trigger to this input, Clouds can be controlled like a micro-sample player. An LFO or clock divider (or even a pressure plate) can thus be used to sow grains at the rate of your choice. 3. 4. Grain POSITION and SIZE CV inputs. 5. Grain transposition ( PITCH ) CV input, with V/Oct response. 6. BLEND CV input. This CV input can control one of the following functions depending on the active blending parameter: dry/wet balance, grain stereo spread, feedback amount and reverb amount. 7. 8. Stereo audio input. When no patch cable is inserted in the right channel input, this input will receive the signal from the left channel. 9. 10. Grain DENSITY and TEXTURE CV inputs. 11. 12. Stereo audio output.","title":"Inputs and outputs"},{"location":"modules/clouds/manual/#blend-parameters","text":"The BLEND knob can control one of these four settings: Dry/wet balance. Stereo spread (amount of random panning/balance applied to the grains). Feedback amount. Reverberation amount. To select which parameter is controlled by the BLEND knob and the BLEND CV input, press the Blend parameter/Audio quality button. The current parameter is temporarily indicated by a green LED. When turning the BLEND knob, the color of the four status LEDs temporarily shows the value of the four blending parameters (from black when the parameter is set to its minimum value to green, yellow and then red for the maximum value). It could happen that the position of the knob does not match the value of the parameter - the curse of multi-function knobs! If this is the case, turning the BLEND knob clockwise (resp. counterclockwise) causes a small increase (resp. decrease) in the value of the parameter, and turning it further causes larger changes, until the value progressively catches up with the knob's position. There are a few things worth knowing about these settings: All settings are automatically saved, and will be restored the next time the module is powered on. Strange things happen when FREEZE is enabled. Because feedback/layering can no longer occur in the recording buffer (hey, it's frozen...), we route the output signal through delays and all-pass filters, and let the feedback build-up occur in this extra recording space - giving the sound a very reverb-like nature.","title":"Blend parameters"},{"location":"modules/clouds/manual/#advanced-topics","text":"","title":"Advanced topics"},{"location":"modules/clouds/manual/#audio-quality","text":"Hold the Blend parameter/Audio quality button for one second, then press it repeatedly to choose a recording quality. The current quality setting is indicated by a red LED. Note that Clouds' 8-bit is a lovely flavour of 8-bit: \u00b5-law companding. It sounds like a Cassette, or a Fairlight - less hiss, more distortion.","title":"Audio quality"},{"location":"modules/clouds/manual/#saving-and-loading-buffers","text":"Up to 4 frozen audio buffers can be saved and reloaded. Along with the audio data itself, the quality settings and the processing mode are saved with it. To save the recording buffer in permanent memory: Hold the Load/Save button for one second. Press the Blend parameter/Audio quality button repeatedly to select one of the 4 memory slots. The selected slot is indicated by a blinking red LED. Press the Load/Save button to confirm. To load a recording buffer from permanent memory: Press the Load/Save button. Press the Blend parameter/Audio quality button repeatedly to select one of the 4 memory slots. The selected slot is indicated by a blinking green LED. Press the Load/Save button to confirm. If you press the Load/Save button by mistake, do not press any button for a few seconds and the module will return to its normal state.","title":"Saving and loading buffers"},{"location":"modules/clouds/manual/#tips-and-tricks","text":"If you need a noise source to randomize grain position or pitch, you could do worse than reusing one of the audio outputs. It's certainly not white noise, but it's random enough... Scratch and caress a sound by using a contact microphone or a touch strip to trigger grains and modify playback POSITION . Very dense clouds sound the best when at least one parameter (pitch or position) receives random modulations. Otherwise, the many identical \"echoes\" created by the repeating grains will sound like a very resonant feedback comb filter. Raw material like sawtooth or sine waves sound very good, especially with heavy random modulation. A fun exercise is to recreate the classic THX sound with a random source and a VCA. Send a very fast sequence of 3 or 4 notes to the V/O input, so that each grain (if sown randomly) randomly picks one of those notes. The result? A chord! Experiment with capturing many small fragments of sound by sending short pulses to FREEZE while a complex patch is being played through the audio input!","title":"Tips and tricks"},{"location":"modules/clouds/manual/#calibration-procedure","text":"The module is factory-calibrated using precision voltage sources. Follow this procedure only if you want to compensate for inaccuracies in your CV sources, or if your module has lost its calibration settings following a fault or the installation of alternative firmware. To calibrate the unit: Disconnect all CV inputs. Connect the note CV output of a well-calibrated keyboard interface or MIDI-CV converter to the V/OCT input. Press the Load/save button, and while you hold it down, press the Blend parameter/Audio quality button. The first 2 LEDs will blink in orange. Play a C2 note, or send a 1V voltage from your CV source. Press the Load/Save button. The four LEDs will blink in orange. Play a C4 note, or send a 3V voltage from your CV source. Press the Load/Save push-button. Calibration is done!","title":"Calibration procedure"},{"location":"modules/clouds/manual/#firmware-update-procedure","text":"Unplug all CV inputs/outputs from the module. Connect the output of your audio interface/sound card to the IN L input. Power on your modular system with the FREEZE push-button pressed. The FREEZE LED will blink. Make sure that no additional sound (such as email notification sounds, background music etc.) from your computer will be played during the procedure. Make sure that your speakers/monitors are not connected to your audio interface - the noises emitted during the procedure are aggressive and can harm your hearing. On non-studio audio equipment (for example the line output from a desktop computer), you might have to turn up the gain to the maximum. When you are all set, play the firmware update file into the module. While the module receives data, the bargraph will show the signal level. Signal reception is optimal when two or three LEDs are lit. You can use the IN GAIN knob to boost or reduce the gain. When the end of the audio file is reached, the module automatically restarts - if it is not the case, please retry the procedure. In case the signal level is inadequate, the LEDs will blink in red. Press the FREEZE push-button and retry with a higher gain. If this does not help, please retry the procedure from another computer/audio interface, and make sure that no piece of equipment (equalizer, FX processor) is inserted in the signal chain.","title":" Firmware update procedure"},{"location":"modules/clouds/manual/#the-infamous-alternate-modes","text":"In its tumultuous teenage years, Clouds tried to be everything, including a delay/pitch-shifter, a spectral processor, a projectionist and a cab driver in Rouen. This experimental code is still available in the module, by pressing the B button for 5 seconds until one of the LEDs glows in orange, and then repeatedly pressing the button to select one of 4 functions: (First LED lit) Granular processor (normal operation). (Second LED lit) Pitch shifter/time-stretcher. (Third LED lit) Looping delay. (Fourth LED lit) Spectral processor. These features are experimental, and the knobs might be reassigned to functions very different from what is printed on the panel. It is not recommended to use these alternate modes if you plan to let Tony Rolando come play with your system.","title":"The infamous alternate modes"},{"location":"modules/clouds/manual/#granular-mode","text":"Home sweet home.","title":"Granular mode"},{"location":"modules/clouds/manual/#pitch-shiftertime-stretcher","text":"This mode is quite similar to the granular mode, except that it uses two overlapping grains synchronized with the most salient period of the sound. The grains are carefully spliced so that they mesh well with each other (a technique similar to the \"deglitching\" of early pitch-shifters). Modulating POSITION when recording is frozen will \"scrub\" through the audio buffer. Clouds' uses classic time-domain methods which are not suitable for polyphonic or percussive material (unless this percussive material is breakbeats and you liked Akai samplers. Then: smile). DENSITY creates a granular diffusion effect based on all-pass filters. TEXTURE acts as a low-pass/high-pass filter. SIZE controls the size of the overlapping windows used for pitch-shifting and time-stretching \u2013 from an extremely grainy \"drilling\" sound to smooth bits of loops. Sending a trigger to the TRIG input creates a clock-synchronized loop (when FREEZE is enabled) or stuttering effect \u2013 equivalent to applying a tempo-synchronized decaying envelope on the POSITION parameter.","title":"Pitch-shifter/time-stretcher"},{"location":"modules/clouds/manual/#looping-delay","text":"The looping delay mode continuously plays back audio from the buffer without any kind of granularization. POSITION controls the distance between the playback head and the recording head (in other words, the delay time). Modulating POSITION will create effects similar to vinyl scratching or manual manipulation of tape. When FREEZE is activated, the content of the audio buffer is looped (stutter effect). POSITION controls the loop start and SIZE the loop duration. DENSITY creates a granular diffusion effect based on all-pass filters; and TEXTURE acts as a low-pass/high-pass filter. SIZE controls the size of the overlapping windows used for pitch-shifting \u2013 fully clockwise for a smooth result that might smear transients, fully counterclockwise for a grainy, almost ring-modulated sound. When FREEZE is enabled, sending a trigger on the TRIG input creates a clock-synchronized stuttering loop. Otherwise, the period of the trigger pulses sets the delay time \u2013 provided this delay is shorter than the recording buffer size.","title":"Looping delay"},{"location":"modules/clouds/manual/#spectral-madness","text":"In this mode, the incoming signal is converted into \"frames\" of spectral data, that are stored, transformed, recombined, and resynthesized as a time-domain signal. POSITION selects into which buffer the audio is poured (when FREEZE is not active), or from which buffer the audio is synthesised (when FREEZE is active). For example, set POSITION to its minimum value. Press FREEZE . You get a first texture. Set POSITION to its maximum value. UNFREEZE . Wait for something else to happen in the incoming audio. Press FREEZE again. By moving POSITION you interpolate between the two textures which had been captured at the press of FREEZE . Depending on the quality settings there are 2 to 7 buffers laid out over the course of the POSITION knob. What the module does is crossfade between a \"wavetable\" of FFT slices. SIZE changes the coefficients of a polynomial that determines how frequencies are mapped between the analysis and synthesis buffers. It's like a 1-knob GRM Warp. Over the course of the knob it will do spectral shifting, but also spectral reversal. PITCH controls the transposition (pitch-shifting). DENSITY determines how results from the analyzer are passed to the resynthesizer. Below 12 o'clock, there's some increasing probability that a given FFT bin won't get updated, causing a kind of partial freeze. After 12 o'clock, adjacent analysis frames are increasingly merged together (like a low-pass filter in the amplitude each frequency bin). At extreme settings, random phase modulation is applied to smooth things - giving you different flavours of spectral muddling/reverb. TEXTURE does two things: below 12 o'clock, it increasingly quantizes the amplitudes of the spectral components, like a very low-bitrate audio file. After 12 o'clock, it increasingly weakens the strongest partials and amplifies the weakest ones. This has the effect of making the spectrum more noise-like. Sending a trigger to the TRIG input creates various frequency-domain glitches typical of corrupted (encoded) audio files. It works as a kind of build-up/feedback effect - the shorter the pulse, the smaller the effect. With a continuous gate, it'll really start to rot.","title":"Spectral madness"},{"location":"modules/clouds/open_source/","text":"Github repository Schematics Firmware hacking Clouds' source code is available under the MIT licence. The code (along with the hardware description files) can be found in the clouds directory in our Eurorack modules git repository . After having cloned the repository, don't forget to run git submodule init && git submodule update to make sure the sub-projects referenced in the code are also pulled. Toolchain If you don't mind installing Vagrant and VirtualBox a cozy environment for firmware hacking is available. If you want to set up your own environment to build Clouds' code, an ARM EABI toolchain must be installed. Because of tight CPU and code size limits, we recommend you to use the same compiler version as we do: 4.8-2013-q4-major . Various pre-compiled binaries and source packages are available here . The path to the toolchain binaries must be specified in the TOOLCHAIN_PATH variable in clouds/makefile . To build the bootloader, use the following command: make -f clouds/bootloader/makefile hex To build the code, use the following command: make -f clouds/makefile If you modify lookup tables and want the big resources.cc file to be regenerated: touch clouds/resources/resources.py && make -f clouds/makefile resources Firmware programming A first solution is to simply use the firmware update procedure. A .wav file for firmware upgrade can be generated with: make -f clouds/makefile wav The firmware can then be loaded into the module using the procedure described in the manual. Past this point, we assume you know what you are doing and we are not responsible for any damage to your module! Another solution is to use the built-in serial bootloader of the STM32F. Connect a FTDI dongle with a 3.3V output level ( such as this ) to the 6 pin connector at the back of the module. If necessary, edit the serial port special file corresponding to the FTDI dongle in the PGM_SERIAL_PORT variable in stmlib/makefile.inc. GND must match GND, TX must match RX and vice-versa. Hold the RESET switch on the side of the module. Press the SYSBOOT switch next to it, and release RESET . Nothing is shown on the module display (it is in bootloader limbo...) Upload the firmware with: make -f clouds/makefile upload_combo_serial The last \u2013 and recommended \u2013 solution for firmware programming is to use a JTAG interface and openOCD. We recommend Olimex' ARM-USB-OCD-H devices . An adapter must also be purchased for the mini-JTAG connector used by Clouds. Upload the firmware with: make -f clouds/makefile upload_combo_jtag","title":"Open source"},{"location":"modules/clouds/open_source/#firmware-hacking","text":"Clouds' source code is available under the MIT licence. The code (along with the hardware description files) can be found in the clouds directory in our Eurorack modules git repository . After having cloned the repository, don't forget to run git submodule init && git submodule update to make sure the sub-projects referenced in the code are also pulled.","title":"Firmware hacking"},{"location":"modules/clouds/open_source/#toolchain","text":"If you don't mind installing Vagrant and VirtualBox a cozy environment for firmware hacking is available. If you want to set up your own environment to build Clouds' code, an ARM EABI toolchain must be installed. Because of tight CPU and code size limits, we recommend you to use the same compiler version as we do: 4.8-2013-q4-major . Various pre-compiled binaries and source packages are available here . The path to the toolchain binaries must be specified in the TOOLCHAIN_PATH variable in clouds/makefile . To build the bootloader, use the following command: make -f clouds/bootloader/makefile hex To build the code, use the following command: make -f clouds/makefile If you modify lookup tables and want the big resources.cc file to be regenerated: touch clouds/resources/resources.py && make -f clouds/makefile resources","title":"Toolchain"},{"location":"modules/clouds/open_source/#firmware-programming","text":"A first solution is to simply use the firmware update procedure. A .wav file for firmware upgrade can be generated with: make -f clouds/makefile wav The firmware can then be loaded into the module using the procedure described in the manual. Past this point, we assume you know what you are doing and we are not responsible for any damage to your module! Another solution is to use the built-in serial bootloader of the STM32F. Connect a FTDI dongle with a 3.3V output level ( such as this ) to the 6 pin connector at the back of the module. If necessary, edit the serial port special file corresponding to the FTDI dongle in the PGM_SERIAL_PORT variable in stmlib/makefile.inc. GND must match GND, TX must match RX and vice-versa. Hold the RESET switch on the side of the module. Press the SYSBOOT switch next to it, and release RESET . Nothing is shown on the module display (it is in bootloader limbo...) Upload the firmware with: make -f clouds/makefile upload_combo_serial The last \u2013 and recommended \u2013 solution for firmware programming is to use a JTAG interface and openOCD. We recommend Olimex' ARM-USB-OCD-H devices . An adapter must also be purchased for the mini-JTAG connector used by Clouds. Upload the firmware with: make -f clouds/makefile upload_combo_jtag","title":"Firmware programming"},{"location":"modules/clouds/original_blurb/","text":"Particles, grains and birds. Flocks, swarms and clouds Clouds is a granular audio processor like no other. Clouds is focused on the realtime granularization of incoming audio signals, and their transformation into amorphous textures. Grains of adjustable size, pitch and envelope, are extracted at controllable time offsets from the input signal. Grains are seeded randomly, periodically, or whenever the module receives a trigger. The textures generated by Clouds are extremely thick, partly because of the large number of concurrent grains (up to 60), partly because of a built-in allpass diffuser and reverberator, smearing the shortest transient into a wash of noise - giving the illusion of an even larger number of simultaneous grains. A list of things Clouds is not trying to be: a sample player, a slicer, a looper.","title":"Original blurb"},{"location":"modules/clouds/original_blurb/#particles-grains-and-birds-flocks-swarms-and-clouds","text":"Clouds is a granular audio processor like no other. Clouds is focused on the realtime granularization of incoming audio signals, and their transformation into amorphous textures. Grains of adjustable size, pitch and envelope, are extracted at controllable time offsets from the input signal. Grains are seeded randomly, periodically, or whenever the module receives a trigger. The textures generated by Clouds are extremely thick, partly because of the large number of concurrent grains (up to 60), partly because of a built-in allpass diffuser and reverberator, smearing the shortest transient into a wash of noise - giving the illusion of an even larger number of simultaneous grains. A list of things Clouds is not trying to be: a sample player, a slicer, a looper.","title":"Particles, grains and birds. Flocks, swarms and clouds"},{"location":"modules/ears/","text":"Key data Original printed manual Features Ears for your modular Extending the Mikrophonie Specifications Revisions and variants Key data Contact microphone Parameter Value Width 4HP Depth 25mm +12V current 5mA -12V current 5mA Lifetime 09/16 to 03/22 Modulargrid Link Original printed manual PDF download Features Ears for your modular Built-in contact microphone soldered right under the front panel, turning the panel and your entire case into a microphone. Increasingly spaced ridges on the panel, generating sonically interesting pulses or impulse combs when rubbed. Strike, pick or scratch digital resonators like Rings, Elements or the 4ms SMR. High-quality amplification stage suitable for external contact microphones, electro-acoustic instruments like guitars, or plain line-level signals. Extending the Mikrophonie Compared to the Mikrophonie, Ears has additional outputs: Envelope follower, translating the decaying amplitude profile of a tap into an envelope CV. Gate detector, translating taps into gate signals. Envelope follower and gate detector can process external signals. Specifications Audio amplifier with 1M input impedance, up to 40dB of gain. External input bypassing the built-in contact microphone. Envelope follower with 3 preset attack and release times (adjustable by jumper). Gate detector with 3 preset sensitivity levels (adjustable by jumper) and +8V gate output. Three indicator LEDs: amplifier clipping (red), envelope follower level (white), gate detector activity (orange). Revisions and variants A rare version of the module (30 units) has a different pattern on the panel, meant to be \"scratched\" with a plectrum.","title":"Index"},{"location":"modules/ears/#key-data","text":"Contact microphone Parameter Value Width 4HP Depth 25mm +12V current 5mA -12V current 5mA Lifetime 09/16 to 03/22 Modulargrid Link","title":"Key data"},{"location":"modules/ears/#original-printed-manual","text":"PDF download","title":"Original printed manual"},{"location":"modules/ears/#features","text":"","title":"Features"},{"location":"modules/ears/#ears-for-your-modular","text":"Built-in contact microphone soldered right under the front panel, turning the panel and your entire case into a microphone. Increasingly spaced ridges on the panel, generating sonically interesting pulses or impulse combs when rubbed. Strike, pick or scratch digital resonators like Rings, Elements or the 4ms SMR. High-quality amplification stage suitable for external contact microphones, electro-acoustic instruments like guitars, or plain line-level signals.","title":"Ears for your modular"},{"location":"modules/ears/#extending-the-mikrophonie","text":"Compared to the Mikrophonie, Ears has additional outputs: Envelope follower, translating the decaying amplitude profile of a tap into an envelope CV. Gate detector, translating taps into gate signals. Envelope follower and gate detector can process external signals.","title":"Extending the Mikrophonie"},{"location":"modules/ears/#specifications","text":"Audio amplifier with 1M input impedance, up to 40dB of gain. External input bypassing the built-in contact microphone. Envelope follower with 3 preset attack and release times (adjustable by jumper). Gate detector with 3 preset sensitivity levels (adjustable by jumper) and +8V gate output. Three indicator LEDs: amplifier clipping (red), envelope follower level (white), gate detector activity (orange).","title":"Specifications"},{"location":"modules/ears/#revisions-and-variants","text":"A rare version of the module (30 units) has a different pattern on the panel, meant to be \"scratched\" with a plectrum.","title":"Revisions and variants"},{"location":"modules/ears/manual/","text":"Installation Ears requires a -12V/+12V power supply (2x5 pin connector). The ribbon cable connector must be aligned so that the red stripe of the ribbon cable (-12V) is on the same side of the module's power header as the \"Red stripe\" marking on the board. The module draws 5mA from both the +12V and the -12V supply rails. Controls, inputs and outputs A. Gain control, 0 to +40dB. This large gain ranges covers everything - from the amplification of line-level instruments, to the magnification of tiny sonic details captured by external contact microphones. B. Contact microphone. Scratch, tap, rub, brush... to your heart's delight. 1. Hi-Z Audio input. Amplifies an external source. Patching a cable here disconnects the contact microphone. 2. Audio output. The red LED indicates clipping. 3. Envelope CV output. The white LED indicates the envelope CV level. 4. Gate output. Emits +8V when the envelope exceeds a threshold. The activity of this output is indicated by the orange LED. Envelope follower and gate detector settings The jumpers at the back of the module adjust the response of the envelope follower and gate detector. The last setting, corresponding to the longest time or higher voltge, is obtained by removing the jumper.","title":"Manual"},{"location":"modules/ears/manual/#installation","text":"Ears requires a -12V/+12V power supply (2x5 pin connector). The ribbon cable connector must be aligned so that the red stripe of the ribbon cable (-12V) is on the same side of the module's power header as the \"Red stripe\" marking on the board. The module draws 5mA from both the +12V and the -12V supply rails.","title":"Installation"},{"location":"modules/ears/manual/#controls-inputs-and-outputs","text":"A. Gain control, 0 to +40dB. This large gain ranges covers everything - from the amplification of line-level instruments, to the magnification of tiny sonic details captured by external contact microphones. B. Contact microphone. Scratch, tap, rub, brush... to your heart's delight. 1. Hi-Z Audio input. Amplifies an external source. Patching a cable here disconnects the contact microphone. 2. Audio output. The red LED indicates clipping. 3. Envelope CV output. The white LED indicates the envelope CV level. 4. Gate output. Emits +8V when the envelope exceeds a threshold. The activity of this output is indicated by the orange LED.","title":"Controls, inputs and outputs"},{"location":"modules/ears/manual/#envelope-follower-and-gate-detector-settings","text":"The jumpers at the back of the module adjust the response of the envelope follower and gate detector. The last setting, corresponding to the longest time or higher voltge, is obtained by removing the jumper.","title":"Envelope follower and gate detector settings"},{"location":"modules/ears/open_source/","text":"Github repository Schematics","title":"Open source"},{"location":"modules/ears/original_blurb/","text":"I can hear you... Ears is Mutable Instruments' take on Tom Whitwell's open-source Mikrophonie module \u2013 a contact microphone and amplifier. A large palette of organic, physical sounds can be generated by scratching, tapping, and more generally collecting any kind of acoustic waves surrounding your modular case \u2013 even speaker feedback. With its built-in envelope follower and gate detector, it can also be the gateway between external audio sources and your modular system.","title":"Original blurb"},{"location":"modules/ears/original_blurb/#i-can-hear-you","text":"Ears is Mutable Instruments' take on Tom Whitwell's open-source Mikrophonie module \u2013 a contact microphone and amplifier. A large palette of organic, physical sounds can be generated by scratching, tapping, and more generally collecting any kind of acoustic waves surrounding your modular case \u2013 even speaker feedback. With its built-in envelope follower and gate detector, it can also be the gateway between external audio sources and your modular system.","title":"I can hear you..."},{"location":"modules/edges/","text":"Key data Original printed manual Features 3 Square/pulse generators 1 Noise and triangle generator Advanced features Specifications Revisions and variants 2014 Key data Quad chiptune audio generator Parameter Value Width 20HP Depth 25mm +12V current 70mA -12V current 20mA Lifetime 08/13 to 10/16 Modulargrid Link Processor ATXMega32A4U @ 32 MHz Original printed manual PDF download Features 3 Square/pulse generators Aliasing-free digital synthesis, based on a 4 MHz digital timer. 5 preset duty cycles settings, from 50% to 95%, or CV-controlled PWM. 1 Noise and triangle generator 48kHz, 12-bit DAC without reconstruction filter for a raw sound. Triangle, bitcrushed sine, steppy NES triangle or various flavours of LSFR noise. Advanced features Optional semitone quantizer on the pitch CV input. Per-channel mini step sequencer (8 steps) \u2013 perfect for creating rapid fire arpeggios. When the sequencer is active, the GATE input works instead as a CLOCK input. Specifications Input impedances: 100k. CV acquisition: 4kHz, 12-bit. Channel 1 to 3: 4MHz, 1-bit. Channel 4: 48kHz, 12-bit. Revisions and variants 2014 Hardware revision labelled \"v2\" with the following differences: 2x5 power connector (originally 2x8). Built-in 5V regulator. Thonkiconn jacks. Frequency potentiometers have no center detent. Milky, diffused LEDs (originally clear). An octal DAC (originally quad) allows the FM inputs to be acquired separately from the main V/O input, and processed in software. In particular, this allows its repurposing as a PWM input for channels 1-3.","title":"Index"},{"location":"modules/edges/#key-data","text":"Quad chiptune audio generator Parameter Value Width 20HP Depth 25mm +12V current 70mA -12V current 20mA Lifetime 08/13 to 10/16 Modulargrid Link Processor ATXMega32A4U @ 32 MHz","title":"Key data"},{"location":"modules/edges/#original-printed-manual","text":"PDF download","title":"Original printed manual"},{"location":"modules/edges/#features","text":"","title":"Features"},{"location":"modules/edges/#3-squarepulse-generators","text":"Aliasing-free digital synthesis, based on a 4 MHz digital timer. 5 preset duty cycles settings, from 50% to 95%, or CV-controlled PWM.","title":"3 Square/pulse generators"},{"location":"modules/edges/#1-noise-and-triangle-generator","text":"48kHz, 12-bit DAC without reconstruction filter for a raw sound. Triangle, bitcrushed sine, steppy NES triangle or various flavours of LSFR noise.","title":"1 Noise and triangle generator"},{"location":"modules/edges/#advanced-features","text":"Optional semitone quantizer on the pitch CV input. Per-channel mini step sequencer (8 steps) \u2013 perfect for creating rapid fire arpeggios. When the sequencer is active, the GATE input works instead as a CLOCK input.","title":"Advanced features"},{"location":"modules/edges/#specifications","text":"Input impedances: 100k. CV acquisition: 4kHz, 12-bit. Channel 1 to 3: 4MHz, 1-bit. Channel 4: 48kHz, 12-bit.","title":"Specifications"},{"location":"modules/edges/#revisions-and-variants","text":"","title":"Revisions and variants"},{"location":"modules/edges/#2014","text":"Hardware revision labelled \"v2\" with the following differences: 2x5 power connector (originally 2x8). Built-in 5V regulator. Thonkiconn jacks. Frequency potentiometers have no center detent. Milky, diffused LEDs (originally clear). An octal DAC (originally quad) allows the FM inputs to be acquired separately from the main V/O input, and processed in software. In particular, this allows its repurposing as a PWM input for channels 1-3.","title":"2014"},{"location":"modules/edges/firmware/","text":"Download Original version No firmware update has ever been released by Mutable Instruments, but this file can be used to revert the module to the stock firmware.","title":"Firmware"},{"location":"modules/edges/firmware/#download","text":"Original version No firmware update has ever been released by Mutable Instruments, but this file can be used to revert the module to the stock firmware.","title":"Download"},{"location":"modules/edges/manual/","text":"Overview Edges is a bank of four voltage-controlled digital oscillators - 3x square wave channels and 1x LFSR noise or triangle channel - an architecture inspired by the music synthesis circuitry of classic 8-bit consoles and home computers. For a more faithful reproduction of these classic sounds, the square waves are generated using digital logic (timers / counters) rather than DSP techniques, and are thus free of aliasing artifacts. Each voice is equipped with a gate input, allowing it to be toggled on/off without the need for an external VCA. The 4 channels have individual outputs and are sent to a built-in mixer. Finally, a simple polyphonic sequencer allows each channel to play arpeggios or trills. Installation Edges is designed for Eurorack synthesizer systems and occupies 20 HP of space. It requires a -12V/+12V / +5V supply (2x8 connector), consuming 25mA from the -12V/+12V rails and 45mA from the +5V rail. The red stripe of the ribbon cable must be oriented on the same side as the \"Red stripe\" marking on the printed circuit board. Controls, inputs and outputs A1 .. A4. GATE : Channel gate input. When the sequencer is off, this input acts as a binary VCA - the channel is off when the signal is 0V; on when the signal exceeds a 0.7V threshold. When the sequencer is active, the channel is always on, and this input acts as a clock input, to step through the sequence. The gate inputs are normalled. For example, if you connect a jack on channel 2's gate, it will be used for channels 3 and 4 unless a jack is connected in one of their gate inputs. B1 .. B4. V/OCT : Channel frequency input. Just like the GATE inputs, these are also normalled across all channels. This can be used, for example, to transpose a chord or polyphonic sequence from a single note CV. C1 .. C4. MOD : Channel frequency modulation input. This input serves the same purpose as the V/OCT input (and is summed to it); but is not normalled from one channel to the other. D1 .. D4. FREQ : Channel frequency control, spanning 6 octaves. E1 .. E3. XMOD : This switch enables a special digital cross-modulation effect. From top to bottom: Channel 1 to Channel 2 hard sync. Channel 1 x Channel 2 ring modulation. Channel 1 x Channel 3 ring modulation. F1 .. F4. OUT : Channel individual output. When a jack is plugged in this output, the corresponding channel is removed from the global mix. G1 .. G4 : Channel volume control, for the mixer. Not that this potentiometer does not affect the individual outputs' levels (they are always at full level). H. MIX : Mixer output. I. WAVEFORM SELECT : Press these switches to cycle through the various waveshapes available on each channel. Hold a switch to modify the quantization/sequencing/calibration options of the corresponding channel (see the \"Channel options\" section). LED 1..4 : They indicate the status of each channel's gate input. Waveforms For channel 1, 2, and 3, the waveshapes are all square waves with 50%, 66%, 75%, 87%, 95% pulse or CV controlled pulse width. With this last option: * Channel 4's frequency input doubles as a PWM control (early revision of the module). * The FM input is repurposed as a PWM CV input (most recent revision of the module). For channel 4, the waveshapes are sine, triangle, NES triangle (with 16 loudness levels), sample-and-hold noise, NES LSFR 1 (long cycle) and NES LSFR 2 (short cycle). LSFRs are linear feedback shift registers - a digital technique for creating cyclic noise patterns. Settings mode Hold one of the 4 WAVEFORM SELECT switches to modify this channel's options. Leds 3 and 4 will blink. Press 1 to enable/disable semitone quantization on this channel. Led 1 indicates whether the quantizer is enabled. Press 2 to enable/disable the sequencer. Led 2 indicates whether the sequencer is enabled. Hold any one of the 4 WAVEFORM SELECT switches to exit the settings mode. Recording a sequence Hold one of the 4 WAVEFORM SELECT switches to select the channel in which you want to record a sequence. Leds 3 and 4 will blink. Press 3 to start recording. Led 1 lights on to indicate the active step (step 1). Set the FREQ control on the selected channel to the desired note; or enter a note from your CV keyboard or through your MIDI-CV interface. Press the second switch to continue to the next step. Set the FREQ control on the selected channel to the desired note for the second step. Press the third switch to continue, etc. To stop recording, press the currently active step. For example, to record a 6 step sequence: Press 3 to start recording. The sequencer starts at step 1. Set CV Press 2 Set CV Press 3 Set CV Press 4 Set CV Press 1 Set CV Press 2 Set CV Press 2 again (to indicate that you don't want to add a new step). You are done with recording. If you wanted to continue the sequence, you would have pressed 3, set a CV, press 4, set a CV, and press 4 (the sequence length is limited to 8 steps). Calibration Edges' is digitally calibrated. Please follow this procedure to calibrate all channels: Unplug all jacks connected to the GATE , V/OCT and FM inputs. Set all the FREQ potentiometers to their central position. Connect the note CV output of a well-calibrated keyboard interface or MIDI->CV converter to the first channel's V/OCT input. Because all V/OCT inputs are normalled, this signal will also be available for calibrating the other channels. Hold the channel 1 WAVEFORM SELECT switch until LEDs 3 and 4 blink. Press switch 4 (calibration). The LEDs show this pattern: **oo, to indicate that you need to play a C2 note (CV equal to 1V). Once the note has been played, press switch 4 to continue. The LEDs show this pattern: ****, to indicate that you need to play a C4 note (CV equal to 3V). Once the note has been played, press switch 4 continue. The channel is now calibrated. Repeat the steps 4/ 5/ 6/ 7/ by holding the channels 2, 3 and 4 WAVEFORM SELECT switches.","title":"Manual"},{"location":"modules/edges/manual/#overview","text":"Edges is a bank of four voltage-controlled digital oscillators - 3x square wave channels and 1x LFSR noise or triangle channel - an architecture inspired by the music synthesis circuitry of classic 8-bit consoles and home computers. For a more faithful reproduction of these classic sounds, the square waves are generated using digital logic (timers / counters) rather than DSP techniques, and are thus free of aliasing artifacts. Each voice is equipped with a gate input, allowing it to be toggled on/off without the need for an external VCA. The 4 channels have individual outputs and are sent to a built-in mixer. Finally, a simple polyphonic sequencer allows each channel to play arpeggios or trills.","title":"Overview"},{"location":"modules/edges/manual/#installation","text":"Edges is designed for Eurorack synthesizer systems and occupies 20 HP of space. It requires a -12V/+12V / +5V supply (2x8 connector), consuming 25mA from the -12V/+12V rails and 45mA from the +5V rail. The red stripe of the ribbon cable must be oriented on the same side as the \"Red stripe\" marking on the printed circuit board.","title":"Installation"},{"location":"modules/edges/manual/#controls-inputs-and-outputs","text":"A1 .. A4. GATE : Channel gate input. When the sequencer is off, this input acts as a binary VCA - the channel is off when the signal is 0V; on when the signal exceeds a 0.7V threshold. When the sequencer is active, the channel is always on, and this input acts as a clock input, to step through the sequence. The gate inputs are normalled. For example, if you connect a jack on channel 2's gate, it will be used for channels 3 and 4 unless a jack is connected in one of their gate inputs. B1 .. B4. V/OCT : Channel frequency input. Just like the GATE inputs, these are also normalled across all channels. This can be used, for example, to transpose a chord or polyphonic sequence from a single note CV. C1 .. C4. MOD : Channel frequency modulation input. This input serves the same purpose as the V/OCT input (and is summed to it); but is not normalled from one channel to the other. D1 .. D4. FREQ : Channel frequency control, spanning 6 octaves. E1 .. E3. XMOD : This switch enables a special digital cross-modulation effect. From top to bottom: Channel 1 to Channel 2 hard sync. Channel 1 x Channel 2 ring modulation. Channel 1 x Channel 3 ring modulation. F1 .. F4. OUT : Channel individual output. When a jack is plugged in this output, the corresponding channel is removed from the global mix. G1 .. G4 : Channel volume control, for the mixer. Not that this potentiometer does not affect the individual outputs' levels (they are always at full level). H. MIX : Mixer output. I. WAVEFORM SELECT : Press these switches to cycle through the various waveshapes available on each channel. Hold a switch to modify the quantization/sequencing/calibration options of the corresponding channel (see the \"Channel options\" section). LED 1..4 : They indicate the status of each channel's gate input.","title":"Controls, inputs and outputs"},{"location":"modules/edges/manual/#waveforms","text":"For channel 1, 2, and 3, the waveshapes are all square waves with 50%, 66%, 75%, 87%, 95% pulse or CV controlled pulse width. With this last option: * Channel 4's frequency input doubles as a PWM control (early revision of the module). * The FM input is repurposed as a PWM CV input (most recent revision of the module). For channel 4, the waveshapes are sine, triangle, NES triangle (with 16 loudness levels), sample-and-hold noise, NES LSFR 1 (long cycle) and NES LSFR 2 (short cycle). LSFRs are linear feedback shift registers - a digital technique for creating cyclic noise patterns.","title":"Waveforms"},{"location":"modules/edges/manual/#settings-mode","text":"Hold one of the 4 WAVEFORM SELECT switches to modify this channel's options. Leds 3 and 4 will blink. Press 1 to enable/disable semitone quantization on this channel. Led 1 indicates whether the quantizer is enabled. Press 2 to enable/disable the sequencer. Led 2 indicates whether the sequencer is enabled. Hold any one of the 4 WAVEFORM SELECT switches to exit the settings mode.","title":"Settings mode"},{"location":"modules/edges/manual/#recording-a-sequence","text":"Hold one of the 4 WAVEFORM SELECT switches to select the channel in which you want to record a sequence. Leds 3 and 4 will blink. Press 3 to start recording. Led 1 lights on to indicate the active step (step 1). Set the FREQ control on the selected channel to the desired note; or enter a note from your CV keyboard or through your MIDI-CV interface. Press the second switch to continue to the next step. Set the FREQ control on the selected channel to the desired note for the second step. Press the third switch to continue, etc. To stop recording, press the currently active step. For example, to record a 6 step sequence: Press 3 to start recording. The sequencer starts at step 1. Set CV Press 2 Set CV Press 3 Set CV Press 4 Set CV Press 1 Set CV Press 2 Set CV Press 2 again (to indicate that you don't want to add a new step). You are done with recording. If you wanted to continue the sequence, you would have pressed 3, set a CV, press 4, set a CV, and press 4 (the sequence length is limited to 8 steps).","title":"Recording a sequence"},{"location":"modules/edges/manual/#calibration","text":"Edges' is digitally calibrated. Please follow this procedure to calibrate all channels: Unplug all jacks connected to the GATE , V/OCT and FM inputs. Set all the FREQ potentiometers to their central position. Connect the note CV output of a well-calibrated keyboard interface or MIDI->CV converter to the first channel's V/OCT input. Because all V/OCT inputs are normalled, this signal will also be available for calibrating the other channels. Hold the channel 1 WAVEFORM SELECT switch until LEDs 3 and 4 blink. Press switch 4 (calibration). The LEDs show this pattern: **oo, to indicate that you need to play a C2 note (CV equal to 1V). Once the note has been played, press switch 4 to continue. The LEDs show this pattern: ****, to indicate that you need to play a C4 note (CV equal to 3V). Once the note has been played, press switch 4 continue. The channel is now calibrated. Repeat the steps 4/ 5/ 6/ 7/ by holding the channels 2, 3 and 4 WAVEFORM SELECT switches.","title":"Calibration"},{"location":"modules/edges/open_source/","text":"Github repository Schematics Firmware hacking Edges' source code is available under the GPL licence. The code (along with the hardware description files) can be found in the edges directory in our Eurorack modules git repository . After having cloned the repository, don't forget to run git submodule init && git submodule update to make sure the sub-projects referenced in the code are also pulled. Toolchain If you don't mind installing Vagrant and VirtualBox a cozy environment for firmware hacking is available. If you want to set up your own environment to build Edges' code, avr-gcc and avrdude must be installed. These are standard packages on Linux. On OS X, Crosspack can be installed. The path to the toolchain can be edited in the AVRLIB_TOOLS_PATH variable in avrlibx/makefile.mk directory. It might also be necessary to change the ISP programmer name in the PROGRAMMER variable. To build the bootloader, use the following command: make -f edges/makefile Firmware programming Programming must be done with an AVR PDI programmer. PDI is Atmel's upgraded programming standard for the AVR XMega line. Many ISP programmers do not support PDI! A programmer known to work is Atmel's AVR ISP mkII. Note that some older units will require a firmware upgrade to support PDI \u2013 unfortunately this upgrade requires the installation of Atmel's AVR Studio to be performed. The PDI programmer must be connected on the back of the module \u2013 red stripe of the cable on the same side as the J20 marking on the connector. To upload the code: make -f edges/makefile upload","title":"Open source"},{"location":"modules/edges/open_source/#firmware-hacking","text":"Edges' source code is available under the GPL licence. The code (along with the hardware description files) can be found in the edges directory in our Eurorack modules git repository . After having cloned the repository, don't forget to run git submodule init && git submodule update to make sure the sub-projects referenced in the code are also pulled.","title":"Firmware hacking"},{"location":"modules/edges/open_source/#toolchain","text":"If you don't mind installing Vagrant and VirtualBox a cozy environment for firmware hacking is available. If you want to set up your own environment to build Edges' code, avr-gcc and avrdude must be installed. These are standard packages on Linux. On OS X, Crosspack can be installed. The path to the toolchain can be edited in the AVRLIB_TOOLS_PATH variable in avrlibx/makefile.mk directory. It might also be necessary to change the ISP programmer name in the PROGRAMMER variable. To build the bootloader, use the following command: make -f edges/makefile","title":"Toolchain"},{"location":"modules/edges/open_source/#firmware-programming","text":"Programming must be done with an AVR PDI programmer. PDI is Atmel's upgraded programming standard for the AVR XMega line. Many ISP programmers do not support PDI! A programmer known to work is Atmel's AVR ISP mkII. Note that some older units will require a firmware upgrade to support PDI \u2013 unfortunately this upgrade requires the installation of Atmel's AVR Studio to be performed. The PDI programmer must be connected on the back of the module \u2013 red stripe of the cable on the same side as the J20 marking on the connector. To upload the code: make -f edges/makefile upload","title":"Firmware programming"},{"location":"modules/edges/original_blurb/","text":"4 channels of digital logic bliss, with love from the 8-bit era Enough with the analog, warm and organic. Edges is a module strictly focused on the straight lines, sharp edges, and clinical harsh modulations of digital logic. Its architecture is loosely based on classic 8-bit console soundchips, providing 4 simple voltage-controlled voices. Each voice consists of a digital oscillator with two pitch CV inputs and a coarse pitch knob, with a gate input allowing the voice to be turned on/off without the need for an external VCA. The 4 channels are sent to an onboard mixer \u2013 making Edges easy to use for chord generation or heavy drone synthesis applications.","title":"Original blurb"},{"location":"modules/edges/original_blurb/#4-channels-of-digital-logic-bliss-with-love-from-the-8-bit-era","text":"Enough with the analog, warm and organic. Edges is a module strictly focused on the straight lines, sharp edges, and clinical harsh modulations of digital logic. Its architecture is loosely based on classic 8-bit console soundchips, providing 4 simple voltage-controlled voices. Each voice consists of a digital oscillator with two pitch CV inputs and a coarse pitch knob, with a gate input allowing the voice to be turned on/off without the need for an external VCA. The 4 channels are sent to an onboard mixer \u2013 making Edges easy to use for chord generation or heavy drone synthesis applications.","title":"4 channels of digital logic bliss, with love from the 8-bit era"},{"location":"modules/elements/","text":"Key data Original printed manual Features Excitation signal generator Modal resonator Designed for Eurorack Specifications Revisions and variants 2021 Key data Texture synthesizer Parameter Value Width 34HP Depth 25mm +12V current 130mA -12V current 10mA Lifetime 01/15 to 01/22 Modulargrid Link Processor STM32F405RGT6 @ 168 MHz Codec WM8731 Original printed manual PDF download Features Excitation signal generator Three generators with mixer: bowing noise, blowing noise, percussive impulses. Envelope contour for bowing and blowing. Bowing noise generator: particle-like scratching noise with 2-pole low-pass filter. Blowing noise generator: granular pitched noise with wavetable-like scanning between various tone colors. Percussive impulse generator: interpolates through a collection of impulsive excitations \u2013 including sampled sticks, brushes and hammers, and models of damped mallets, plectrums, or bouncy particles. 2-pole low-pass filter and pitch control. Modal resonator Internally uses 64 zero-delay feedback state variable filters. Coarse, fine and FM frequency controls. Geometry: Interpolates through a collection of structures, including plates, strings, tubes, bowls. Brightness. Specifies the character of the material the resonating structure is made of \u2013 from wood to glass, from nylon to steel. Damping. Adds damping to the sound \u2013 simulates a wet material or the muting of the vibrations. Position. Specifies at which point the structure is excited. Space. Creates an increasingly rich stereo output by capturing the sound at two different points of the structure, and then adds more space through algorithmic reverberation. Designed for Eurorack All exciter and resonator parameters have a dedicated CV input with attenuverter. Strength input, for amplitude control of the exciter section. Frequency control through a V/O input controlling the main resonator frequency, and an FM input. Two audio inputs: one pre-envelope and diffuser, the other patched straight to the resonator. Stereo audio output, with adjustable width/reverberation. It is also possible to output the raw exciter signal on one channel, and the raw resonator signal on the other. Specifications Input impedances: 100k. CV range: +/- 8V. CVs outside of this range are simply clipped. Audio input level: calibrated for modular (10 Vpp). Audio acquisition and restitution: 16-bit, 32kHz. Internal computations on 32-bit floating point numbers. Revisions and variants 2021 Hardware revision labelled \"v0.3\" with minor manufacturability improvements, such as dimensions of PCB pads and holes.","title":"Index"},{"location":"modules/elements/#key-data","text":"Texture synthesizer Parameter Value Width 34HP Depth 25mm +12V current 130mA -12V current 10mA Lifetime 01/15 to 01/22 Modulargrid Link Processor STM32F405RGT6 @ 168 MHz Codec WM8731","title":"Key data"},{"location":"modules/elements/#original-printed-manual","text":"PDF download","title":"Original printed manual"},{"location":"modules/elements/#features","text":"","title":"Features"},{"location":"modules/elements/#excitation-signal-generator","text":"Three generators with mixer: bowing noise, blowing noise, percussive impulses. Envelope contour for bowing and blowing. Bowing noise generator: particle-like scratching noise with 2-pole low-pass filter. Blowing noise generator: granular pitched noise with wavetable-like scanning between various tone colors. Percussive impulse generator: interpolates through a collection of impulsive excitations \u2013 including sampled sticks, brushes and hammers, and models of damped mallets, plectrums, or bouncy particles. 2-pole low-pass filter and pitch control.","title":"Excitation signal generator"},{"location":"modules/elements/#modal-resonator","text":"Internally uses 64 zero-delay feedback state variable filters. Coarse, fine and FM frequency controls. Geometry: Interpolates through a collection of structures, including plates, strings, tubes, bowls. Brightness. Specifies the character of the material the resonating structure is made of \u2013 from wood to glass, from nylon to steel. Damping. Adds damping to the sound \u2013 simulates a wet material or the muting of the vibrations. Position. Specifies at which point the structure is excited. Space. Creates an increasingly rich stereo output by capturing the sound at two different points of the structure, and then adds more space through algorithmic reverberation.","title":"Modal resonator"},{"location":"modules/elements/#designed-for-eurorack","text":"All exciter and resonator parameters have a dedicated CV input with attenuverter. Strength input, for amplitude control of the exciter section. Frequency control through a V/O input controlling the main resonator frequency, and an FM input. Two audio inputs: one pre-envelope and diffuser, the other patched straight to the resonator. Stereo audio output, with adjustable width/reverberation. It is also possible to output the raw exciter signal on one channel, and the raw resonator signal on the other.","title":"Designed for Eurorack"},{"location":"modules/elements/#specifications","text":"Input impedances: 100k. CV range: +/- 8V. CVs outside of this range are simply clipped. Audio input level: calibrated for modular (10 Vpp). Audio acquisition and restitution: 16-bit, 32kHz. Internal computations on 32-bit floating point numbers.","title":"Specifications"},{"location":"modules/elements/#revisions-and-variants","text":"","title":"Revisions and variants"},{"location":"modules/elements/#2021","text":"Hardware revision labelled \"v0.3\" with minor manufacturability improvements, such as dimensions of PCB pads and holes.","title":"2021"},{"location":"modules/elements/firmware/","text":"Download Latest version (1.1) Firmware update procedure Revisions v1.1 aka \"Ringified Elements\" This update adds two new alternative synthesis models for the resonator section. To activate them, set the 8 knobs and 5 attenuverters of Elements' resonator section fully CW (mnemonic: Resonator to the max!), and hold the PLAY button for 5s. The blinking pattern of the PLAY button will indicate which model is active. You can repeat the procedure to cycle through the three models: 1 blink: Original resonator (modal filter bank). 2 blinks: Non-linear string model. The resonator is a comb filter, and GEOMETRY controls the amount of three types of non-linearity in the feedback loop. 3 blinks: Chords. With this model, the resonator is a bank of 6 comb filters, tuned to the different notes of a chord. GEOMETRY selects the chord type. v1.0 Initial release. Note: Elements was designed to be a one knob per function , no secret state module. For this reason, this version of the firmware has always been programmed on all modules, even the most recent.","title":"Firmware"},{"location":"modules/elements/firmware/#download","text":"Latest version (1.1) Firmware update procedure","title":"Download"},{"location":"modules/elements/firmware/#revisions","text":"","title":"Revisions"},{"location":"modules/elements/firmware/#v11-aka-ringified-elements","text":"This update adds two new alternative synthesis models for the resonator section. To activate them, set the 8 knobs and 5 attenuverters of Elements' resonator section fully CW (mnemonic: Resonator to the max!), and hold the PLAY button for 5s. The blinking pattern of the PLAY button will indicate which model is active. You can repeat the procedure to cycle through the three models: 1 blink: Original resonator (modal filter bank). 2 blinks: Non-linear string model. The resonator is a comb filter, and GEOMETRY controls the amount of three types of non-linearity in the feedback loop. 3 blinks: Chords. With this model, the resonator is a bank of 6 comb filters, tuned to the different notes of a chord. GEOMETRY selects the chord type.","title":"v1.1 aka \"Ringified Elements\""},{"location":"modules/elements/firmware/#v10","text":"Initial release. Note: Elements was designed to be a one knob per function , no secret state module. For this reason, this version of the firmware has always been programmed on all modules, even the most recent.","title":"v1.0"},{"location":"modules/elements/manual/","text":"Overview Elements is a full-blown synthesis voice based on modal synthesis - an under-appreciated flavour of physical modelling synthesis. With Elements, a sound is designed by specifying a resonant structure (plate, string, tube...), the properties of the material it is made of (stiffness, absorption...), and how the structure is excited to produce sound - struck, plucked, blown, bowed... Elements is raw. The sounds of scratching scrape metal, or the wind in a PVC tube, not a symphonic orchestra. Installation Elements is designed for Eurorack synthesizer systems and occupies 34 HP of space. It requires a -12V/+12V supply (2x5 pin connector), drawing 10mA from the -12V rail and 130mA from the +12V rail. The red stripe of the ribbon cable must be oriented on the same side as the \"Red stripe\" marking on the printed circuit board. Understanding modal synthesis Modes in vibrating structures Have you ever made a wine glass sing? And noticed that with just the right speed, the sound gets louder and louder? Or pushed a child on a swing with just the right timing to give her speed? The physical phenomenon at play, in both cases, is resonance. When we say that a physical system has a resonance at a particular frequency, it means that bringing energy to the system at this specific frequency will result in large oscillations - but if energy is brought at a lower or higher frequency, the oscillations will disappear. It is as if the system is responding to vibrations transmitted at a specific frequency, but is dissipating vibrations sent at the other frequencies. Just like a band-pass filter! This phenomenon is present in strings, drums, or the air column in a flute. These systems do not have one single resonant frequency, but several, called modes. The shape of the instrument, and the material it is made of determine the modes. Modes are characterized by their frequency, their amplitude, and their Q (quality) factor - how narrow the resonant frequency peak is. So what happens when we pluck a string, strike a drum or blow in a tube for a short moment? The short burst of energy of the blow/impact contains many frequencies. Some of these fall outside of the modes, and are absorbed. Some of these excite the modes, producing a stable, pitched sound. A sound will be perceived as pure if the modes have a high Q factor - in this case the spectrum has sharp harmonics, and everything else is absorbed. The sound will be more muffled or noisy if the modes have low Q. When the frequencies of the modes are in harmonic ratios, the sound is perceived as very musical and strongly pitched. When the modes are not located at integer ratios of the fundamental, the sound is perceived as metallic, and its pitch is ambiguous. If the burst of energy contains only low frequencies, only the lowest frequency modes will be excited. If the burst of energy contains very high frequency, it might be that some of the low frequency modes will not sound. So what we hear truly is the interplay between the modes present of the system, and the spectrum of the excitation which causes them to sound. The modes are like a mould, they represent a possibility of sound - it's up to us to fill them with an excitation signal! Modal synthesis artificially recreates this phenomenon. The modes of a vibrating structure are recreated with a bank of band-pass filters - one band-pass filter per mode. The frequency of these band-pass filters determines the pitch (note) which will be heard. The Q factor (resonance) of these filters determines for how long the system can sustain oscillation after being excited, and how \"pure\" the sound is. The perceived timbre is a complex function of the frequency, Q, and gains. To produce sound, this filter bank is excited by bursty/impulsive signals. These can be synthetic bursts of noise, clicks/sharp envelopes, or samples. In the rest of this document, we will refer to the filter bank as the Resonator, and the excitation signal generator as the Exciter. Comparisons with other synthesis techniques The idea of sending raw material into a filter might seem very similar to classic analog subtractive synthesis. But there is a big difference! In traditional analog subtractive synthesis, what determines the pitch (note) of the sound is the oscillator frequency (the raw material). The role of the filter is only to color it. In modal synthesis, the raw material is bursty and unpitched. What is truly responsible for the pitch of the note, and its timbre is the resonator. You might actually have already encountered this situation when \"pitching\" white noise by sending it into a resonant filter with high resonance. The exciter->resonator combination might also remind you of formant synthesis - but once again, what gives speech its pitched component is the exciter (the vocal cords), not the resonator (the vocal tract). A classic analog piece of equipment that used modal synthesis is the Roland TR-808 drum machine. The snare drum is synthesized by sending a narrow pulse into two band-pass filters. One could say that these two band-pass filters represent two modes of a snare drum; and that the analog pulse \"striking\" them is the exciter. Describing a sound by a set of frequencies and gains should remind you of additive synthesis. Actually, one could say that modal synthesis is an implementation of additive synthesis, in which we have replaced all the oscillators by resonant filters. Unlike oscillators, the filters will not self oscillate, so they need to be \"pinged\" by an external signal. Elements: Under the hood To do modal synthesis, one needs to specify the frequencies, Q factors and gains of all modes. The traditional approach followed in academia consists in pre-computing them through a mathematical analysis of the instrument and its material (as done for example in the Modalys environment developed at the IRCAM). Some other research labs performed analyses on audio recordings of an instrument to identify the modes. These approaches can lead to very realistic sounds, but they are not very suitable to a modular environment - because they don't provide the ability to shape the sound at the twist of a knob or change in a CV. Given that a rich, interesting sound can need up to 50 modes, providing individual frequency/amplitude/Q knobs would lead to a huge, barely usable module. Just like for additive synthesis, \"one slider per partial\" is a terrible UI. To solve this quandary, Elements does not use pre-recorded modal \"signatures\" of real materials, nor does it offer individual control on each mode. Instead, it generates synthetic signatures from a small set of parameters. We did our best to make sure that it was still possible to dial in a set of modes similar to those of real materials and structures - but of course, there's a large set of tones to explore outside of that! This philosophy is somewhat similar to those of algorithmic reverberators vs convolution reverberators - which trade realism and authenticity for tweakability! To recreate excitation signals evoking different types of musical instruments, Elements' exciter section consists of three generators named after three possible actions one can do with an instrument: The BOW generator synthesizes the sound of a bow scratching a material. Depending on the bow pressure, this combines a raw, scratching, granular noise with a purer sound resulting from the interaction between the bow and the material. The BLOW generator synthesizes continuous, noise-like sounds reminiscent of blowing, breathing, wind... The STRIKE generator produces impulsive bursts and percussive noises for striking and beating the resonator. Controls, inputs and outputs Overview Elements' front panel is divided into three sections: The control/performance section with the most essential inputs/outputs. The exciter section, in which the excitation signal is synthesized. The resonator section, which controls, under the hood, the frequencies, amplitudes and Q-factor of modes. Control and exciter sections A . Bow/Blow envelope CONTOUR . A simple envelope is applied to the sound generated by the BOW and BLOW exciters. This knob interpolates between several preset shapes for this envelope: short AD envelopes getting longer and slower, morphing into slower ADSR envelopes, fading into faster AR envelopes. B. Excitation mixer. The BOW knob controls the amplitude of scratching/bowing noise sent to the resonator. This is more than a mere gain: this control simulates an increase in bow pressure, causing a brighter and noiser sound. The BLOW knob controls the amount of granular blowing noise sent to the resonator. Finally, the STRIKE knob controls the amount of percussive noise sent to the resonator. Note that when this knob is set to a high value (past 2 o'clock), the percussive signal is sent to the resonator, but also \"bleeds\" on the main output signal for a more biting percussive sound. C. PLAY button. Press and hold this button to trigger the exciter and its envelope. This is equivalent to sending a positive gate to the GATE input. D. Air FLOW of the BLOW generator. This parameter can be described as a kind of wavetable scanning through various colors of noise. Automatically controlling this parameter with a CV (for example, from a LFO), will create a changing texture reminiscent of a turbulent air flow. E . MALLET type. This parameter controls the type of percussive noise produced by the STRIKE generator. Various synthesis models are available, and this knob morphs through them. Over the course of the knob, you will find: Actual samples of hammers, mallets, sticks. Physical models of mallets, played with or without damping. Physical models of plectrums, played with varying picking speeds. Physical models of particles bouncing on a surface. F. The BOW generator TIMBRE knob controls the smoothness or granularity of the bow material. The BLOW generator TIMBRE knob controls the pitch/granulation rate of the noise generator. Finally the STRIKE generator TIMBRE knob controls the brightness/speed of the percussive excitation. G. Attenuverters for the CV inputs. 1. V/OCT input. This CV input controls the fundamental frequency of the resonator, and thus, the perceived pitch of the note. 2. FM input. This CV input provides an additional modulation source for the fundamental frequency. 3. Exciter GATE input. This enables the exciter. When the GATE signal goes high, the percussive generator produces an impulsive sound, and the envelope starts its course - progressively unveiling the scratching of the bow and the blowing noise. 4. STRENGTH CV input. This CV input works as a VCA amplifying or attenuating the excitation signal. A positive CV will boost the signal, a negative CV will attenuate it. The scale is 3dB/V, with a maximum attenuation/gain of +/- 15dB. 5. External IN 1 . The audio signal sent to this input goes through the same path as the blowing noise - it gets diffused, amplified by the envelope, then amplified by the STRENGTH VCA. It finally reaches the resonator. 6. External IN 2 . This second audio input is unprocessed and directly sent to the resonator. 7. 8. Dual-channel audio OUT . Depending on the position of the SPACE knob, this consists of either the individual exciter/resonator components, or a true stereo pair. 9. Exciter CV inputs. Resonator section The main frequency of the sound is controlled by the COARSE / FINE knobs, combined with the V/OCT and FM CV inputs. A. COARSE frequency, adjusted by semitone increments. This control spans 5 octaves. FINE frequency, unquantized, spannning a range of -2 to +2 semitones. B. FM input attenuverter. This knob controls the amount and polarity of modulation applied to frequency from the FM CV input jack. It has an exponential scale - providing very progressive attenuation as it is moved away from its central position. C. GEOMETRY . This essential parameter controls the geometry and stiffness of the resonating structure. It goes from plates, to strings, to bars/tubes, to bells/bowls. D. BRIGHTNESS . This parameter controls how muted the high-frequency modes are. Low values simulate materials like wood or nylon. High values simulate materials like glass or steel. E. DAMPING controls how quickly energy dissipates through the material. Modulating this parameter by CV can recreate the effect of damping or muting the sound by blocking the vibrating surface with the hand. F. POSITION controls on which point of the string/surface the excitation is applied. Applying the excitation right in the middle of the surface will cause, by symmetry, the even harmonics to cancel each other, resulting in a \"hollow\" sound reminiscent of a square wave. This setting will remind you of the PWM control on a square oscillator - or of the comb-filtering effect of a phaser. G. SPACE controls the stereo width and amount of algorithmic reverberation applied to the sound. When this knob is set to its minimum position, one output channel contains the exciter output, and the other channel the resonator output, and it is up to you to mix and spatialize them. As SPACE increases, a stereo effect is created by picking up the vibrating surface's sound at two different positions. Increasing SPACE increases the angle between the two microphones. Past 12 o'clock, SPACE controls the amount and decay time of an algorithmic reverberator applied to the resonator signal. Note that applying a very high CV to the SPACE parameter while it is in maximum position will trigger a \"freeze\" effect - preventing the reverb tail from decaying. This can be creatively used for overdubbing layers of notes to create chords. H. Attenuverters for the CV inputs. 1. Resonator CV inputs. Advanced topics Calibration procedure The module is factory-calibrated using precision voltage sources. Follow this procedure only if you want to compensate for inaccuracies in your CV sources, or if your module has lost its calibration following a firmware update or fault. To calibrate the unit: Disconnect all CV inputs. Connect the note CV output of a well-calibrated keyboard interface or MIDI-CV converter to the V/OCT input. Set all attenuverters to their minimum position (7 o'clock), then hold the PLAY button for five seconds. This is the \"secret handshake\" to enter the calibration procedure. The exciter LED blinks to indicate that calibration is in progress. Send a voltage of 1V to the CV input. Press the PLAY push-button. The resonator LED blinks. Send a voltage of 3V to the CV input. Press the PLAY push-button. Calibration is done! To avoid entering the calibration mode by mistake, make sure that at least one attenuverter is moved to another position. Firmware update procedure Unplug all CV inputs/outputs from the module. Connect the output of your audio interface/sound card to the first EXT IN input. Set the BLOW knob to 12 o'clock. Power on your modular system with the PLAY push-button pressed. The PLAY LED will blink. Make sure that no additional sound (such as email notification sounds, background music etc.) from your computer will be played during the procedure. Make sure that your speakers/monitors are not connected to your audio interface - the noises emitted during the procedure are aggressive and can harm your hearing. On non-studio audio equipment (for example the line output from a desktop computer), you might have to turn up the gain to the maximum. When you are all set, play the firmware update file into the module. While the module receives data, the exciter and resonator LEDs act as a level meter. Signal reception is optimal when the resonator LED is barely lit. Try adjusting the BLOW knob to change gain. When the end of the audio file is reached, the module automatically restarts - if it is not the case, please retry the procedure. In case the signal level is inadequate, the LEDs will blink with an alternating pattern. Press the encoder and retry with a higher gain. If this does not help, please retry the procedure from another computer/audio interface, and make sure that no piece of equipment (equalizer, FX processor) is inserted in the signal chain.","title":"Manual"},{"location":"modules/elements/manual/#overview","text":"Elements is a full-blown synthesis voice based on modal synthesis - an under-appreciated flavour of physical modelling synthesis. With Elements, a sound is designed by specifying a resonant structure (plate, string, tube...), the properties of the material it is made of (stiffness, absorption...), and how the structure is excited to produce sound - struck, plucked, blown, bowed... Elements is raw. The sounds of scratching scrape metal, or the wind in a PVC tube, not a symphonic orchestra.","title":"Overview"},{"location":"modules/elements/manual/#installation","text":"Elements is designed for Eurorack synthesizer systems and occupies 34 HP of space. It requires a -12V/+12V supply (2x5 pin connector), drawing 10mA from the -12V rail and 130mA from the +12V rail. The red stripe of the ribbon cable must be oriented on the same side as the \"Red stripe\" marking on the printed circuit board.","title":"Installation"},{"location":"modules/elements/manual/#understanding-modal-synthesis","text":"","title":"Understanding modal synthesis"},{"location":"modules/elements/manual/#modes-in-vibrating-structures","text":"Have you ever made a wine glass sing? And noticed that with just the right speed, the sound gets louder and louder? Or pushed a child on a swing with just the right timing to give her speed? The physical phenomenon at play, in both cases, is resonance. When we say that a physical system has a resonance at a particular frequency, it means that bringing energy to the system at this specific frequency will result in large oscillations - but if energy is brought at a lower or higher frequency, the oscillations will disappear. It is as if the system is responding to vibrations transmitted at a specific frequency, but is dissipating vibrations sent at the other frequencies. Just like a band-pass filter! This phenomenon is present in strings, drums, or the air column in a flute. These systems do not have one single resonant frequency, but several, called modes. The shape of the instrument, and the material it is made of determine the modes. Modes are characterized by their frequency, their amplitude, and their Q (quality) factor - how narrow the resonant frequency peak is. So what happens when we pluck a string, strike a drum or blow in a tube for a short moment? The short burst of energy of the blow/impact contains many frequencies. Some of these fall outside of the modes, and are absorbed. Some of these excite the modes, producing a stable, pitched sound. A sound will be perceived as pure if the modes have a high Q factor - in this case the spectrum has sharp harmonics, and everything else is absorbed. The sound will be more muffled or noisy if the modes have low Q. When the frequencies of the modes are in harmonic ratios, the sound is perceived as very musical and strongly pitched. When the modes are not located at integer ratios of the fundamental, the sound is perceived as metallic, and its pitch is ambiguous. If the burst of energy contains only low frequencies, only the lowest frequency modes will be excited. If the burst of energy contains very high frequency, it might be that some of the low frequency modes will not sound. So what we hear truly is the interplay between the modes present of the system, and the spectrum of the excitation which causes them to sound. The modes are like a mould, they represent a possibility of sound - it's up to us to fill them with an excitation signal! Modal synthesis artificially recreates this phenomenon. The modes of a vibrating structure are recreated with a bank of band-pass filters - one band-pass filter per mode. The frequency of these band-pass filters determines the pitch (note) which will be heard. The Q factor (resonance) of these filters determines for how long the system can sustain oscillation after being excited, and how \"pure\" the sound is. The perceived timbre is a complex function of the frequency, Q, and gains. To produce sound, this filter bank is excited by bursty/impulsive signals. These can be synthetic bursts of noise, clicks/sharp envelopes, or samples. In the rest of this document, we will refer to the filter bank as the Resonator, and the excitation signal generator as the Exciter.","title":"Modes in vibrating structures"},{"location":"modules/elements/manual/#comparisons-with-other-synthesis-techniques","text":"The idea of sending raw material into a filter might seem very similar to classic analog subtractive synthesis. But there is a big difference! In traditional analog subtractive synthesis, what determines the pitch (note) of the sound is the oscillator frequency (the raw material). The role of the filter is only to color it. In modal synthesis, the raw material is bursty and unpitched. What is truly responsible for the pitch of the note, and its timbre is the resonator. You might actually have already encountered this situation when \"pitching\" white noise by sending it into a resonant filter with high resonance. The exciter->resonator combination might also remind you of formant synthesis - but once again, what gives speech its pitched component is the exciter (the vocal cords), not the resonator (the vocal tract). A classic analog piece of equipment that used modal synthesis is the Roland TR-808 drum machine. The snare drum is synthesized by sending a narrow pulse into two band-pass filters. One could say that these two band-pass filters represent two modes of a snare drum; and that the analog pulse \"striking\" them is the exciter. Describing a sound by a set of frequencies and gains should remind you of additive synthesis. Actually, one could say that modal synthesis is an implementation of additive synthesis, in which we have replaced all the oscillators by resonant filters. Unlike oscillators, the filters will not self oscillate, so they need to be \"pinged\" by an external signal.","title":"Comparisons with other synthesis techniques"},{"location":"modules/elements/manual/#elements-under-the-hood","text":"To do modal synthesis, one needs to specify the frequencies, Q factors and gains of all modes. The traditional approach followed in academia consists in pre-computing them through a mathematical analysis of the instrument and its material (as done for example in the Modalys environment developed at the IRCAM). Some other research labs performed analyses on audio recordings of an instrument to identify the modes. These approaches can lead to very realistic sounds, but they are not very suitable to a modular environment - because they don't provide the ability to shape the sound at the twist of a knob or change in a CV. Given that a rich, interesting sound can need up to 50 modes, providing individual frequency/amplitude/Q knobs would lead to a huge, barely usable module. Just like for additive synthesis, \"one slider per partial\" is a terrible UI. To solve this quandary, Elements does not use pre-recorded modal \"signatures\" of real materials, nor does it offer individual control on each mode. Instead, it generates synthetic signatures from a small set of parameters. We did our best to make sure that it was still possible to dial in a set of modes similar to those of real materials and structures - but of course, there's a large set of tones to explore outside of that! This philosophy is somewhat similar to those of algorithmic reverberators vs convolution reverberators - which trade realism and authenticity for tweakability! To recreate excitation signals evoking different types of musical instruments, Elements' exciter section consists of three generators named after three possible actions one can do with an instrument: The BOW generator synthesizes the sound of a bow scratching a material. Depending on the bow pressure, this combines a raw, scratching, granular noise with a purer sound resulting from the interaction between the bow and the material. The BLOW generator synthesizes continuous, noise-like sounds reminiscent of blowing, breathing, wind... The STRIKE generator produces impulsive bursts and percussive noises for striking and beating the resonator.","title":"Elements: Under the hood"},{"location":"modules/elements/manual/#controls-inputs-and-outputs","text":"","title":"Controls, inputs and outputs"},{"location":"modules/elements/manual/#overview_1","text":"Elements' front panel is divided into three sections: The control/performance section with the most essential inputs/outputs. The exciter section, in which the excitation signal is synthesized. The resonator section, which controls, under the hood, the frequencies, amplitudes and Q-factor of modes.","title":"Overview"},{"location":"modules/elements/manual/#control-and-exciter-sections","text":"A . Bow/Blow envelope CONTOUR . A simple envelope is applied to the sound generated by the BOW and BLOW exciters. This knob interpolates between several preset shapes for this envelope: short AD envelopes getting longer and slower, morphing into slower ADSR envelopes, fading into faster AR envelopes. B. Excitation mixer. The BOW knob controls the amplitude of scratching/bowing noise sent to the resonator. This is more than a mere gain: this control simulates an increase in bow pressure, causing a brighter and noiser sound. The BLOW knob controls the amount of granular blowing noise sent to the resonator. Finally, the STRIKE knob controls the amount of percussive noise sent to the resonator. Note that when this knob is set to a high value (past 2 o'clock), the percussive signal is sent to the resonator, but also \"bleeds\" on the main output signal for a more biting percussive sound. C. PLAY button. Press and hold this button to trigger the exciter and its envelope. This is equivalent to sending a positive gate to the GATE input. D. Air FLOW of the BLOW generator. This parameter can be described as a kind of wavetable scanning through various colors of noise. Automatically controlling this parameter with a CV (for example, from a LFO), will create a changing texture reminiscent of a turbulent air flow. E . MALLET type. This parameter controls the type of percussive noise produced by the STRIKE generator. Various synthesis models are available, and this knob morphs through them. Over the course of the knob, you will find: Actual samples of hammers, mallets, sticks. Physical models of mallets, played with or without damping. Physical models of plectrums, played with varying picking speeds. Physical models of particles bouncing on a surface. F. The BOW generator TIMBRE knob controls the smoothness or granularity of the bow material. The BLOW generator TIMBRE knob controls the pitch/granulation rate of the noise generator. Finally the STRIKE generator TIMBRE knob controls the brightness/speed of the percussive excitation. G. Attenuverters for the CV inputs. 1. V/OCT input. This CV input controls the fundamental frequency of the resonator, and thus, the perceived pitch of the note. 2. FM input. This CV input provides an additional modulation source for the fundamental frequency. 3. Exciter GATE input. This enables the exciter. When the GATE signal goes high, the percussive generator produces an impulsive sound, and the envelope starts its course - progressively unveiling the scratching of the bow and the blowing noise. 4. STRENGTH CV input. This CV input works as a VCA amplifying or attenuating the excitation signal. A positive CV will boost the signal, a negative CV will attenuate it. The scale is 3dB/V, with a maximum attenuation/gain of +/- 15dB. 5. External IN 1 . The audio signal sent to this input goes through the same path as the blowing noise - it gets diffused, amplified by the envelope, then amplified by the STRENGTH VCA. It finally reaches the resonator. 6. External IN 2 . This second audio input is unprocessed and directly sent to the resonator. 7. 8. Dual-channel audio OUT . Depending on the position of the SPACE knob, this consists of either the individual exciter/resonator components, or a true stereo pair. 9. Exciter CV inputs.","title":"Control and exciter sections"},{"location":"modules/elements/manual/#resonator-section","text":"The main frequency of the sound is controlled by the COARSE / FINE knobs, combined with the V/OCT and FM CV inputs. A. COARSE frequency, adjusted by semitone increments. This control spans 5 octaves. FINE frequency, unquantized, spannning a range of -2 to +2 semitones. B. FM input attenuverter. This knob controls the amount and polarity of modulation applied to frequency from the FM CV input jack. It has an exponential scale - providing very progressive attenuation as it is moved away from its central position. C. GEOMETRY . This essential parameter controls the geometry and stiffness of the resonating structure. It goes from plates, to strings, to bars/tubes, to bells/bowls. D. BRIGHTNESS . This parameter controls how muted the high-frequency modes are. Low values simulate materials like wood or nylon. High values simulate materials like glass or steel. E. DAMPING controls how quickly energy dissipates through the material. Modulating this parameter by CV can recreate the effect of damping or muting the sound by blocking the vibrating surface with the hand. F. POSITION controls on which point of the string/surface the excitation is applied. Applying the excitation right in the middle of the surface will cause, by symmetry, the even harmonics to cancel each other, resulting in a \"hollow\" sound reminiscent of a square wave. This setting will remind you of the PWM control on a square oscillator - or of the comb-filtering effect of a phaser. G. SPACE controls the stereo width and amount of algorithmic reverberation applied to the sound. When this knob is set to its minimum position, one output channel contains the exciter output, and the other channel the resonator output, and it is up to you to mix and spatialize them. As SPACE increases, a stereo effect is created by picking up the vibrating surface's sound at two different positions. Increasing SPACE increases the angle between the two microphones. Past 12 o'clock, SPACE controls the amount and decay time of an algorithmic reverberator applied to the resonator signal. Note that applying a very high CV to the SPACE parameter while it is in maximum position will trigger a \"freeze\" effect - preventing the reverb tail from decaying. This can be creatively used for overdubbing layers of notes to create chords. H. Attenuverters for the CV inputs. 1. Resonator CV inputs.","title":"Resonator section"},{"location":"modules/elements/manual/#advanced-topics","text":"","title":"Advanced topics"},{"location":"modules/elements/manual/#calibration-procedure","text":"The module is factory-calibrated using precision voltage sources. Follow this procedure only if you want to compensate for inaccuracies in your CV sources, or if your module has lost its calibration following a firmware update or fault. To calibrate the unit: Disconnect all CV inputs. Connect the note CV output of a well-calibrated keyboard interface or MIDI-CV converter to the V/OCT input. Set all attenuverters to their minimum position (7 o'clock), then hold the PLAY button for five seconds. This is the \"secret handshake\" to enter the calibration procedure. The exciter LED blinks to indicate that calibration is in progress. Send a voltage of 1V to the CV input. Press the PLAY push-button. The resonator LED blinks. Send a voltage of 3V to the CV input. Press the PLAY push-button. Calibration is done! To avoid entering the calibration mode by mistake, make sure that at least one attenuverter is moved to another position.","title":"Calibration procedure"},{"location":"modules/elements/manual/#firmware-update-procedure","text":"Unplug all CV inputs/outputs from the module. Connect the output of your audio interface/sound card to the first EXT IN input. Set the BLOW knob to 12 o'clock. Power on your modular system with the PLAY push-button pressed. The PLAY LED will blink. Make sure that no additional sound (such as email notification sounds, background music etc.) from your computer will be played during the procedure. Make sure that your speakers/monitors are not connected to your audio interface - the noises emitted during the procedure are aggressive and can harm your hearing. On non-studio audio equipment (for example the line output from a desktop computer), you might have to turn up the gain to the maximum. When you are all set, play the firmware update file into the module. While the module receives data, the exciter and resonator LEDs act as a level meter. Signal reception is optimal when the resonator LED is barely lit. Try adjusting the BLOW knob to change gain. When the end of the audio file is reached, the module automatically restarts - if it is not the case, please retry the procedure. In case the signal level is inadequate, the LEDs will blink with an alternating pattern. Press the encoder and retry with a higher gain. If this does not help, please retry the procedure from another computer/audio interface, and make sure that no piece of equipment (equalizer, FX processor) is inserted in the signal chain.","title":" Firmware update procedure"},{"location":"modules/elements/open_source/","text":"Github repository Schematics Firmware hacking Elements' source code is available under the MIT licence. The code (along with the hardware description files) can be found in the elements directory in our Eurorack modules git repository . After having cloned the repository, don't forget to run git submodule init && git submodule update to make sure the sub-projects referenced in the code are also pulled. Toolchain If you don't mind installing Vagrant and VirtualBox a cozy environment for firmware hacking is available. If you want to set up your own environment to build Elements' code, an ARM EABI toolchain must be installed. Because of tight CPU and code size limits, we recommend you to use the same compiler version as we do: 4.8-2013-q4-major . Various pre-compiled binaries and source packages are available here . The path to the toolchain binaries must be specified in the TOOLCHAIN_PATH variable in elements/makefile . To build the bootloader, use the following command: make -f elements/bootloader/makefile hex To build the code, use the following command: make -f elements/makefile If you modify lookup tables and want the big resources.cc file to be regenerated: touch elements/resources/resources.py && make -f elements/makefile resources Firmware programming A first solution is to simply use the firmware update procedure. A .wav file for firmware upgrade can be generated with: make -f elements/makefile wav The firmware can then be loaded into the module using the procedure described in the manual. Past this point, we assume you know what you are doing and we are not responsible for any damage to your module! Another solution is to use the built-in serial bootloader of the STM32F. Connect a FTDI dongle with a 3.3V output level ( such as this ) to the 6 pin connector at the back of the module. If necessary, edit the serial port special file corresponding to the FTDI dongle in the PGM_SERIAL_PORT variable in stmlib/makefile.inc. GND must match GND, TX must match RX and vice-versa. Hold the RESET switch on the side of the module. Press the SYSBOOT switch next to it, and release RESET . Nothing is shown on the module display (it is in bootloader limbo...) Upload the firmware with: make -f elements/makefile upload_combo_serial The last \u2013 and recommended \u2013 solution for firmware programming is to use a JTAG interface and openOCD. We recommend Olimex' ARM-USB-OCD-H devices . An adapter must also be purchased for the mini-JTAG connector used by Elements. Upload the firmware with: make -f elements/makefile upload_combo_jtag","title":"Open source"},{"location":"modules/elements/open_source/#firmware-hacking","text":"Elements' source code is available under the MIT licence. The code (along with the hardware description files) can be found in the elements directory in our Eurorack modules git repository . After having cloned the repository, don't forget to run git submodule init && git submodule update to make sure the sub-projects referenced in the code are also pulled.","title":"Firmware hacking"},{"location":"modules/elements/open_source/#toolchain","text":"If you don't mind installing Vagrant and VirtualBox a cozy environment for firmware hacking is available. If you want to set up your own environment to build Elements' code, an ARM EABI toolchain must be installed. Because of tight CPU and code size limits, we recommend you to use the same compiler version as we do: 4.8-2013-q4-major . Various pre-compiled binaries and source packages are available here . The path to the toolchain binaries must be specified in the TOOLCHAIN_PATH variable in elements/makefile . To build the bootloader, use the following command: make -f elements/bootloader/makefile hex To build the code, use the following command: make -f elements/makefile If you modify lookup tables and want the big resources.cc file to be regenerated: touch elements/resources/resources.py && make -f elements/makefile resources","title":"Toolchain"},{"location":"modules/elements/open_source/#firmware-programming","text":"A first solution is to simply use the firmware update procedure. A .wav file for firmware upgrade can be generated with: make -f elements/makefile wav The firmware can then be loaded into the module using the procedure described in the manual. Past this point, we assume you know what you are doing and we are not responsible for any damage to your module! Another solution is to use the built-in serial bootloader of the STM32F. Connect a FTDI dongle with a 3.3V output level ( such as this ) to the 6 pin connector at the back of the module. If necessary, edit the serial port special file corresponding to the FTDI dongle in the PGM_SERIAL_PORT variable in stmlib/makefile.inc. GND must match GND, TX must match RX and vice-versa. Hold the RESET switch on the side of the module. Press the SYSBOOT switch next to it, and release RESET . Nothing is shown on the module display (it is in bootloader limbo...) Upload the firmware with: make -f elements/makefile upload_combo_serial The last \u2013 and recommended \u2013 solution for firmware programming is to use a JTAG interface and openOCD. We recommend Olimex' ARM-USB-OCD-H devices . An adapter must also be purchased for the mini-JTAG connector used by Elements. Upload the firmware with: make -f elements/makefile upload_combo_jtag","title":"Firmware programming"},{"location":"modules/elements/original_blurb/","text":"Concrete sounds for abstract music, abstract sounds for musique concr\u00e8te Elements is a full-blown synthesis voice based on modal synthesis \u2013 an under-appreciated flavour of physical modelling synthesis with a strange and abstract feel. Elements combines an exciter synthesis section generating raw, noisy sounds characteristic of bowing (filtered friction noise), blowing (pitch-controlled granular noise), or striking (stick, mallet, hammer or brush sample playback... or bursts of synthetic impulsions). These sources, or external audio signals, are processed by a modal filter bank \u2013 an ensemble of 64 tuned band-pass filters simulating the response of various resonant structures (plates, strings, tubes\u2026) with adjustable brightness and damping. A stereo ambience reverberator adds depth and presence to the sound. All parameters have a very meaningful and well-delimited impact on the sound. When designing Elements, great care has been taken in selecting parameter ranges and control curves, producing a large palette of sounds \u2013 often beyond physical realism \u2013 but always well controlled and stable. The \"dark spots\" of noise and feedback are reached gradually, and they do still react to controls. The module is deliberately menu- and switch-free \u2013 what you dial/patch is what you hear!","title":"Original blurb"},{"location":"modules/elements/original_blurb/#concrete-sounds-for-abstract-music-abstract-sounds-for-musique-concrete","text":"Elements is a full-blown synthesis voice based on modal synthesis \u2013 an under-appreciated flavour of physical modelling synthesis with a strange and abstract feel. Elements combines an exciter synthesis section generating raw, noisy sounds characteristic of bowing (filtered friction noise), blowing (pitch-controlled granular noise), or striking (stick, mallet, hammer or brush sample playback... or bursts of synthetic impulsions). These sources, or external audio signals, are processed by a modal filter bank \u2013 an ensemble of 64 tuned band-pass filters simulating the response of various resonant structures (plates, strings, tubes\u2026) with adjustable brightness and damping. A stereo ambience reverberator adds depth and presence to the sound. All parameters have a very meaningful and well-delimited impact on the sound. When designing Elements, great care has been taken in selecting parameter ranges and control curves, producing a large palette of sounds \u2013 often beyond physical realism \u2013 but always well controlled and stable. The \"dark spots\" of noise and feedback are reached gradually, and they do still react to controls. The module is deliberately menu- and switch-free \u2013 what you dial/patch is what you hear!","title":"Concrete sounds for abstract music, abstract sounds for musique concr\u00e8te"},{"location":"modules/frames/","text":"Key data Original printed manual Features An analog mixer... ... under digital control Specifications Key data Keyframer/mixer Parameter Value Width 18HP Depth 25mm +12V current 90mA -12V current 30mA Lifetime 03/14 to 06/21 Modulargrid Link Processor STM32F103CBT6 @ 72 MHz DAC DAC124S085 (for internal CVs only) Original printed manual PDF download Features An analog mixer... 4-channel voltage-controlled mixer based on the V2164 IC. 4 DC-coupled signal inputs. 1 global input, sent to all unconnected inputs, and normalized to a precision voltage reference (+5V or +10V). 4 DC-coupled channel outputs. 1 global mix output, collecting signals from all unpatched outputs, with a -6dB gain. ... under digital control 12-bit digital control of the gains for the 4 VCAs. Up to 20 keyframes, each keyframe storing VCA CVs for each channel. Per-channel easing curve selection: stepped (no interpolation), linear, accelerating, decelerating, sine, bouncy. Per-channel CV/VCA response selection, from linear to logarithmic. Specifications CV input impedance: 100k. Audio input impedance: 100k (25k for the global input in some configurations due to normalling). Fastest modulation rate: 15kHz.","title":"Index"},{"location":"modules/frames/#key-data","text":"Keyframer/mixer Parameter Value Width 18HP Depth 25mm +12V current 90mA -12V current 30mA Lifetime 03/14 to 06/21 Modulargrid Link Processor STM32F103CBT6 @ 72 MHz DAC DAC124S085 (for internal CVs only)","title":"Key data"},{"location":"modules/frames/#original-printed-manual","text":"PDF download","title":"Original printed manual"},{"location":"modules/frames/#features","text":"","title":"Features"},{"location":"modules/frames/#an-analog-mixer","text":"4-channel voltage-controlled mixer based on the V2164 IC. 4 DC-coupled signal inputs. 1 global input, sent to all unconnected inputs, and normalized to a precision voltage reference (+5V or +10V). 4 DC-coupled channel outputs. 1 global mix output, collecting signals from all unpatched outputs, with a -6dB gain.","title":"An analog mixer..."},{"location":"modules/frames/#under-digital-control","text":"12-bit digital control of the gains for the 4 VCAs. Up to 20 keyframes, each keyframe storing VCA CVs for each channel. Per-channel easing curve selection: stepped (no interpolation), linear, accelerating, decelerating, sine, bouncy. Per-channel CV/VCA response selection, from linear to logarithmic.","title":"... under digital control"},{"location":"modules/frames/#specifications","text":"CV input impedance: 100k. Audio input impedance: 100k (25k for the global input in some configurations due to normalling). Fastest modulation rate: 15kHz.","title":"Specifications"},{"location":"modules/frames/firmware/","text":"Download Latest version (1.2) Firmware update procedure Revisions v1.2 Fixed a bug preventing the FR.STEP trigger to be sent when the first or last frame is reached. v1.1 Added (software) low-pass filtering on the FRAME CV input to prevent zipper noise.","title":"Firmware"},{"location":"modules/frames/firmware/#download","text":"Latest version (1.2) Firmware update procedure","title":"Download"},{"location":"modules/frames/firmware/#revisions","text":"","title":"Revisions"},{"location":"modules/frames/firmware/#v12","text":"Fixed a bug preventing the FR.STEP trigger to be sent when the first or last frame is reached.","title":"v1.2"},{"location":"modules/frames/firmware/#v11","text":"Added (software) low-pass filtering on the FRAME CV input to prevent zipper noise.","title":"v1.1"},{"location":"modules/frames/manual/","text":"Overview Keyframing is a computer animation technique in which an animation sequence is created by manually adjusting the position/orientation of characters/props at a few key moments, and letting the computer interpolate the trajectory between them. Mutable Instruments' Frames brings this concept to your modular system, and allows up to 4 signal levels or CVs to be animated in this manner. Frames' input/output architecture is extremely flexible and allows mixing, panning, attenuation and CV generation applications - all with the morphing/interpolation capabilities of a keyframer. Installation Frames is designed for Eurorack synthesizer systems and occupies 18 HP of space. It requires a -12V/+12V supply (2x5 connector), consuming 30mA from the -12V rail and 90mA from the +12V rail. The red stripe of the ribbon cable must be oriented on the same side as the \"Red stripe\" marking on the printed circuit board. Input / Output architecture Frames' core is a quadruple VCA, the gains of which are digitally controlled to create animated sequences. The inputs labelled 1, 2, 3, 4 are directly routed to each of the four VCAs. When no jack is plugged into them, they receive instead the signal from the ALL input. For example, if you connect the output of a VCO into ALL, and the output of a drum module into 4; the VCA 1, 2, and 3 will process the VCO signal, and the VCA 4 will process the drum sound. What happens when no jack is plugged into the ALL input? The VCAs receive no signal... unless the +10V OFFSET switch is pushed. When this switch is pushed, the ALL input receives a constant +10V signal (unless a jack is inserted in!), and this signal is then routed into the 4 inputs (unless a jack is inserted in one of them!). Once the VCAs have done their work, the 4 attenuated signals are sent to the outputs labelled 1, 2, 3, 4. Unless a jack is inserted in one of these individual outputs, the signal is also sent to the global MIX output. For example, if inputs 1, 2, 3, 4 receive the square, sawtooth, triangle and sine outputs of a VCO; and if a patch cable is connected to output 4, the MIX output will contain a blend of the square, sawtooth and triangle outputs - while the attenuated sine signal will be present on the patch cable plugged into output 4. To put this into practice, here are some examples of applications: Waveform mixing. Patch 4 audio sources into the 1, 2, 3, 4 inputs. Then take the signal from the MIX output. Panning. Patch a monophonic audio source into the ALL input. Take the left and right signals from outputs 1 and 2 - and maybe front and back signals from 3 and 4 if you are working in quadraphony! Effect or filter routing. Patch a dry audio signal into the ALL input. Send each of the individual outputs to various filters or effect processors, and mix back with a standard mixer module or even a fixed-gain summer (such as Mutable Instruments' Links). CV control. Leave all inputs unconnected. Switch on the +10V offset (the +10V constant signal will flow into ALL, and then into all inputs). The outputs 1, 2, 3, 4 can be used as 4 CV sources. Mutable Instruments' favorite... Patch the outputs of two instances of Braids (our digital oscillator) into inputs 1 and 2. Switch on the +10V offset. The +10V constant signal will flow into ALL , and then into the unused inputs 3 and 4 - the outputs 3 and 4 are thus CV sources, which can be fed into Braids' TIMBRE inputs. Send the MIX output to a filter or VCA. This configuration allows to simultaneously control the levels of the two oscillators; and their TIMBRE CV. Controls The big FRAME knob is used to move through the animation, from the beginning (knob turned fully counter-clockwise) to the end (knob turned fully clockwise). The animation is played as you turn the knob. The keyframe LED G indicates whether the current position of the FRAME knob stores a keyframe (LED lit) - or whether it is just an intermediate interval between keyframes (LED switched off). The ADD button creates a keyframe at the current position of the FRAME knob. The DEL button removes the keyframe at the current position of the FRAME knob (if there is no keyframe at the current position of the FRAME knob, nothing happens). The 4 potentiometers at the top of the module adjust the gains of the 4 channels at the current keyframe. If there is no keyframe at the current position of the FRAME knob, nothing happens - the gains will be interpolated between the previous and next keyframe in the sequence and you do not have control of them. Frames provides two types of visual feedback. Firstly, every time you create a keyframe it is given a different color, illuminating the FRAME knob and creating intermediate hues as the animation is played. Secondly, the 4 LEDs below the 4 knobs at the top of the module indicate the current value of the gains for the 4 channels. Creating an animation: walkthrough In this walkthrough, we will create a sequence blending two waveforms from a VCO. Of course, any other signal source can be used - but throughout this section we will refer to the two input signals as the \"square\" and \"sawtooth\" inputs. We assume that the module has just been powered on for the first time (or reset - see the 'advanced features' section below). After the short animation played when the module starts, The FRAME knob is white and the keyframe indication LED is off - indicating that no keyframe has been created yet. Switch off the +10V offset. Patch the square output of the VCO into the input 1; and the sawtooth output of the VCO into the input 2. Monitor the MIX output. We will simply ignore channels 3 and 4. Set the FRAME knob to its minimum position (7 o'clock). We are going to create the first keyframe in the animation. Press the ADD button. Use the 1 and 2 knobs to set the square signal to its maximum level, and the sawtooth signal to its minimum level. Our animation will thus start with the square signal at its maximum level, and the sawtooth signal at its minimum level. Observe that the FRAME knob is illuminated in red (the color of our first keyframe), and that the keyframe indicator is also lit. Rotate the FRAME knob to its medium position (12 o'clock). We are going to create the second keyframe in the animation. Press the ADD button. Use the 1 and 2 knobs to set the square signal to its minimum level, and the sawtooth signal to its maximum level. The second stage of our animation will thus have the square signal at its minimum level, and the sawtooth signal at its maximum level. This second keyframe is given an orange color. Rotate the FRAME knob to its final postiion (5 o'clock). Press the ADD button to create the last keyframe in the animation. Use the 1 and 2 knobs to set the square and sawtooth signals to medium levels. This third keyframe is given a yellow color. You can now rotate the FRAME knob to move back and forth through the animation. As you rotate the FRAME knob you can notice several things: The LEDs 1 and 2 (and of course, the mixer gains!) go through the different values that have been programmed: first square wave, fading into sawtooth, and ending with a mix of both. The color of the FRAME knob changes from red to yellow. Whenever the FRAME knob crosses the 7 o'clock, 12 o'clock or 5 o'clock positions, the KEYFRAME LED lights on to indicate that some settings have been recorded at this position. It is of course possible to modify the 4 gains/levels associated with a keyframe: use the FRAME knob to reach the keyframe - check that the KEYFRAME LED is on; and adjust the 4 gains/levels. Automatically playing an animation To automatically play the animation, patch an LFO or envelope into the FRAME CV input; and adjust the direction of the animation with the MODULATION attenuverter. An ascending sawtooth LFO will loop the animation in chronological order (unless the attenuverter is set to a negative amount of course!). Using a triangle LFO will play the animation back and forth. A sequencer can also be used to step through frames without interpolation. Slope generators (such as Mutable Instruments' Tides or Make Noise's Maths/Function ) are good tools for generating interesting animation CVs. The module emits a 1ms long, +5V high pulse on the FR.STEP output whenever the animation crosses a keyframe. This signal can be used to synchronize sequences or rhythms with the animation. Advanced features Channel settings Hold the ADD button for one second to edit the interpolation curve used for each channel. The 4 gain knobs adjust the interpolation curve for each channel. While a knob is turned, the corresponding interpolation curve is visualized through the illumination pattern of the FRAME knob. The 6 available interpolation curves are: step (no interpolation), linear, accelerating, decelerating, smooth departure/arrival (raised cosine), and bouncing. Press the ADD button when you are done. Hold the DEL button for one second to edit the response curve used for each channel. The 4 gain knobs adjust the response curve, from linear to exponential. While a knob is turned, the corresponding interpolation curve is visualized through the illumination pattern of the FRAME knob. Clearing/saving settings Hold the DEL button for five seconds (until the LEDs show an animated pattern) to clear all keyframes and reset the module to its initial state. This will not clear any saved configuration. Hold the ADD button for five seconds (until the LEDs show an animated pattern) to save the current configuration of the module. This configuration will be restored the next time the module is powered on. Reference voltage selection Many digital modules - in particular from Mutable Instruments - use a 0 .. 5V range for CV control. The position of the jumper on the back of the module can be changed to generate CVs in the 0 .. +5V range rather than 0 .. +10V range. Sequencer mode Several users requested an alternative method for stepping through keyframes, without interpolation, in sync with a clock, in the manner of a sequencer. To activate this mode, move the FRAME knob so that it points to an existing keyframe (the KEYFRAME LED must be lit), and press the ADD button 5 times. The current frame is no longer controlled by FRAME knob. Instead, pulses on the FRAME CV input are needed to cycle through frames (make sure that MODULATION is set to its maximum value). The same procedure can be used to exit the sequencer mode. And Now for Something Completely Different... Move the FRAME knob to its minimum position and repeatedly press the DEL button (10 times). The module will provide an entirely different way of controlling the gains/CV levels on the 4 channels, inspired by quadrature oscillators. The same \"secret handshake\" can be used to exit this special mode and reset the module to standard operation. To explore this mode, we recommend you to enable the OFFSET , leave all inputs unconnected, and patch the 4 channel outputs to the CV inputs of oscillators or filters... The FRAME knob - along with the FRAME input and its attenuverter - control the main frequency. The channel 1 knob controls the waveform - read from a wavetable, with interpolation. The channel 2 knob controls the difference in wavetable position between each channel. In its default position, at 12 o'clock, all channels play the same waveform. Turn it clockwise or counter-clockwise to cause each channel to read a different waveform from the wavetable. The channel 3 knob controls the phase or frequency offset between each channel. In its default position, at 12 o'clock, all channels are locked in phase and in frequency. Turn it clockwise to create a phase-shift between channels (until quadrature oscillation is reached); and turn it counter-clockwise to create a frequency shift between channels. Finally, the channel 4 knob controls a kind of phase-modulation \"bleed\" between each channel. In its default position, at 12 o'clock, all channels are independent. Turn it clockwise and each channel will be increasingly modulated by the next channel. Turn it counter-clockwise and each channel will be increasingly modulated by the previous channel. Firmware update procedure Unplug all CV inputs/outputs from the module. Connect the output of your audio interface/sound card to the FRAME modulation input. Set the MODULATION attenuverter to its maximum value. Power on your modular system with Frames' ADD button pressed. The 4 LEDs will blink, and the central knob will be lit in orange. Make sure that no additional sound (such as email notification sounds, background music etc.) from your computer will be played during the procedure. Make sure that your speakers/monitors are not connected to your audio interface - the noises emitted during the procedure are aggressive and can harm your hearing. On non-studio audio equipment (for example the line output from a Desktop computer), you might have to turn up the gain to the maximum. When you are all set, play the firmware update file into the module. The LEDs show a cyclic pattern and periodically flash upon receiving a valid block of data. The central knob is lit in green. The unit reboots after the last packet has been received. In case the signal level is inadequate or too high, the procedure will stop and all 4 LEDs will blink, with the central frame knob illuminated in red. Try adjusting the output level, press the ADD button and retry from the start of the update file.","title":"Manual"},{"location":"modules/frames/manual/#overview","text":"Keyframing is a computer animation technique in which an animation sequence is created by manually adjusting the position/orientation of characters/props at a few key moments, and letting the computer interpolate the trajectory between them. Mutable Instruments' Frames brings this concept to your modular system, and allows up to 4 signal levels or CVs to be animated in this manner. Frames' input/output architecture is extremely flexible and allows mixing, panning, attenuation and CV generation applications - all with the morphing/interpolation capabilities of a keyframer.","title":"Overview"},{"location":"modules/frames/manual/#installation","text":"Frames is designed for Eurorack synthesizer systems and occupies 18 HP of space. It requires a -12V/+12V supply (2x5 connector), consuming 30mA from the -12V rail and 90mA from the +12V rail. The red stripe of the ribbon cable must be oriented on the same side as the \"Red stripe\" marking on the printed circuit board.","title":"Installation"},{"location":"modules/frames/manual/#input-output-architecture","text":"Frames' core is a quadruple VCA, the gains of which are digitally controlled to create animated sequences. The inputs labelled 1, 2, 3, 4 are directly routed to each of the four VCAs. When no jack is plugged into them, they receive instead the signal from the ALL input. For example, if you connect the output of a VCO into ALL, and the output of a drum module into 4; the VCA 1, 2, and 3 will process the VCO signal, and the VCA 4 will process the drum sound. What happens when no jack is plugged into the ALL input? The VCAs receive no signal... unless the +10V OFFSET switch is pushed. When this switch is pushed, the ALL input receives a constant +10V signal (unless a jack is inserted in!), and this signal is then routed into the 4 inputs (unless a jack is inserted in one of them!). Once the VCAs have done their work, the 4 attenuated signals are sent to the outputs labelled 1, 2, 3, 4. Unless a jack is inserted in one of these individual outputs, the signal is also sent to the global MIX output. For example, if inputs 1, 2, 3, 4 receive the square, sawtooth, triangle and sine outputs of a VCO; and if a patch cable is connected to output 4, the MIX output will contain a blend of the square, sawtooth and triangle outputs - while the attenuated sine signal will be present on the patch cable plugged into output 4. To put this into practice, here are some examples of applications: Waveform mixing. Patch 4 audio sources into the 1, 2, 3, 4 inputs. Then take the signal from the MIX output. Panning. Patch a monophonic audio source into the ALL input. Take the left and right signals from outputs 1 and 2 - and maybe front and back signals from 3 and 4 if you are working in quadraphony! Effect or filter routing. Patch a dry audio signal into the ALL input. Send each of the individual outputs to various filters or effect processors, and mix back with a standard mixer module or even a fixed-gain summer (such as Mutable Instruments' Links). CV control. Leave all inputs unconnected. Switch on the +10V offset (the +10V constant signal will flow into ALL, and then into all inputs). The outputs 1, 2, 3, 4 can be used as 4 CV sources. Mutable Instruments' favorite... Patch the outputs of two instances of Braids (our digital oscillator) into inputs 1 and 2. Switch on the +10V offset. The +10V constant signal will flow into ALL , and then into the unused inputs 3 and 4 - the outputs 3 and 4 are thus CV sources, which can be fed into Braids' TIMBRE inputs. Send the MIX output to a filter or VCA. This configuration allows to simultaneously control the levels of the two oscillators; and their TIMBRE CV.","title":"Input / Output architecture"},{"location":"modules/frames/manual/#controls","text":"The big FRAME knob is used to move through the animation, from the beginning (knob turned fully counter-clockwise) to the end (knob turned fully clockwise). The animation is played as you turn the knob. The keyframe LED G indicates whether the current position of the FRAME knob stores a keyframe (LED lit) - or whether it is just an intermediate interval between keyframes (LED switched off). The ADD button creates a keyframe at the current position of the FRAME knob. The DEL button removes the keyframe at the current position of the FRAME knob (if there is no keyframe at the current position of the FRAME knob, nothing happens). The 4 potentiometers at the top of the module adjust the gains of the 4 channels at the current keyframe. If there is no keyframe at the current position of the FRAME knob, nothing happens - the gains will be interpolated between the previous and next keyframe in the sequence and you do not have control of them. Frames provides two types of visual feedback. Firstly, every time you create a keyframe it is given a different color, illuminating the FRAME knob and creating intermediate hues as the animation is played. Secondly, the 4 LEDs below the 4 knobs at the top of the module indicate the current value of the gains for the 4 channels.","title":"Controls"},{"location":"modules/frames/manual/#creating-an-animation-walkthrough","text":"In this walkthrough, we will create a sequence blending two waveforms from a VCO. Of course, any other signal source can be used - but throughout this section we will refer to the two input signals as the \"square\" and \"sawtooth\" inputs. We assume that the module has just been powered on for the first time (or reset - see the 'advanced features' section below). After the short animation played when the module starts, The FRAME knob is white and the keyframe indication LED is off - indicating that no keyframe has been created yet. Switch off the +10V offset. Patch the square output of the VCO into the input 1; and the sawtooth output of the VCO into the input 2. Monitor the MIX output. We will simply ignore channels 3 and 4. Set the FRAME knob to its minimum position (7 o'clock). We are going to create the first keyframe in the animation. Press the ADD button. Use the 1 and 2 knobs to set the square signal to its maximum level, and the sawtooth signal to its minimum level. Our animation will thus start with the square signal at its maximum level, and the sawtooth signal at its minimum level. Observe that the FRAME knob is illuminated in red (the color of our first keyframe), and that the keyframe indicator is also lit. Rotate the FRAME knob to its medium position (12 o'clock). We are going to create the second keyframe in the animation. Press the ADD button. Use the 1 and 2 knobs to set the square signal to its minimum level, and the sawtooth signal to its maximum level. The second stage of our animation will thus have the square signal at its minimum level, and the sawtooth signal at its maximum level. This second keyframe is given an orange color. Rotate the FRAME knob to its final postiion (5 o'clock). Press the ADD button to create the last keyframe in the animation. Use the 1 and 2 knobs to set the square and sawtooth signals to medium levels. This third keyframe is given a yellow color. You can now rotate the FRAME knob to move back and forth through the animation. As you rotate the FRAME knob you can notice several things: The LEDs 1 and 2 (and of course, the mixer gains!) go through the different values that have been programmed: first square wave, fading into sawtooth, and ending with a mix of both. The color of the FRAME knob changes from red to yellow. Whenever the FRAME knob crosses the 7 o'clock, 12 o'clock or 5 o'clock positions, the KEYFRAME LED lights on to indicate that some settings have been recorded at this position. It is of course possible to modify the 4 gains/levels associated with a keyframe: use the FRAME knob to reach the keyframe - check that the KEYFRAME LED is on; and adjust the 4 gains/levels.","title":"Creating an animation: walkthrough"},{"location":"modules/frames/manual/#automatically-playing-an-animation","text":"To automatically play the animation, patch an LFO or envelope into the FRAME CV input; and adjust the direction of the animation with the MODULATION attenuverter. An ascending sawtooth LFO will loop the animation in chronological order (unless the attenuverter is set to a negative amount of course!). Using a triangle LFO will play the animation back and forth. A sequencer can also be used to step through frames without interpolation. Slope generators (such as Mutable Instruments' Tides or Make Noise's Maths/Function ) are good tools for generating interesting animation CVs. The module emits a 1ms long, +5V high pulse on the FR.STEP output whenever the animation crosses a keyframe. This signal can be used to synchronize sequences or rhythms with the animation.","title":"Automatically playing an animation"},{"location":"modules/frames/manual/#advanced-features","text":"","title":"Advanced features"},{"location":"modules/frames/manual/#channel-settings","text":"Hold the ADD button for one second to edit the interpolation curve used for each channel. The 4 gain knobs adjust the interpolation curve for each channel. While a knob is turned, the corresponding interpolation curve is visualized through the illumination pattern of the FRAME knob. The 6 available interpolation curves are: step (no interpolation), linear, accelerating, decelerating, smooth departure/arrival (raised cosine), and bouncing. Press the ADD button when you are done. Hold the DEL button for one second to edit the response curve used for each channel. The 4 gain knobs adjust the response curve, from linear to exponential. While a knob is turned, the corresponding interpolation curve is visualized through the illumination pattern of the FRAME knob.","title":"Channel settings"},{"location":"modules/frames/manual/#clearingsaving-settings","text":"Hold the DEL button for five seconds (until the LEDs show an animated pattern) to clear all keyframes and reset the module to its initial state. This will not clear any saved configuration. Hold the ADD button for five seconds (until the LEDs show an animated pattern) to save the current configuration of the module. This configuration will be restored the next time the module is powered on.","title":"Clearing/saving settings"},{"location":"modules/frames/manual/#reference-voltage-selection","text":"Many digital modules - in particular from Mutable Instruments - use a 0 .. 5V range for CV control. The position of the jumper on the back of the module can be changed to generate CVs in the 0 .. +5V range rather than 0 .. +10V range.","title":"Reference voltage selection"},{"location":"modules/frames/manual/#sequencer-mode","text":"Several users requested an alternative method for stepping through keyframes, without interpolation, in sync with a clock, in the manner of a sequencer. To activate this mode, move the FRAME knob so that it points to an existing keyframe (the KEYFRAME LED must be lit), and press the ADD button 5 times. The current frame is no longer controlled by FRAME knob. Instead, pulses on the FRAME CV input are needed to cycle through frames (make sure that MODULATION is set to its maximum value). The same procedure can be used to exit the sequencer mode.","title":"Sequencer mode"},{"location":"modules/frames/manual/#and-now-for-something-completely-different","text":"Move the FRAME knob to its minimum position and repeatedly press the DEL button (10 times). The module will provide an entirely different way of controlling the gains/CV levels on the 4 channels, inspired by quadrature oscillators. The same \"secret handshake\" can be used to exit this special mode and reset the module to standard operation. To explore this mode, we recommend you to enable the OFFSET , leave all inputs unconnected, and patch the 4 channel outputs to the CV inputs of oscillators or filters... The FRAME knob - along with the FRAME input and its attenuverter - control the main frequency. The channel 1 knob controls the waveform - read from a wavetable, with interpolation. The channel 2 knob controls the difference in wavetable position between each channel. In its default position, at 12 o'clock, all channels play the same waveform. Turn it clockwise or counter-clockwise to cause each channel to read a different waveform from the wavetable. The channel 3 knob controls the phase or frequency offset between each channel. In its default position, at 12 o'clock, all channels are locked in phase and in frequency. Turn it clockwise to create a phase-shift between channels (until quadrature oscillation is reached); and turn it counter-clockwise to create a frequency shift between channels. Finally, the channel 4 knob controls a kind of phase-modulation \"bleed\" between each channel. In its default position, at 12 o'clock, all channels are independent. Turn it clockwise and each channel will be increasingly modulated by the next channel. Turn it counter-clockwise and each channel will be increasingly modulated by the previous channel.","title":"And Now for Something Completely Different..."},{"location":"modules/frames/manual/#firmware-update-procedure","text":"Unplug all CV inputs/outputs from the module. Connect the output of your audio interface/sound card to the FRAME modulation input. Set the MODULATION attenuverter to its maximum value. Power on your modular system with Frames' ADD button pressed. The 4 LEDs will blink, and the central knob will be lit in orange. Make sure that no additional sound (such as email notification sounds, background music etc.) from your computer will be played during the procedure. Make sure that your speakers/monitors are not connected to your audio interface - the noises emitted during the procedure are aggressive and can harm your hearing. On non-studio audio equipment (for example the line output from a Desktop computer), you might have to turn up the gain to the maximum. When you are all set, play the firmware update file into the module. The LEDs show a cyclic pattern and periodically flash upon receiving a valid block of data. The central knob is lit in green. The unit reboots after the last packet has been received. In case the signal level is inadequate or too high, the procedure will stop and all 4 LEDs will blink, with the central frame knob illuminated in red. Try adjusting the output level, press the ADD button and retry from the start of the update file.","title":" Firmware update procedure"},{"location":"modules/frames/open_source/","text":"Github repository Schematics Firmware hacking Frames' source code is available under the MIT licence. The code (along with the hardware description files) can be found in the frames directory in our Eurorack modules git repository . After having cloned the repository, don't forget to run git submodule init && git submodule update to make sure the sub-projects referenced in the code are also pulled. Toolchain If you don't mind installing Vagrant and VirtualBox a cozy environment for firmware hacking is available. If you want to set up your own environment to build Frames' code, an ARM EABI toolchain must be installed. Because of tight CPU and code size limits, we recommend you to use the same compiler version as we do: 4.8-2013-q4-major . Various pre-compiled binaries and source packages are available here . The path to the toolchain binaries must be specified in the TOOLCHAIN_PATH variable in frames/makefile . To build the bootloader, use the following command: make -f frames/bootloader/makefile hex To build the code, use the following command: make -f frames/makefile If you modify lookup tables and want the big resources.cc file to be regenerated: touch frames/resources/resources.py && make -f frames/makefile resources Firmware programming A first solution is to simply use the firmware update procedure. A .wav file for firmware upgrade can be generated with: make -f frames/makefile wav The firmware can then be loaded into the module using the procedure described in the manual. Past this point, we assume you know what you are doing and we are not responsible for any damage to your module! Another solution is to use the built-in serial bootloader of the STM32F. Connect a FTDI dongle with a 3.3V output level ( such as this ) to the 6 pin connector at the back of the module. If necessary, edit the serial port special file corresponding to the FTDI dongle in the PGM_SERIAL_PORT variable in stmlib/makefile.inc. GND must match GND, TX must match RX and vice-versa. Hold the RESET switch on the side of the module. Press the SYSBOOT switch next to it, and release RESET . Nothing is shown on the module display (it is in bootloader limbo...) Upload the firmware with: make -f frames/makefile upload_combo_serial The last \u2013 and recommended \u2013 solution for firmware programming is to use a JTAG interface and openOCD. We recommend Olimex' ARM-USB-OCD-H devices . An adapter must also be purchased for the mini-JTAG connector used by Frames. Upload the firmware with: make -f frames/makefile upload_combo_jtag","title":"Open source"},{"location":"modules/frames/open_source/#firmware-hacking","text":"Frames' source code is available under the MIT licence. The code (along with the hardware description files) can be found in the frames directory in our Eurorack modules git repository . After having cloned the repository, don't forget to run git submodule init && git submodule update to make sure the sub-projects referenced in the code are also pulled.","title":"Firmware hacking"},{"location":"modules/frames/open_source/#toolchain","text":"If you don't mind installing Vagrant and VirtualBox a cozy environment for firmware hacking is available. If you want to set up your own environment to build Frames' code, an ARM EABI toolchain must be installed. Because of tight CPU and code size limits, we recommend you to use the same compiler version as we do: 4.8-2013-q4-major . Various pre-compiled binaries and source packages are available here . The path to the toolchain binaries must be specified in the TOOLCHAIN_PATH variable in frames/makefile . To build the bootloader, use the following command: make -f frames/bootloader/makefile hex To build the code, use the following command: make -f frames/makefile If you modify lookup tables and want the big resources.cc file to be regenerated: touch frames/resources/resources.py && make -f frames/makefile resources","title":"Toolchain"},{"location":"modules/frames/open_source/#firmware-programming","text":"A first solution is to simply use the firmware update procedure. A .wav file for firmware upgrade can be generated with: make -f frames/makefile wav The firmware can then be loaded into the module using the procedure described in the manual. Past this point, we assume you know what you are doing and we are not responsible for any damage to your module! Another solution is to use the built-in serial bootloader of the STM32F. Connect a FTDI dongle with a 3.3V output level ( such as this ) to the 6 pin connector at the back of the module. If necessary, edit the serial port special file corresponding to the FTDI dongle in the PGM_SERIAL_PORT variable in stmlib/makefile.inc. GND must match GND, TX must match RX and vice-versa. Hold the RESET switch on the side of the module. Press the SYSBOOT switch next to it, and release RESET . Nothing is shown on the module display (it is in bootloader limbo...) Upload the firmware with: make -f frames/makefile upload_combo_serial The last \u2013 and recommended \u2013 solution for firmware programming is to use a JTAG interface and openOCD. We recommend Olimex' ARM-USB-OCD-H devices . An adapter must also be purchased for the mini-JTAG connector used by Frames. Upload the firmware with: make -f frames/makefile upload_combo_jtag","title":"Firmware programming"},{"location":"modules/frames/original_blurb/","text":"Mix, attenuate, morph, dispatch, animate. With the big glowing knob The heart of Frames is a 4-channel VCA and mixer under tight digital control. Through flexible input/output mixing and normalling options, it can be patched to serve the following purposes (among others): 4-channel attenuator/VCA. 4-channel mixer. 4-channel programmable CV source. Quadraphonic signal dispatcher. But what makes Frames truly unique is the way in which channel gains/CV levels can be controlled, using a technique inspired by computer animation. Frames allows up to 20 configurations of the 4 gain knobs to be stored and recalled throughout the course of its big Frame knob. By rotating this knob (or sending a CV to the Frame modulation input and adjusting its amount with the attenuverter), the configurations are morphed into one another. With a bit of patching and imagination, Frames can also be repurposed as a 4-channel sequencer, a multi-stage envelope generator or a trajectory generator for quadraphonic panning...","title":"Original blurb"},{"location":"modules/frames/original_blurb/#mix-attenuate-morph-dispatch-animate-with-the-big-glowing-knob","text":"The heart of Frames is a 4-channel VCA and mixer under tight digital control. Through flexible input/output mixing and normalling options, it can be patched to serve the following purposes (among others): 4-channel attenuator/VCA. 4-channel mixer. 4-channel programmable CV source. Quadraphonic signal dispatcher. But what makes Frames truly unique is the way in which channel gains/CV levels can be controlled, using a technique inspired by computer animation. Frames allows up to 20 configurations of the 4 gain knobs to be stored and recalled throughout the course of its big Frame knob. By rotating this knob (or sending a CV to the Frame modulation input and adjusting its amount with the attenuverter), the configurations are morphed into one another. With a bit of patching and imagination, Frames can also be repurposed as a 4-channel sequencer, a multi-stage envelope generator or a trajectory generator for quadraphonic panning...","title":"Mix, attenuate, morph, dispatch, animate. With the big glowing knob"},{"location":"modules/grids/","text":"Key data Original printed manual Settings reference card Features Clocking Drum pattern generator Specifications Revisions and variants 2014 Key data Topographic drum sequencer Parameter Value Width 16HP Depth 25mm +12V current 25mA -12V current 1mA Lifetime 08/13 to 03/21 Modulargrid Link Processor ATMega328p @ 20 MHz Original printed manual PDF download Settings reference card PDF download Features Clocking Internal clock with a 40 to 240 BPM range. Beat indicator / Tap tempo button (reconfigurable as a reset button). External clock input, with selectable resolution (24, 8 or 4 ppqn). Pattern reset trigger input. Drum pattern generator Based on a compressed representations of drum patterns and their variations. X/Y (pattern selection) knobs with CV inputs. Pattern complexity/density knobs for channels 1, 2, 3, with CV inputs. Pattern randomization knob with CV input (reconfigurable as a swing control for the internal clock). 3 output channels (BD, SD, and HH/percussion). 3 additional outputs, configurable as Accent/Clock/Reset or per-channel accent. Outputs can be either triggers or gates. Specifications Input impedances: 100k. CV acquisition: 8-bit, 1kHz. Output level: +5V. Clock resolution and processing latency: 120\u00b5s. Worst case jitter < 0.5% at 120 BPM. Revisions and variants 2014 Hardware revision labelled \"v0.2\" with the following differences: 2x5 power connector (originally 2x8). Built-in 5V regulator. Milky, diffused LEDs (originally clear).","title":"Index"},{"location":"modules/grids/#key-data","text":"Topographic drum sequencer Parameter Value Width 16HP Depth 25mm +12V current 25mA -12V current 1mA Lifetime 08/13 to 03/21 Modulargrid Link Processor ATMega328p @ 20 MHz","title":"Key data"},{"location":"modules/grids/#original-printed-manual","text":"PDF download","title":"Original printed manual"},{"location":"modules/grids/#settings-reference-card","text":"PDF download","title":"Settings reference card"},{"location":"modules/grids/#features","text":"","title":"Features"},{"location":"modules/grids/#clocking","text":"Internal clock with a 40 to 240 BPM range. Beat indicator / Tap tempo button (reconfigurable as a reset button). External clock input, with selectable resolution (24, 8 or 4 ppqn). Pattern reset trigger input.","title":"Clocking"},{"location":"modules/grids/#drum-pattern-generator","text":"Based on a compressed representations of drum patterns and their variations. X/Y (pattern selection) knobs with CV inputs. Pattern complexity/density knobs for channels 1, 2, 3, with CV inputs. Pattern randomization knob with CV input (reconfigurable as a swing control for the internal clock). 3 output channels (BD, SD, and HH/percussion). 3 additional outputs, configurable as Accent/Clock/Reset or per-channel accent. Outputs can be either triggers or gates.","title":"Drum pattern generator"},{"location":"modules/grids/#specifications","text":"Input impedances: 100k. CV acquisition: 8-bit, 1kHz. Output level: +5V. Clock resolution and processing latency: 120\u00b5s. Worst case jitter < 0.5% at 120 BPM.","title":"Specifications"},{"location":"modules/grids/#revisions-and-variants","text":"","title":"Revisions and variants"},{"location":"modules/grids/#2014","text":"Hardware revision labelled \"v0.2\" with the following differences: 2x5 power connector (originally 2x8). Built-in 5V regulator. Milky, diffused LEDs (originally clear).","title":"2014"},{"location":"modules/grids/firmware/","text":"Download Original version No firmware update has ever been released by Mutable Instruments, but this file can be used to revert the module to the stock firmware.","title":"Firmware"},{"location":"modules/grids/firmware/#download","text":"Original version No firmware update has ever been released by Mutable Instruments, but this file can be used to revert the module to the stock firmware.","title":"Download"},{"location":"modules/grids/manual/","text":"Overview Grids is a 3-channel trigger generator specialized in the creation and sculpting of rhythmic patterns. At the core of Grids is a map, that has been obtained through machine learning techniques, of the drum patterns used in a large collection of electronic music tracks and drum loops. The skeleton and structure of the rhythm is programmed by selecting its X and Y coordinates on the map - with smooth interpolation/morphing between points. Once this skeleton is in place, variations can be generated by controlling the \"event density\" of each of the three channels - gradually morphing from a sparse backbone to a frantic pattern. X / Y map position, and the density of the 3 channels are all CV-controllable, allowing rhythmic variations to be created by any modulation source. In contrast to Euclidean sequencers which are purely algorithmic, Grids' has \"learned\" patterns from actual data and with the right settings might generate a breakbeat or an influential Kraftwerkian beat. Most patterns are best played with channel 1 = BD ; channel 2 = SD ; channel 3 = HH, but experimentation with other sound sources is of course encouraged. Grids has a built-in clock, or it can accept external clock signals of variable resolution. Installation Grids is designed for Eurorack synthesizer systems and occupies 16 HP of space. It requires a -12V/+12V supply (2x5 connector), consuming 1mA from the -12V rail and 25mA from the +12V rail. The red stripe of the ribbon cable must be oriented on the same side as the \"Red stripe\" marking on the printed circuit board. Grids' pattern generation algorithm Grids is a 3-channel, algorithmic, rhythmic pattern generator based on data and models extracted from actual BD drum loops. Two steps are involved in the generation of the drum patterns: Step 1: Synthesizing a pattern from the drum map... A collection of drum loops has been spatially organized and compressed into a 2-dimensional map. Using interpolation techniques, any pair of X/Y coordinates can be translated into a rhythm, with smooth morphing from one rhythm into the other. Step 2: ... and sculpting it! Once a rhythmic skeleton is read from the map, variations can be generated by controlling the note density of each of the three channels - gradually morphing the pattern from a sparse backbone to a frantic pattern. Controls A: Internal clock rate . Ranges from 40 BPM to 240 BPM. When turned fully counter-clockwise, the internal clock is disabled and the unit expects a clock signal on its CLOCK input. B: Tap (reset) . This button acts as a tap tempo, and flashes on each beat. Tap it twice or more to set the tempo. The duration between the two most recent taps defines the duration of a beat. Once the tempo has been programmed with the tap tempo button, the CLOCK knob is locked and has no effect on the rhythm. Tap just once on the Tap button to unlock the CLOCK knob. C1, C2: Map coordinates . These two knobs specify the region of the rhythm map from which is derived the structure / backbone of the rhythm. D: Chaos amount. This button controls the amount of random perturbations applied to the three FILL parameters. When set to a high value, rolls/ghost notes will be randomly added to the pattern. E1, E2, E3: Fill rate . These knobs indicate how dense the rhythmic pattern is for each of the three channels/instruments. Turn counter-clockwise to simplify the pattern (to the point of muting the channel entirely), turn clockwise to add notes (until the pattern is entirely filled). The position of the added/removed notes depends on the rhythmic backbone specified by the X and Y parameters. Inputs and outputs 1. CLOCK : External clock input. The external clock is ignored unless the CLOCK knob is set to its minimum value and tap tempo is reset. Recommended level : 0 to +5V, though higher voltages are accepted. 2. RESET : Pattern reset input. A raising edge on this input resets the rhythmic pattern to its first step. Recommended level : 0 to +5V, though higher voltages are accepted. 3, 4, 5, 6. MAP X, MAP Y, CHAOS, FILL : Control voltages added to the value of the eponymous knob. The minimum position of the knob corresponds to 0V, and its maximum position to 5V. 7. TRIG : Trigger outputs for each of the 3 channels. Triggers have a +5V level and a duration of 1ms. 8. ACC : Accent outputs for each of the 3 channels. The accent indicates the structurally important steps in the pattern, and can be fed straight into x0x style modules. They have a +5V level and a duration of 1ms. Options Unplug all CV inputs and hold the TAP/reset button for half a second to adjust Grids' options. The switch stays illuminated. Hold the button again for half a second when you are done. Settings reference card (PDF download) Clock resolution. Clock resolution is set by E1 . The 3 LEDs indicate the current value of this setting (4, 8, and 24 ppqn respectively). Grids does not try to regenerate a high-resolution clock from a low-resolution clock (think of it as a form of quantization). Thus, using the 4ppqn clock might distort the patterns that use 32-th notes; and using 8ppqn or 4ppqn might distort the patterns that use triplets. Tap tempo vs reset. The tap tempo / beat indicator button can be configured instead as a reset button / pattern start indicator. Turn E2 to switch between these two modes: LEDs off: Tap to reset to the beginning of the pattern LEDs on: Tap to set the tempo Swing Turn E3 to enable or disable swing on the internal clock. When enabled, swing is controlled by the CHAOS randomization setting (which it replaces) - and affects the internal clock only. The LEDs indicate the status of the swing setting: LEDs off: Swing is disabled. CHAOS works as a randomization control LEDs on: Swing is enabled on the internal clock. CHAOS controls its amount It is not possible to add swing to a clock signal received on the CLOCK input; and it is not possible to add swing in euclidean sequencer mode. Euclidean sequencer mode. Why have less when you can have more? Grids can also work as a vanilla euclidean sequencer. Turn C1 (MAP X) to switch between the euclidean sequencer mode and grids' own flavor of pattern generation. LEDs off: Grids is yet another euclidean sequencer LEDs on: Grids is back to drumming duties In euclidean sequencer mode, the C1, C2 and D knobs control respectively the cycle length/size of the pattern on channels 1, 2, and 3; and the E1, E2 and E3 knobs control the fill rate. The ACC outputs will spit a trigger on the first note of the pattern - that is to say, whenever the pattern completes a cycle. Trig / Gate output. By default, Grids produces trigger signals (short 1ms pulses). This behavior - which is recommended for 808 or 909-like sound modules - can be changed in order to produce gate signals more suitable for controlling envelopes or other modules' CV inputs. In this case, the output stays high for the whole duration of the clock's positive cycle. It is thus possible to alter the gate length by driving Grids from a clock module with a duty cycle parameter (or from a square VCO with pulse-width control). The internal clock has a fixed 50% duty cycle. To change the trig/gate configuration, turn C2 (MAP Y) . LEDs off: Outputs are triggers. LEDs on: Outputs are gates. Alternate output layout. The row of 3 ACCENT outputs can be reconfigured to serve other purposes. The normal layout is: ACC 1 / ACC 2 / ACC 3 But it can be reconfigured as: ACC / CLK / RST Where ACC is a global accent output, that is high whenever one of ACC 1, ACC 2, or ACC 3 is high; CLK is a clock output (mirrors the clock input, or is the internal clock signal, whichever is in use); and RST is a reset trigger. To reconfigure the outputs and take advantage of the Clock / Reset outputs, turn the D (CHAOS) knob. LEDs off: ACC 1 / ACC 2 / ACC 3 LEDs on: ACC / CLK / RST","title":"Manual"},{"location":"modules/grids/manual/#overview","text":"Grids is a 3-channel trigger generator specialized in the creation and sculpting of rhythmic patterns. At the core of Grids is a map, that has been obtained through machine learning techniques, of the drum patterns used in a large collection of electronic music tracks and drum loops. The skeleton and structure of the rhythm is programmed by selecting its X and Y coordinates on the map - with smooth interpolation/morphing between points. Once this skeleton is in place, variations can be generated by controlling the \"event density\" of each of the three channels - gradually morphing from a sparse backbone to a frantic pattern. X / Y map position, and the density of the 3 channels are all CV-controllable, allowing rhythmic variations to be created by any modulation source. In contrast to Euclidean sequencers which are purely algorithmic, Grids' has \"learned\" patterns from actual data and with the right settings might generate a breakbeat or an influential Kraftwerkian beat. Most patterns are best played with channel 1 = BD ; channel 2 = SD ; channel 3 = HH, but experimentation with other sound sources is of course encouraged. Grids has a built-in clock, or it can accept external clock signals of variable resolution.","title":"Overview"},{"location":"modules/grids/manual/#installation","text":"Grids is designed for Eurorack synthesizer systems and occupies 16 HP of space. It requires a -12V/+12V supply (2x5 connector), consuming 1mA from the -12V rail and 25mA from the +12V rail. The red stripe of the ribbon cable must be oriented on the same side as the \"Red stripe\" marking on the printed circuit board.","title":"Installation"},{"location":"modules/grids/manual/#grids-pattern-generation-algorithm","text":"Grids is a 3-channel, algorithmic, rhythmic pattern generator based on data and models extracted from actual BD drum loops. Two steps are involved in the generation of the drum patterns:","title":"Grids' pattern generation algorithm"},{"location":"modules/grids/manual/#step-1-synthesizing-a-pattern-from-the-drum-map","text":"A collection of drum loops has been spatially organized and compressed into a 2-dimensional map. Using interpolation techniques, any pair of X/Y coordinates can be translated into a rhythm, with smooth morphing from one rhythm into the other.","title":"Step 1: Synthesizing a pattern from the drum map..."},{"location":"modules/grids/manual/#step-2-and-sculpting-it","text":"Once a rhythmic skeleton is read from the map, variations can be generated by controlling the note density of each of the three channels - gradually morphing the pattern from a sparse backbone to a frantic pattern.","title":"Step 2: ... and sculpting it!"},{"location":"modules/grids/manual/#controls","text":"A: Internal clock rate . Ranges from 40 BPM to 240 BPM. When turned fully counter-clockwise, the internal clock is disabled and the unit expects a clock signal on its CLOCK input. B: Tap (reset) . This button acts as a tap tempo, and flashes on each beat. Tap it twice or more to set the tempo. The duration between the two most recent taps defines the duration of a beat. Once the tempo has been programmed with the tap tempo button, the CLOCK knob is locked and has no effect on the rhythm. Tap just once on the Tap button to unlock the CLOCK knob. C1, C2: Map coordinates . These two knobs specify the region of the rhythm map from which is derived the structure / backbone of the rhythm. D: Chaos amount. This button controls the amount of random perturbations applied to the three FILL parameters. When set to a high value, rolls/ghost notes will be randomly added to the pattern. E1, E2, E3: Fill rate . These knobs indicate how dense the rhythmic pattern is for each of the three channels/instruments. Turn counter-clockwise to simplify the pattern (to the point of muting the channel entirely), turn clockwise to add notes (until the pattern is entirely filled). The position of the added/removed notes depends on the rhythmic backbone specified by the X and Y parameters.","title":"Controls"},{"location":"modules/grids/manual/#inputs-and-outputs","text":"1. CLOCK : External clock input. The external clock is ignored unless the CLOCK knob is set to its minimum value and tap tempo is reset. Recommended level : 0 to +5V, though higher voltages are accepted. 2. RESET : Pattern reset input. A raising edge on this input resets the rhythmic pattern to its first step. Recommended level : 0 to +5V, though higher voltages are accepted. 3, 4, 5, 6. MAP X, MAP Y, CHAOS, FILL : Control voltages added to the value of the eponymous knob. The minimum position of the knob corresponds to 0V, and its maximum position to 5V. 7. TRIG : Trigger outputs for each of the 3 channels. Triggers have a +5V level and a duration of 1ms. 8. ACC : Accent outputs for each of the 3 channels. The accent indicates the structurally important steps in the pattern, and can be fed straight into x0x style modules. They have a +5V level and a duration of 1ms.","title":"Inputs and outputs"},{"location":"modules/grids/manual/#options","text":"Unplug all CV inputs and hold the TAP/reset button for half a second to adjust Grids' options. The switch stays illuminated. Hold the button again for half a second when you are done. Settings reference card (PDF download)","title":"Options"},{"location":"modules/grids/manual/#clock-resolution","text":"Clock resolution is set by E1 . The 3 LEDs indicate the current value of this setting (4, 8, and 24 ppqn respectively). Grids does not try to regenerate a high-resolution clock from a low-resolution clock (think of it as a form of quantization). Thus, using the 4ppqn clock might distort the patterns that use 32-th notes; and using 8ppqn or 4ppqn might distort the patterns that use triplets.","title":"Clock resolution."},{"location":"modules/grids/manual/#tap-tempo-vs-reset","text":"The tap tempo / beat indicator button can be configured instead as a reset button / pattern start indicator. Turn E2 to switch between these two modes: LEDs off: Tap to reset to the beginning of the pattern LEDs on: Tap to set the tempo","title":"Tap tempo vs reset."},{"location":"modules/grids/manual/#swing","text":"Turn E3 to enable or disable swing on the internal clock. When enabled, swing is controlled by the CHAOS randomization setting (which it replaces) - and affects the internal clock only. The LEDs indicate the status of the swing setting: LEDs off: Swing is disabled. CHAOS works as a randomization control LEDs on: Swing is enabled on the internal clock. CHAOS controls its amount It is not possible to add swing to a clock signal received on the CLOCK input; and it is not possible to add swing in euclidean sequencer mode.","title":"Swing"},{"location":"modules/grids/manual/#euclidean-sequencer-mode","text":"Why have less when you can have more? Grids can also work as a vanilla euclidean sequencer. Turn C1 (MAP X) to switch between the euclidean sequencer mode and grids' own flavor of pattern generation. LEDs off: Grids is yet another euclidean sequencer LEDs on: Grids is back to drumming duties In euclidean sequencer mode, the C1, C2 and D knobs control respectively the cycle length/size of the pattern on channels 1, 2, and 3; and the E1, E2 and E3 knobs control the fill rate. The ACC outputs will spit a trigger on the first note of the pattern - that is to say, whenever the pattern completes a cycle.","title":"Euclidean sequencer mode."},{"location":"modules/grids/manual/#trig-gate-output","text":"By default, Grids produces trigger signals (short 1ms pulses). This behavior - which is recommended for 808 or 909-like sound modules - can be changed in order to produce gate signals more suitable for controlling envelopes or other modules' CV inputs. In this case, the output stays high for the whole duration of the clock's positive cycle. It is thus possible to alter the gate length by driving Grids from a clock module with a duty cycle parameter (or from a square VCO with pulse-width control). The internal clock has a fixed 50% duty cycle. To change the trig/gate configuration, turn C2 (MAP Y) . LEDs off: Outputs are triggers. LEDs on: Outputs are gates.","title":"Trig / Gate output."},{"location":"modules/grids/manual/#alternate-output-layout","text":"The row of 3 ACCENT outputs can be reconfigured to serve other purposes. The normal layout is: ACC 1 / ACC 2 / ACC 3 But it can be reconfigured as: ACC / CLK / RST Where ACC is a global accent output, that is high whenever one of ACC 1, ACC 2, or ACC 3 is high; CLK is a clock output (mirrors the clock input, or is the internal clock signal, whichever is in use); and RST is a reset trigger. To reconfigure the outputs and take advantage of the Clock / Reset outputs, turn the D (CHAOS) knob. LEDs off: ACC 1 / ACC 2 / ACC 3 LEDs on: ACC / CLK / RST","title":"Alternate output layout."},{"location":"modules/grids/open_source/","text":"Github repository Schematics Firmware hacking Grids' source code is available under the GPL licence. The code (along with the hardware description files) can be found in the grids directory in our Eurorack modules git repository . After having cloned the repository, don't forget to run git submodule init && git submodule update to make sure the sub-projects referenced in the code are also pulled. Toolchain If you don't mind installing Vagrant and VirtualBox a cozy environment for firmware hacking is available. If you want to set up your own environment to build Grids' code, avr-gcc and avrdude must be installed. These are standard packages on Linux. On OS X, Crosspack can be installed. The path to the toolchain can be edited in the AVRLIB_TOOLS_PATH variable in avrlib/makefile.mk directory. It might also be necessary to change the ISP programmer name in the PROGRAMMER variable. To build the code, use the following command: make -f grids/makefile Firmware programming Programming must be done with an AVR ISP programmer. These are very common and can be found for a few dollars - however, the most reliable units are Atmel's own AVR ISP mkII. The ISP programmer must be connected on the back of the module - red stripe of the cable on the same side as the ISP text on the board. To upload the code: make -f grids/makefile bootstrap_all","title":"Open source"},{"location":"modules/grids/open_source/#firmware-hacking","text":"Grids' source code is available under the GPL licence. The code (along with the hardware description files) can be found in the grids directory in our Eurorack modules git repository . After having cloned the repository, don't forget to run git submodule init && git submodule update to make sure the sub-projects referenced in the code are also pulled.","title":"Firmware hacking"},{"location":"modules/grids/open_source/#toolchain","text":"If you don't mind installing Vagrant and VirtualBox a cozy environment for firmware hacking is available. If you want to set up your own environment to build Grids' code, avr-gcc and avrdude must be installed. These are standard packages on Linux. On OS X, Crosspack can be installed. The path to the toolchain can be edited in the AVRLIB_TOOLS_PATH variable in avrlib/makefile.mk directory. It might also be necessary to change the ISP programmer name in the PROGRAMMER variable. To build the code, use the following command: make -f grids/makefile","title":"Toolchain"},{"location":"modules/grids/open_source/#firmware-programming","text":"Programming must be done with an AVR ISP programmer. These are very common and can be found for a few dollars - however, the most reliable units are Atmel's own AVR ISP mkII. The ISP programmer must be connected on the back of the module - red stripe of the cable on the same side as the ISP text on the board. To upload the code: make -f grids/makefile bootstrap_all","title":"Firmware programming"},{"location":"modules/grids/original_blurb/","text":"Your drum section will never be the same again... Take the user interface of an euclidean sequencer, a healthy dose of machine learning and graph algorithms, megabytes of drum loops, hours of intensive computations and you've got a drum pattern generator like no other. Grids' \"brain\" is a map of the typical drum patterns used in (mostly electronic) music, laid out by similarity, trained on a large corpus of drum loops. The module can smoothly interpolate and navigate from one pattern to the other, at the whim of a knob move or a CV. But Grids' knowledge of drum patterns goes far beyond what would be achieved with presets \u2013 given a position in the map, thousands of variations can be intuitively generated by controlling the \"event density\" of each of the 3 channels (bd, sd, hh) \u2013 gradually moving from a sparse backbone to a deliciously rich pattern with ghost notes, rolls and fills. ... especially when modulated by a noise source! Add CV-control on these parameters and you can add subtle or drastic variations to the drum pattern. If you don't want to waste a noise source or S&H for that, Grids has its own internal source of randomness that can unpredictably spice the pattern, in an always meaningful way. Building the rhythmic foundation of your tracks with Grids is fun, surprisingly intuitive, with modulation and variations possibilities that will rapidly make you forget x0x-style sequencers.","title":"Original blurb"},{"location":"modules/grids/original_blurb/#your-drum-section-will-never-be-the-same-again","text":"Take the user interface of an euclidean sequencer, a healthy dose of machine learning and graph algorithms, megabytes of drum loops, hours of intensive computations and you've got a drum pattern generator like no other. Grids' \"brain\" is a map of the typical drum patterns used in (mostly electronic) music, laid out by similarity, trained on a large corpus of drum loops. The module can smoothly interpolate and navigate from one pattern to the other, at the whim of a knob move or a CV. But Grids' knowledge of drum patterns goes far beyond what would be achieved with presets \u2013 given a position in the map, thousands of variations can be intuitively generated by controlling the \"event density\" of each of the 3 channels (bd, sd, hh) \u2013 gradually moving from a sparse backbone to a deliciously rich pattern with ghost notes, rolls and fills.","title":"Your drum section will never be the same again..."},{"location":"modules/grids/original_blurb/#especially-when-modulated-by-a-noise-source","text":"Add CV-control on these parameters and you can add subtle or drastic variations to the drum pattern. If you don't want to waste a noise source or S&H for that, Grids has its own internal source of randomness that can unpredictably spice the pattern, in an always meaningful way. Building the rhythmic foundation of your tracks with Grids is fun, surprisingly intuitive, with modulation and variations possibilities that will rapidly make you forget x0x-style sequencers.","title":"... especially when modulated by a noise source!"},{"location":"modules/kinks/","text":"Key data Original printed manual Features Three essential utility functions SIGN section LOGIC S&H Specifications Revisions and variants Key data Mingling and Mangling Parameter Value Width 4HP Depth 25mm +12V current 25mA -12V current 25mA Lifetime 03/16 to 05/21 Modulargrid Link Original printed manual PDF download Features Three essential utility functions SIGN section This section consists of a precision signal inverter, and half- and full- wave rectifiers (which respectively clips to 0V, and inverts the negative half of the signal). They can help in creating new LFO shapes, add overtones to audio signals or even transform CV melodies. LOGIC An analog OR gate outputs the maximum of two signals: not only it can merge two streams of triggers/gates like its digital counterparts, but it can also hybridizes LFOs, envelopes or even audio signals \u2013 creating the same type of inharmonic side-bands as ring-modulators. The analog AND gate outputs the minimum of the two signal. With it you can mute/un-mute a stream of triggers with another gate, or explore other shades of audio and CV mangling. S&H A no-nonsense implementation of a classic synthesizer circuit. On each trigger received on the TRIG input, the output voltage takes the value of the input voltage and holds this voltage. The signal input IN is normalized to a white noise generator \u2013 to easily generate stepped random values. The white noise signal is also available through the NOISE output jack. Specifications All inputs DC-coupled. All circuits handle audio-rate signals. Input impedance: 66k for RECTIFY , 90k for LOGIC , 1M for S&H . S&H TRIG input edge detector: minimum pulse width: 25\u00b5s. Maximum slew rate: 0.2V/ms. S&H sampling time: 100\u00b5s. S&H droop rate: <0.8mV/s. Noise output: flat from 10 Hz to 30kHz (-6dB/octave rolloff beyond), standard deviation = 1.8V +/- 10%. Revisions and variants 80 units made in 2021 demonstrated out of specs performances for the S&H and noise section, presumably from a bad batch of transistors. They were sold at a discount when Mutable Instruments shut down.","title":"Index"},{"location":"modules/kinks/#key-data","text":"Mingling and Mangling Parameter Value Width 4HP Depth 25mm +12V current 25mA -12V current 25mA Lifetime 03/16 to 05/21 Modulargrid Link","title":"Key data"},{"location":"modules/kinks/#original-printed-manual","text":"PDF download","title":"Original printed manual"},{"location":"modules/kinks/#features","text":"","title":"Features"},{"location":"modules/kinks/#three-essential-utility-functions","text":"","title":"Three essential utility functions"},{"location":"modules/kinks/#sign-section","text":"This section consists of a precision signal inverter, and half- and full- wave rectifiers (which respectively clips to 0V, and inverts the negative half of the signal). They can help in creating new LFO shapes, add overtones to audio signals or even transform CV melodies.","title":"SIGN section"},{"location":"modules/kinks/#logic","text":"An analog OR gate outputs the maximum of two signals: not only it can merge two streams of triggers/gates like its digital counterparts, but it can also hybridizes LFOs, envelopes or even audio signals \u2013 creating the same type of inharmonic side-bands as ring-modulators. The analog AND gate outputs the minimum of the two signal. With it you can mute/un-mute a stream of triggers with another gate, or explore other shades of audio and CV mangling.","title":"LOGIC"},{"location":"modules/kinks/#sh","text":"A no-nonsense implementation of a classic synthesizer circuit. On each trigger received on the TRIG input, the output voltage takes the value of the input voltage and holds this voltage. The signal input IN is normalized to a white noise generator \u2013 to easily generate stepped random values. The white noise signal is also available through the NOISE output jack.","title":"S&amp;H"},{"location":"modules/kinks/#specifications","text":"All inputs DC-coupled. All circuits handle audio-rate signals. Input impedance: 66k for RECTIFY , 90k for LOGIC , 1M for S&H . S&H TRIG input edge detector: minimum pulse width: 25\u00b5s. Maximum slew rate: 0.2V/ms. S&H sampling time: 100\u00b5s. S&H droop rate: <0.8mV/s. Noise output: flat from 10 Hz to 30kHz (-6dB/octave rolloff beyond), standard deviation = 1.8V +/- 10%.","title":"Specifications"},{"location":"modules/kinks/#revisions-and-variants","text":"80 units made in 2021 demonstrated out of specs performances for the S&H and noise section, presumably from a bad batch of transistors. They were sold at a discount when Mutable Instruments shut down.","title":"Revisions and variants"},{"location":"modules/kinks/manual/","text":"Installation Kinks requires a -12V/+12V power supply (2x5 pin connector). The ribbon cable connector must be aligned so that the red stripe of the ribbon cable (-12V) is on the same side of the module's power header as the \"Red stripe\" marking on the board. The module draws 25mA from both the +12V and -12V supply rails. Important notice: with long bus-boards and in the vicinity of a transmitter, Kinks' analog noise generation circuit can receive radio transmissions. The range of frequencies concerned by this quirk all carry digital modulations, indistinguishable from white noise. SIGN section This section consists of a precision inverter, a half- and a full-wave rectifier. 1. Signal input. 2. Inverted output. Besides the typical CV applications (invert the direction of an envelope or LFO), inverters are useful for creating interesting waveforms from VCO outputs. For example, invert the sine output of a classic analog VCO, and mix it with its sawtooth (or triangle) output. This is equivalent to attenuating the fundamental frequency of the sawtooth (or triangle) waveform, creating a more nasal sound. 3. Half-wave rectified output. The negative half of the signal is clipped to 0V. This can add many harmonics to audio signals. 4. Full-wave rectified output. The negative half of the signal is inverted. On symmetric waveforms like a sine or a triangle, this doubles the frequency of the signal (\"octaver\" effect). Another interesting application is to pre-process a random signal before sending it to a quantizer or digital VCO - some of these don't handle negative CVs! The monitoring LED indicates the amplitude and polarity of the input signal. LOGIC section Remember what a logic OR gate does: its output is at a high level (for example +5V) whenever one of the two inputs is at a high level. One could express this rule differently: the output is the greatest (maximum) of the two inputs. This is exactly what an analog OR circuit (also called a maximum or peaks circuit) does: it takes the maximum of its two input voltages. When these voltages are digital signals (for example with a low level of 0V and a high level of 5V), this circuit does the same thing as a digital OR gate. Similarly, the analog AND circuit extracts the minimum of the two inputs (the troughs in the graph of the two input signals). 1, 2. Signal inputs, normalized to 0V. 3. Analog OR signal (maximum, peaks). 4. Analog AND signal (minimum, troughs). The monitoring LED indicates the amplitude and polarity of the sum of the two input signals. A few interesting observations: Since the inputs are normalized to 0V, if you patch a cable into only one of the inputs, MAX will output the positive half of the waveform, and MIN will output the negative half of the waveform. You can of course use these for manipulating digital triggers, gates or clocks. With audio-rate signals, the resulting waveforms have the same kind of inharmonic partials and side-bands one would obtain with a ring-modulator. A classic \"Buchlaesque\" application is to combine various AD envelopes or triangle LFOs to create very complex shapes. Another interesting patch is to use a slow LFO to clip a triangle or sine wave - creating a PWM-like effect. S&H and noise section On each trigger received on the TRIG input, the output voltage takes the value of the input voltage and holds this voltage... until a new trigger is received on the TRIG input. 1. Signal input, normalized to the white noise generator. 2. Trigger input. Requires a signal with sharp rising edges (clock/gate/trigger generator, square LFO or VCO). 3. Noise generator output. 4. Sample and hold output. The monitoring LED indicates the amplitude and polarity of the output signal. It is important for the trigger input signal to have a sharp rising edge: the module is sensitive to the slope of the signal, not to its value. It is not possible to use slow sine or triangle LFOs to trigger the S&H (such signals can of course be sampled through the IN input to turn them into mad staircases). The trigger signal can go to up 10kHz: try patching a high-pitched square VCO to the TRIG input to add aliasing to an audio signal sent to IN (\"bitcrushing\"). Since the circuit is analog, it cannot hold indefinitely its output voltage. The output voltage very slowly decreases towards 0 at a rate smaller than 0.8mV (one cent) per second. Sending a clock or trigger to the TRIG input, with no signal patched into the IN input generates a stepped random signal. The output level is calibrated such that more than half of the time, the output value is between -2V and +2V ; and it very, very rarely goes below -5V or above +5V. The NOISE output can of course be used independently of the S&H circuit.","title":"Manual"},{"location":"modules/kinks/manual/#installation","text":"Kinks requires a -12V/+12V power supply (2x5 pin connector). The ribbon cable connector must be aligned so that the red stripe of the ribbon cable (-12V) is on the same side of the module's power header as the \"Red stripe\" marking on the board. The module draws 25mA from both the +12V and -12V supply rails. Important notice: with long bus-boards and in the vicinity of a transmitter, Kinks' analog noise generation circuit can receive radio transmissions. The range of frequencies concerned by this quirk all carry digital modulations, indistinguishable from white noise.","title":"Installation"},{"location":"modules/kinks/manual/#sign-section","text":"This section consists of a precision inverter, a half- and a full-wave rectifier. 1. Signal input. 2. Inverted output. Besides the typical CV applications (invert the direction of an envelope or LFO), inverters are useful for creating interesting waveforms from VCO outputs. For example, invert the sine output of a classic analog VCO, and mix it with its sawtooth (or triangle) output. This is equivalent to attenuating the fundamental frequency of the sawtooth (or triangle) waveform, creating a more nasal sound. 3. Half-wave rectified output. The negative half of the signal is clipped to 0V. This can add many harmonics to audio signals. 4. Full-wave rectified output. The negative half of the signal is inverted. On symmetric waveforms like a sine or a triangle, this doubles the frequency of the signal (\"octaver\" effect). Another interesting application is to pre-process a random signal before sending it to a quantizer or digital VCO - some of these don't handle negative CVs! The monitoring LED indicates the amplitude and polarity of the input signal.","title":"SIGN section"},{"location":"modules/kinks/manual/#logic-section","text":"Remember what a logic OR gate does: its output is at a high level (for example +5V) whenever one of the two inputs is at a high level. One could express this rule differently: the output is the greatest (maximum) of the two inputs. This is exactly what an analog OR circuit (also called a maximum or peaks circuit) does: it takes the maximum of its two input voltages. When these voltages are digital signals (for example with a low level of 0V and a high level of 5V), this circuit does the same thing as a digital OR gate. Similarly, the analog AND circuit extracts the minimum of the two inputs (the troughs in the graph of the two input signals). 1, 2. Signal inputs, normalized to 0V. 3. Analog OR signal (maximum, peaks). 4. Analog AND signal (minimum, troughs). The monitoring LED indicates the amplitude and polarity of the sum of the two input signals. A few interesting observations: Since the inputs are normalized to 0V, if you patch a cable into only one of the inputs, MAX will output the positive half of the waveform, and MIN will output the negative half of the waveform. You can of course use these for manipulating digital triggers, gates or clocks. With audio-rate signals, the resulting waveforms have the same kind of inharmonic partials and side-bands one would obtain with a ring-modulator. A classic \"Buchlaesque\" application is to combine various AD envelopes or triangle LFOs to create very complex shapes. Another interesting patch is to use a slow LFO to clip a triangle or sine wave - creating a PWM-like effect.","title":"LOGIC section"},{"location":"modules/kinks/manual/#sh-and-noise-section","text":"On each trigger received on the TRIG input, the output voltage takes the value of the input voltage and holds this voltage... until a new trigger is received on the TRIG input. 1. Signal input, normalized to the white noise generator. 2. Trigger input. Requires a signal with sharp rising edges (clock/gate/trigger generator, square LFO or VCO). 3. Noise generator output. 4. Sample and hold output. The monitoring LED indicates the amplitude and polarity of the output signal. It is important for the trigger input signal to have a sharp rising edge: the module is sensitive to the slope of the signal, not to its value. It is not possible to use slow sine or triangle LFOs to trigger the S&H (such signals can of course be sampled through the IN input to turn them into mad staircases). The trigger signal can go to up 10kHz: try patching a high-pitched square VCO to the TRIG input to add aliasing to an audio signal sent to IN (\"bitcrushing\"). Since the circuit is analog, it cannot hold indefinitely its output voltage. The output voltage very slowly decreases towards 0 at a rate smaller than 0.8mV (one cent) per second. Sending a clock or trigger to the TRIG input, with no signal patched into the IN input generates a stepped random signal. The output level is calibrated such that more than half of the time, the output value is between -2V and +2V ; and it very, very rarely goes below -5V or above +5V. The NOISE output can of course be used independently of the S&H circuit.","title":"S&amp;H and noise section"},{"location":"modules/kinks/open_source/","text":"Github repository Schematics","title":"Open source"},{"location":"modules/kinks/original_blurb/","text":"You've been a very naughty CV... With the same compact 4-HP size as its vanilla friend Links, Kinks provides three analog utility functions for altering the shape of audio or control signals.","title":"Original blurb"},{"location":"modules/kinks/original_blurb/#youve-been-a-very-naughty-cv","text":"With the same compact 4-HP size as its vanilla friend Links, Kinks provides three analog utility functions for altering the shape of audio or control signals.","title":"You've been a very naughty CV..."},{"location":"modules/links/","text":"Key data Original printed manual Features Three essential functions Specifications Revisions and variants 2015 Key data Multiples and mixing Parameter Value Width 4HP Depth 25mm +12V current 15mA -12V current 15mA Lifetime 01/14 to 03/22 Modulargrid Link Original printed manual PDF download Features Three essential functions The 1:3 section is a buffered multiple, allowing a note CV to be distributed to up to 3 VCOs without voltage drop. The 2:2 section is a 2-input summer with unity gains (also known as a precision adder). The sum of the two input channels is distributed to 2 outputs. The 3:1 section is a 3-input mixer, with a gain of 1/3 per channel (also known as an averager). It is particularly suitable for rapidly mixing audio sources such as oscillators, for which a unity gain mixer would have caused clipping. Specifications Input impedance: 1M for the buffered multiple, 100k for the mixers. Buffered multiple with low offset error. 0.1% resistors, allowing the 2:2 section to work as a precision adder. All inputs DC-coupled. Audio-rate signals accepted. Revisions and variants Following an initial batch of 250 modules manufactured by PCBCart in China, the production of Links moved to France where every other module was being made. 2015 Hardware revision labelled \"v4\" with the following differences: Green PCB (originally white). Thonkiconn jacks. SMT Components soldered on the same side as the jacks (not exposed on the back of the module).","title":"Index"},{"location":"modules/links/#key-data","text":"Multiples and mixing Parameter Value Width 4HP Depth 25mm +12V current 15mA -12V current 15mA Lifetime 01/14 to 03/22 Modulargrid Link","title":"Key data"},{"location":"modules/links/#original-printed-manual","text":"PDF download","title":"Original printed manual"},{"location":"modules/links/#features","text":"","title":"Features"},{"location":"modules/links/#three-essential-functions","text":"The 1:3 section is a buffered multiple, allowing a note CV to be distributed to up to 3 VCOs without voltage drop. The 2:2 section is a 2-input summer with unity gains (also known as a precision adder). The sum of the two input channels is distributed to 2 outputs. The 3:1 section is a 3-input mixer, with a gain of 1/3 per channel (also known as an averager). It is particularly suitable for rapidly mixing audio sources such as oscillators, for which a unity gain mixer would have caused clipping.","title":"Three essential functions"},{"location":"modules/links/#specifications","text":"Input impedance: 1M for the buffered multiple, 100k for the mixers. Buffered multiple with low offset error. 0.1% resistors, allowing the 2:2 section to work as a precision adder. All inputs DC-coupled. Audio-rate signals accepted.","title":"Specifications"},{"location":"modules/links/#revisions-and-variants","text":"Following an initial batch of 250 modules manufactured by PCBCart in China, the production of Links moved to France where every other module was being made.","title":"Revisions and variants"},{"location":"modules/links/#2015","text":"Hardware revision labelled \"v4\" with the following differences: Green PCB (originally white). Thonkiconn jacks. SMT Components soldered on the same side as the jacks (not exposed on the back of the module).","title":"2015"},{"location":"modules/links/manual/","text":"Installation Links requires a -12V/+12V power supply (2x5 pin connector). The ribbon cable connector must be aligned so that the red stripe of the ribbon cable (-12V) is on the same side of the module's power header as the \"Red stripe\" marking on the board. The module draws 15mA from both the +12V and -12V supply rails. 1:3 section This section of the module is a buffered multiple. The signal patched to the IN input is duplicated, without voltage drop, to each of the three OUT outputs. This section can be used to send the note CV from a keyboard, sequencer or MIDI interface to several VCOs; but it can also distribute an audio signal or modulation to several modules. 2:2 section This section acts as a precision adder/mixer and as a multiple. The two signals patched in the IN inputs are added, and the result is made available on each of the two OUT outputs. It is of course possible to use this section as a 1:2 multiple - when only one of the IN inputs is left unpatched. Because this section uses a precision adder circuit, it is possible to use it to transpose a note CV: for example, patch the CV output of a sequencer to the first input, and the CV output of a keyboard to the second input. Patch the output(s) to (a) VCO(s). With this patch, the sequence is transposed by the keyboard. Audio or modulation signals can also be mixed and/or multed by this section. 3:1 section This section acts as an averager. The three signals sent to each of the IN inputs are mixed together, with a gain of 1/3 applied to the mix. It is particularly useful for mixing audio signals without causing clipping.","title":"Manual"},{"location":"modules/links/manual/#installation","text":"Links requires a -12V/+12V power supply (2x5 pin connector). The ribbon cable connector must be aligned so that the red stripe of the ribbon cable (-12V) is on the same side of the module's power header as the \"Red stripe\" marking on the board. The module draws 15mA from both the +12V and -12V supply rails.","title":"Installation"},{"location":"modules/links/manual/#13-section","text":"This section of the module is a buffered multiple. The signal patched to the IN input is duplicated, without voltage drop, to each of the three OUT outputs. This section can be used to send the note CV from a keyboard, sequencer or MIDI interface to several VCOs; but it can also distribute an audio signal or modulation to several modules.","title":"1:3 section"},{"location":"modules/links/manual/#22-section","text":"This section acts as a precision adder/mixer and as a multiple. The two signals patched in the IN inputs are added, and the result is made available on each of the two OUT outputs. It is of course possible to use this section as a 1:2 multiple - when only one of the IN inputs is left unpatched. Because this section uses a precision adder circuit, it is possible to use it to transpose a note CV: for example, patch the CV output of a sequencer to the first input, and the CV output of a keyboard to the second input. Patch the output(s) to (a) VCO(s). With this patch, the sequence is transposed by the keyboard. Audio or modulation signals can also be mixed and/or multed by this section.","title":"2:2 section"},{"location":"modules/links/manual/#31-section","text":"This section acts as an averager. The three signals sent to each of the IN inputs are mixed together, with a gain of 1/3 applied to the mix. It is particularly useful for mixing audio signals without causing clipping.","title":"3:1 section"},{"location":"modules/links/open_source/","text":"Github repository Schematics","title":"Open source"},{"location":"modules/links/original_blurb/","text":"More than a multiple Links provides 3 utility functions focused on signal distribution and mixing.","title":"Original blurb"},{"location":"modules/links/original_blurb/#more-than-a-multiple","text":"Links provides 3 utility functions focused on signal distribution and mixing.","title":"More than a multiple"},{"location":"modules/marbles/","text":"Key data Original printed manual Features Random gate generator Master clock Two-channel random rhythm generator Random voltage generator Quantized or smooth... CV Post-processor Programmable quantizer Output diversity Random looping and shuffling External CV processing Specifications Key data Random sampler Parameter Value Width 18HP Depth 25mm +12V current 80mA -12V current 20mA Lifetime 03/18 to 04/22 Modulargrid Link Processor STM32F405RGT6 @ 168 MHz DAC DAC8164 Original printed manual PDF download Features Random gate generator Master clock Internal clock with adjustable rate (with V/O CV input), or division/multiplication of an external clock. Range selection button further multiplying or dividing the clock by 4. Rhythm follower/predictor to lock onto uneven clock divisions or rhythmic patterns. Adjustable jitter (knob and CV), going from perfect tracking to completely erroneous \u2013 but always preserving the overall tempo. Two-channel random rhythm generator Three gate outputs: t 2 is the main output carrying the jittery clock, t 1 and t 3 are the complementary random rhythm output. Three generative models, with CV-controlled bias parameter increasing the density of notes on one channel or the other: Random routing of each clock pulse to either outputs, following a coin toss. Selection of a random division factor for one output, and the reciprocal factor for the other. Generation of random kick/snare patterns using a process similar to Grids . Adjustable gate duration, from short triggers to full length. Gate duration can be randomized. Random voltage generator 3 outputs, either clocked by the 3 outputs of the random gate generator, or by a common external clock. Distribution control: SPREAD control, scanning between constant, bell-shaped, uniform or discrete distributions; and BIAS control biasing the generated voltage towards the bottom or top of the voltage range. Adjustable range: 0 to +2V (for melodies), 0 to +5V, -5V to +5V. Quantized or smooth... CV Post-processor The STEPS parameter controls the steppiness/quantization of the output voltages. Turn this knob clockwise and a progressive quantizer is applied to the voltages - progressively reducing the probability of hitting a note outside of the scale, then making accidentals less likely, then giving more weight to the root and fifth - and at the extreme yielding only octaves. If steppy is not your thing, turn counterclockwise to increasingly slew the output voltages to the point that the module produces smooth, continuous curves. Programmable quantizer 6 programmable scales. Scales are programmed by playing a short jam in the target scale: Marbles learns which notes are more prominent than others. Output diversity The three outputs can all follow the settings dialed on the control panel, or react in different and opposite ways. The turn of a knob can completely push your patch towards a new direction! Random looping and shuffling DEJA VU parameter increasing the probably of re-playing past material to the point that the generated output forms a loop... then increasing the probability of randomizing the order of this loop. The DEJA VU control applies to the random rhythm, the random voltages, or to both, or neither of them. Adjustable loop length from 1 to 16 steps. External CV processing An external CV can be recorded in the DEJA VU loop in place of internal random voltages. All transformations performed by the random voltage generator (looping, shuffling, spreading, transposition, quantization, lag-processing) can be performed on external voltages. TLDR: live remixing of external sequences! Specifications Analog random source. All inputs: 100k impedance, DC to 3.2kHz. Maximum input clock rate: 1kHz for the t Section, 8kHz for the X section. 32kHz refresh rate. 14-bit DAC with accurate software calibration - error below 1mV. 12-bit CV capture. Output levels: -5V to +5V for CVs (largest setting), 0V to +8V for gates. Input CV range: -5V to +5V. Front panel with Computer Modern labels, just like on your calculus textbook.","title":"Index"},{"location":"modules/marbles/#key-data","text":"Random sampler Parameter Value Width 18HP Depth 25mm +12V current 80mA -12V current 20mA Lifetime 03/18 to 04/22 Modulargrid Link Processor STM32F405RGT6 @ 168 MHz DAC DAC8164","title":"Key data"},{"location":"modules/marbles/#original-printed-manual","text":"PDF download","title":"Original printed manual"},{"location":"modules/marbles/#features","text":"","title":"Features"},{"location":"modules/marbles/#random-gate-generator","text":"","title":"Random gate generator"},{"location":"modules/marbles/#master-clock","text":"Internal clock with adjustable rate (with V/O CV input), or division/multiplication of an external clock. Range selection button further multiplying or dividing the clock by 4. Rhythm follower/predictor to lock onto uneven clock divisions or rhythmic patterns. Adjustable jitter (knob and CV), going from perfect tracking to completely erroneous \u2013 but always preserving the overall tempo.","title":"Master clock"},{"location":"modules/marbles/#two-channel-random-rhythm-generator","text":"Three gate outputs: t 2 is the main output carrying the jittery clock, t 1 and t 3 are the complementary random rhythm output. Three generative models, with CV-controlled bias parameter increasing the density of notes on one channel or the other: Random routing of each clock pulse to either outputs, following a coin toss. Selection of a random division factor for one output, and the reciprocal factor for the other. Generation of random kick/snare patterns using a process similar to Grids . Adjustable gate duration, from short triggers to full length. Gate duration can be randomized.","title":"Two-channel random rhythm generator"},{"location":"modules/marbles/#random-voltage-generator","text":"3 outputs, either clocked by the 3 outputs of the random gate generator, or by a common external clock. Distribution control: SPREAD control, scanning between constant, bell-shaped, uniform or discrete distributions; and BIAS control biasing the generated voltage towards the bottom or top of the voltage range. Adjustable range: 0 to +2V (for melodies), 0 to +5V, -5V to +5V.","title":"Random voltage generator"},{"location":"modules/marbles/#quantized-or-smooth-cv-post-processor","text":"The STEPS parameter controls the steppiness/quantization of the output voltages. Turn this knob clockwise and a progressive quantizer is applied to the voltages - progressively reducing the probability of hitting a note outside of the scale, then making accidentals less likely, then giving more weight to the root and fifth - and at the extreme yielding only octaves. If steppy is not your thing, turn counterclockwise to increasingly slew the output voltages to the point that the module produces smooth, continuous curves.","title":"Quantized or smooth... CV Post-processor"},{"location":"modules/marbles/#programmable-quantizer","text":"6 programmable scales. Scales are programmed by playing a short jam in the target scale: Marbles learns which notes are more prominent than others.","title":"Programmable quantizer"},{"location":"modules/marbles/#output-diversity","text":"The three outputs can all follow the settings dialed on the control panel, or react in different and opposite ways. The turn of a knob can completely push your patch towards a new direction!","title":"Output diversity"},{"location":"modules/marbles/#random-looping-and-shuffling","text":"DEJA VU parameter increasing the probably of re-playing past material to the point that the generated output forms a loop... then increasing the probability of randomizing the order of this loop. The DEJA VU control applies to the random rhythm, the random voltages, or to both, or neither of them. Adjustable loop length from 1 to 16 steps.","title":"Random looping and shuffling"},{"location":"modules/marbles/#external-cv-processing","text":"An external CV can be recorded in the DEJA VU loop in place of internal random voltages. All transformations performed by the random voltage generator (looping, shuffling, spreading, transposition, quantization, lag-processing) can be performed on external voltages. TLDR: live remixing of external sequences!","title":"External CV processing"},{"location":"modules/marbles/#specifications","text":"Analog random source. All inputs: 100k impedance, DC to 3.2kHz. Maximum input clock rate: 1kHz for the t Section, 8kHz for the X section. 32kHz refresh rate. 14-bit DAC with accurate software calibration - error below 1mV. 12-bit CV capture. Output levels: -5V to +5V for CVs (largest setting), 0V to +8V for gates. Input CV range: -5V to +5V. Front panel with Computer Modern labels, just like on your calculus textbook.","title":"Specifications"},{"location":"modules/marbles/firmware/","text":"Download Latest version (1.3) Firmware update procedure Revisions v1.3 (final) Fixes and minor improvements Fixed a bug causing spurious jumps in the DEJA VU loop playback position (occurring randomly, when DEJA VU is turned CCW), and another bug causing an unexpected change in the loop (occurring randomly, on average once every 37 hours) when DEJA VU is locked at 12 o'clock. Thanks to Tyler/ float32 for finding these two! Fixed a bug occurring when a buggy external clock source \"stutters\" by sending two rapid rising edges distant by a few ms at each clock tick. Lowered the amount of hysteresis in the quantizers responsible for converting a voltage or knob position into discrete settings (eg: a clock divider ratio, or LENGTH ). This makes the relationship between a voltage (or knob position) and a specific setting more consistent. Increased the width of the \"virtual notch\" for the 14-step setting of the LENGTH knob. Implicit and explicit reset If a clock pulse arrives after a long pause (3 seconds, or 4 times the interval between two clock ticks, whichever the longest), the module will reset all counters, dividers, patterns, and the step number of the relevant section (t or X). Provided DEJA VU is enabled and set at 12 o'clock, this gives a completely reproducible behavior at each restart of the clock. Hold the t and X section mode buttons (labelled E and N in the manual) simultaneously to repurpose the JITTER and STEPS CV inputs as explicit reset inputs for the t and X sections. The corresponding LEDs blink temporarily for 2s when the repurposed reset inputs are enabled, and go off when they are disabled (which is the default setting). The JITTER CV input is repurposed as a reset input for the t section: a rising edge on this input will reset, on the next clock tick , the clock divider, the step counter in the DEJA VU loop and the position of the rhythmic pattern. The STEPS CV input is repurposed as a reset input for the X section: a rising edge on this input will reset, on the next clock tick , the position of the DEJA VU loop. If a reset is received on the t side, this reset will be cascaded to the X section in the two following situations: * The X section's clock input is left unpatched (ie, X1, X2, X3 are internally clocked by t1, t2, t3 respectively). * The X section's clock is directly patched from t1, t2 or t3 (self-patching detection). Outside of these cases, the X section is considered to be running independently from the t section, and a reset on the t side won't be propagated to the X side. Emphasis was put on on the next clock tick : for this reset feature to work accurately, the reset pulse must precede, ideally by 1ms, the subsequent clock pulse. If the reset arrives right at the same time as the first clock pulse, the behavior is unspecified! Don't hesitate to delay your clock (or advance your reset) if you experience odd timing. v1.2 When the module is in external processing mode, with an external clock for the X section, and when this clock's patch cable is unplugged from the X clock input, so that an internal clock is now used for the X section, the acquired CV data on output X1 (which was shifted to outputs X2 and X3 ) is now copied to the DEJA VU loop of all three outputs. If a 3-second pause (or a pause lasting more than 4 clock ticks, whichever is the longest) is observed on the t section's clock signal, the rhythmic pattern played by the t section will reset to the first step at the next clock tick. New super lock feature. A long press on the t or X DEJA VU buttons locks the random generation for this section \u2013 which will stop responding to the DEJA VU knob. When a section is in this super locked state, the illuminated push-button blinks rapidly. Press it to bring it back to normal. In other words, the t and X section can be in these 3 states: Illuminated push-button off: random without repetition (equivalent to DEJA VU set to the minimum). Illuminated push-button on: randomness amount controlled by the DEJA VU knob. Illuminated push-button rapidly blinking: locked loop without randomness (equivalent to DEJA VU locked to 12 o\u2019clock). v1.1 Powering the module on while pressing the X mode selection button (N) enables (or disables) the color-blind mode. LED brightness and blinking patterns are more contrasted. Glowing, moderate brightness for the first setting, high intensity for the middle setting, low brightness for the last setting. When selecting scales, the number of blinks (from 1 to 6 \u2013 continuous) indicates the selected scale. Fixed a bug causing the X's section clock follower to temporarily go haywire when a patch cable is inserted in the clock input of the X section. v1.0 Initial release.","title":"Firmware"},{"location":"modules/marbles/firmware/#download","text":"Latest version (1.3) Firmware update procedure","title":"Download"},{"location":"modules/marbles/firmware/#revisions","text":"","title":"Revisions"},{"location":"modules/marbles/firmware/#v13-final","text":"","title":"v1.3 (final)"},{"location":"modules/marbles/firmware/#fixes-and-minor-improvements","text":"Fixed a bug causing spurious jumps in the DEJA VU loop playback position (occurring randomly, when DEJA VU is turned CCW), and another bug causing an unexpected change in the loop (occurring randomly, on average once every 37 hours) when DEJA VU is locked at 12 o'clock. Thanks to Tyler/ float32 for finding these two! Fixed a bug occurring when a buggy external clock source \"stutters\" by sending two rapid rising edges distant by a few ms at each clock tick. Lowered the amount of hysteresis in the quantizers responsible for converting a voltage or knob position into discrete settings (eg: a clock divider ratio, or LENGTH ). This makes the relationship between a voltage (or knob position) and a specific setting more consistent. Increased the width of the \"virtual notch\" for the 14-step setting of the LENGTH knob.","title":"Fixes and minor improvements"},{"location":"modules/marbles/firmware/#implicit-and-explicit-reset","text":"If a clock pulse arrives after a long pause (3 seconds, or 4 times the interval between two clock ticks, whichever the longest), the module will reset all counters, dividers, patterns, and the step number of the relevant section (t or X). Provided DEJA VU is enabled and set at 12 o'clock, this gives a completely reproducible behavior at each restart of the clock. Hold the t and X section mode buttons (labelled E and N in the manual) simultaneously to repurpose the JITTER and STEPS CV inputs as explicit reset inputs for the t and X sections. The corresponding LEDs blink temporarily for 2s when the repurposed reset inputs are enabled, and go off when they are disabled (which is the default setting). The JITTER CV input is repurposed as a reset input for the t section: a rising edge on this input will reset, on the next clock tick , the clock divider, the step counter in the DEJA VU loop and the position of the rhythmic pattern. The STEPS CV input is repurposed as a reset input for the X section: a rising edge on this input will reset, on the next clock tick , the position of the DEJA VU loop. If a reset is received on the t side, this reset will be cascaded to the X section in the two following situations: * The X section's clock input is left unpatched (ie, X1, X2, X3 are internally clocked by t1, t2, t3 respectively). * The X section's clock is directly patched from t1, t2 or t3 (self-patching detection). Outside of these cases, the X section is considered to be running independently from the t section, and a reset on the t side won't be propagated to the X side. Emphasis was put on on the next clock tick : for this reset feature to work accurately, the reset pulse must precede, ideally by 1ms, the subsequent clock pulse. If the reset arrives right at the same time as the first clock pulse, the behavior is unspecified! Don't hesitate to delay your clock (or advance your reset) if you experience odd timing.","title":"Implicit and explicit reset"},{"location":"modules/marbles/firmware/#v12","text":"When the module is in external processing mode, with an external clock for the X section, and when this clock's patch cable is unplugged from the X clock input, so that an internal clock is now used for the X section, the acquired CV data on output X1 (which was shifted to outputs X2 and X3 ) is now copied to the DEJA VU loop of all three outputs. If a 3-second pause (or a pause lasting more than 4 clock ticks, whichever is the longest) is observed on the t section's clock signal, the rhythmic pattern played by the t section will reset to the first step at the next clock tick. New super lock feature. A long press on the t or X DEJA VU buttons locks the random generation for this section \u2013 which will stop responding to the DEJA VU knob. When a section is in this super locked state, the illuminated push-button blinks rapidly. Press it to bring it back to normal. In other words, the t and X section can be in these 3 states: Illuminated push-button off: random without repetition (equivalent to DEJA VU set to the minimum). Illuminated push-button on: randomness amount controlled by the DEJA VU knob. Illuminated push-button rapidly blinking: locked loop without randomness (equivalent to DEJA VU locked to 12 o\u2019clock).","title":"v1.2"},{"location":"modules/marbles/firmware/#v11","text":"Powering the module on while pressing the X mode selection button (N) enables (or disables) the color-blind mode. LED brightness and blinking patterns are more contrasted. Glowing, moderate brightness for the first setting, high intensity for the middle setting, low brightness for the last setting. When selecting scales, the number of blinks (from 1 to 6 \u2013 continuous) indicates the selected scale. Fixed a bug causing the X's section clock follower to temporarily go haywire when a patch cable is inserted in the clock input of the X section.","title":"v1.1"},{"location":"modules/marbles/firmware/#v10","text":"Initial release.","title":"v1.0"},{"location":"modules/marbles/manual/","text":"Installation Marbles requires a -12V/+12V power supply (2x5 pin connector). The red stripe of the ribbon cable (-12V side) must be oriented on the same side as the \u201cRed stripe\u201d marking on the module and on your power distribution board. The module draws 80mA from the +12V rail, and 20mA from the -12V rail. Marbles' recipe for random music Start with a clock \u2013 generated internally or divided/multiplied from an external clock signal. If required, add some jitter to it, from slight humanization to complete chaos. Split this randomized clock into two streams of random triggers to generate two contrasting rhythmic patterns complementing the main clock. Generate three random voltages in sync with the rhythmic patterns obtained at the previous step. Transform the random voltages to spread them further apart, or concentrate them around a specific voltage. Add a pinch of lag-processing to obtain smooth random modulations... or quantization to get random tunes. Steps 1 to 3 are handled by the left half of the module, the random rhythms being generated on the outputs labelled t . In your Eurorack system such duties might have been performed by modules like Grids and Branches. Steps 4 to 6 are handled by the right half of the module, the random voltages being generated on the outputs labelled X . A large number of modules would be necessary to patch this functionality: a triple noise source and sample&hold, waveshapers, quantizers, and lag processors. And now let\u2019s take it further: what if everything the module did could be controlled by a slowly evolving or lockable loop, like with Music Thing\u2019s Turing Machine? That\u2019s what the DEJA VU section is for. Time to dive into the details! t Generator The t generator produces random gates by generating a jittery master clock (which is output on t 2 ) and deriving from it two streams of random gates which are output on t 1 and t 3 . A. Clock rate. 120 BPM at 12 o\u2019clock. B. Clock range. Divides or multiplies the clock rate by 4. C. Amount of randomness in the clock timing - perfectly stable, then simulating an instrumentalist lagging and catching up, then... complete chaos. D. Bias. Controls whether gates are more likely to occur on t 1 or t 3 . Several methods are available for splitting the master clock into t 1 and t 3 , selected by the button [E] : A coin is tossed at every pulse of t 2 , to decide whether the pulse is passed to t 1 or t 3 . BIAS controls the fairness of the coin toss. t 1 and t 3 are generated by respectively multiplying and dividing t 2 by a random ratio. Turn the BIAS knob fully clockwise or counter-clockwise to reach more extreme ratios. the triggers alternate between t 1 and t 3 , following the same kind of regularity as kick/snare drum patterns. 1. BIAS, RATE (with V/O scaling) and JITTER CV inputs. 2. External clock input. The clock signal patched in this input replaces the internal clock. In this case, the RATE knob and CV input are re-purposed as a division/multiplication control, and the jitter setting is applied to the external clock. 3. Gate outputs. Hold the button [E] and turn BIAS to adjust the gate length from 1% to 99%, or JITTER to adjust the gate length randomization (from deterministic to completely random). Only t 1 and t 3 are affected by this. t 2 has a constant 50% duty cycle. DEJA VU section Whenever the module needs to make a random choice (for instance, to decide on the amount of jitter to apply on the next tick of its clock, or to generate a random voltage for one of its outputs), it queries the DEJA VU section. The DEJA VU section either recyles a previously generated random choice, or samples fresh random data from a hardware random source. F. G. These buttons control whether the DEJA VU settings apply to the t or X section (or neither, or both). For example, the module can generate a non-repeating sequence of voltages locked to a looping rhythm ( t enabled, X disabled); or cycle through the same sequence of voltages on an ever-changing rhythm ( t disabled, X enabled). H. Probability of re-cycling random decisions/voltages from the past: From 7 o\u2019clock to 12 o\u2019clock, this probability goes from 0 (completely random) to 1 (locked loop). At 12 o\u2019clock, the module is thus stuck in a loop, because it never generates fresh random data. In this case, the illuminated pushbuttons [F] and [G] blink. From 12 o\u2019clock to 5 o\u2019clock, the probability of randomly jumping within the loop goes from 0 to 1. At 5 o\u2019clock, the module thus plays random permutations of the same set of decisions/voltages. I. Loop length. Lengths of 5, 7, 10 and 14 can be obtained by setting the knob between the graduations printed on the panel. 4. DEJA VU CV input. X Generator The X generator generates three independent random voltages output on X 1 , X 2 and X 3 . They are clocked by the three outputs from the t section, or by a common external clock. J. Output voltage range. 0 to +2V, 0 to +5V or -5 to +5V. K. Probability distribution width and shape. Turning counter-clockwise from 12 o\u2019clock, the voltages are increasingly concentrated near the center of the range. Fully counter-clockwise, a constant voltage is output. At 12 o\u2019clock, they follow a bell curve - more likely to occur near the center but able to reach the extremes. At 2 o\u2019clock, they occupy the entire voltage range with equal probability. Past this point, extreme values become more likely. Fully clockwise, only the minimum and maximum voltages are possible, turning X 1 , X 2 and X 3 into random gates. L. Distribution bias. Skews the distribution towards low or high voltages. Think of this as the probabilistic equivalent of an offset: it does not shift the voltage down or up, but biases the decision towards the bottom or top of the voltage range. In the illustration below, the pink histogram represents the distribution of possible output voltages: the tallest bar corresponds to the most likely outcome. The teal oscillogram is an example of output voltage sequence. M. Horizontal and vertical \u201csteppiness\u201d of the generated voltages. At 12 o\u2019clock, generates the typical S&H steps. Turn CCW to generate smoother edges, then random linear segments, then smooth random curves. Turn CW to quantize the generated voltages to a scale, then to progressively strip the scale of its notes until only the root note remains. N. Controls how the outputs X 1 , X 2 and X 3 react to the settings dialed on the knobs [K] , [L] and [M] \u2013 allowing you to obtain different flavors of random voltages from the 3 outputs. Diversity is fun! All channels follow the settings on the control panel. X 2 follows the control panel, while X 1 and X 3 take opposite values. For example, if STEPS is turned fully CW, X 1 and X 3 will be smooth while X 2 is quantized to the root note and its octaves. X 3 follows the control panel, X 1 reacts in the opposite direction, and X 2 always stays in the middle (steppy, unbiased, bell-curve). O. External processing mode . 5. STEPS, SPREAD and BIAS CV inputs. 6. External clock input. When patched, all three outputs follow the same external clock, as opposed to being clocked by the three outputs from the t section. 7. CV outputs. Sampling external CVs with the X generator Press the button [O] to enable the external processing mode. In this mode, the module samples the voltage present on the SPREAD CV input (5) whenever a random value is needed for one of the X outputs. A couple of interesting notes about external CV processing: BIAS [L] acts as a transposition control, shifting voltages up and down, and SPREAD [K] controls the range of this transposition. When no patch cable is inserted in the X section's clock input (6) , the three X output will contain the same melody, but with some notes frozen/sustained on outputs 1 and 3 \u2013 because each output is sampled at its own pace. When the channel diversity setting [N] is set to the first (green) position, and the module is externally clocked, and an external CV is fed to the module, you'd expect all 3 outputs to carry the same voltage, right? That's right, but that would be boring... In this particular configuration, the module switches to a shift-register mode in which X 2 carries X 1 's voltage shifted by one clock tick, and X 3 carries X 2 's voltage shifted by one clock tick. All outputs follow the value of the STEPS [M] knob. Always. Irrespectively of the channel diversity setting [N] . Because some sequencers do not exactly change their output CVs at the same time as they send their gate signals, Marbles tolerates up to 3ms of difference between the transitions. Y Generator The Y generator, by default, is a smooth, full-range (-5V to +5V), random source that is clocked at 1/16 the rate of X 2 . These settings can be modified by holding the button [N] and adjusting RATE (division factor relative to X 2 , from 1/64 to 1 ), SPREAD , BIAS and STEPS while the button is held. The Y output is never affected by the DEJA VU settings. STEPS quantizer The STEPS knob progressively eliminates notes from a chromatic scale: first to reveal an interesting scale, then to mask all notes except the most salient ones in this scale. The example below is for a C-major scale (first factory preset). Selecting a scale Hold the voltage range button [J] for 2 seconds and repeatedly press it to select a scale. The color of the blinking LED and the rate of blinking indicates the active scale. Six memory slots are available for recording scales. They are pre-programmed with scales rooted in C (0V). Programming a scale Connect the CV and Gate outputs of a keyboard or MIDI interface to the SPREAD (5) and CLOCK (6) inputs respectively. Hold the external processing mode button [O] for 2 seconds. The LED above the scale selection button [J] blinks and indicates the active scale. This scale is going to be reprogrammed! Play a little jam in the scale you want to program. Fifty notes, or more, is the recommended length. Press the button [O] when done. The module analyzes your jam to measure how frequently each note occurs. The least frequently played notes will be the first to be eliminated when STEPS is turned clockwise from 12 o\u2019clock. The most frequently played note will be the last one to remain when STEPS is at 5 o\u2019clock. Note: it is also possible, at step 3, to play the scale in ascending order, instead of a long melody. In this case, the module will not know the relative importance of each note of the scale, and the gradual scale \u201ccarving\u201d will not be performed: turning the STEPS button from 12 o\u2019clock to 5\u2019clock will not modify the scale. One can take advantage of the way the module counts notes to program several subsets of the same scale along the course of the STEPS knob. For example if we play : C D E F G A B C D F G A C F G C G C We'll get, right after 12 o'clock, C D E F G A B ; then C D F G A (least frequent notes E and B are eliminated) ; then C F G (less frequent notes D and A eliminated) ; then C G (F is the next to be eliminated) ; then C (which is the most frequent note in the fragment). Resetting a scale to a factory default Hold the external processing mode button [O] for 2 seconds to enter the scale recording mode. The LED above the scale selection button [J] blinks and indicates the active scale. This scale is going to be reprogrammed! Hold the external processing mode button [O] for 2 seconds. The currently active scale is reprogrammed to its factory data. Tips and tricks If DEJA VU is past 12 o\u2019clock and the loop length is set to 1, the outputs remain frozen in the same state. If DEJA VU is around 11 o\u2019clock, the loop will slowly mutate. The DEJA VU knob has a \u201cvirtual notch\u201d at 12 o\u2019clock - even if it is not exactly at 12 o\u2019clock, you will still get a perfectly non-random loop. Once a sequence is looping, it is still possible to alter it with SPREAD/BIAS to map it to a different range of voltages. Once a sequence is looping, a rapid double press on the DEJA VU buttons reseeds it. When the X section is not externally clocked, X 1 , X 2 and X 3 are rhythmically independent from each other, each output changing its voltage at its own pace. Setting the loop LENGTH to 3 (for example), will cause each output to go through a 3-note sequence independently from the other, creating polyrhythmic effects. Self-patching is a rewarding technique with Marbles! In particular, the Y output provides a useful slow modulation source for randomizing the other parameters of the module. Advanced topics Firmware update procedure Unplug all CV inputs/outputs from the module. Connect the output of your audio interface/sound card to the RATE CV input. Set the RATE knob (A) to an intermediate position. Power on your modular system with the t section DEJA VU illuminated push-button (F) pressed. Make sure that no additional sound (such as email notification sounds, background music etc.) from your computer will be played during the procedure. Make sure that your speakers/monitors are not connected to your audio interface - the noises emitted during the procedure are aggressive and can harm your hearing. On non-studio audio equipment (for example the line output from a desktop computer), you might have to turn up the gain to the maximum. When you are all set, play the firmware update file into the module. While the module receives data, the RATE LED will act as vu-meter (lit in orange when the signal level is optimal). Try adjusting the RATE knob to adjust gain. When the end of the audio file is reached, the module automatically restarts - if it is not the case, please retry the procedure from the beginning. In case the signal level is inadequate, all LEDs will blink in red. Press the button (F) and retry with a higher gain. If this does not help, please retry the procedure from another computer/audio interface, and make sure that no piece of equipment or software effect (equalizer, automatic gain control, FX processor) is inserted in the signal chain.","title":"Manual"},{"location":"modules/marbles/manual/#installation","text":"Marbles requires a -12V/+12V power supply (2x5 pin connector). The red stripe of the ribbon cable (-12V side) must be oriented on the same side as the \u201cRed stripe\u201d marking on the module and on your power distribution board. The module draws 80mA from the +12V rail, and 20mA from the -12V rail.","title":"Installation"},{"location":"modules/marbles/manual/#marbles-recipe-for-random-music","text":"Start with a clock \u2013 generated internally or divided/multiplied from an external clock signal. If required, add some jitter to it, from slight humanization to complete chaos. Split this randomized clock into two streams of random triggers to generate two contrasting rhythmic patterns complementing the main clock. Generate three random voltages in sync with the rhythmic patterns obtained at the previous step. Transform the random voltages to spread them further apart, or concentrate them around a specific voltage. Add a pinch of lag-processing to obtain smooth random modulations... or quantization to get random tunes. Steps 1 to 3 are handled by the left half of the module, the random rhythms being generated on the outputs labelled t . In your Eurorack system such duties might have been performed by modules like Grids and Branches. Steps 4 to 6 are handled by the right half of the module, the random voltages being generated on the outputs labelled X . A large number of modules would be necessary to patch this functionality: a triple noise source and sample&hold, waveshapers, quantizers, and lag processors. And now let\u2019s take it further: what if everything the module did could be controlled by a slowly evolving or lockable loop, like with Music Thing\u2019s Turing Machine? That\u2019s what the DEJA VU section is for. Time to dive into the details!","title":"Marbles' recipe for random music"},{"location":"modules/marbles/manual/#t-generator","text":"The t generator produces random gates by generating a jittery master clock (which is output on t 2 ) and deriving from it two streams of random gates which are output on t 1 and t 3 . A. Clock rate. 120 BPM at 12 o\u2019clock. B. Clock range. Divides or multiplies the clock rate by 4. C. Amount of randomness in the clock timing - perfectly stable, then simulating an instrumentalist lagging and catching up, then... complete chaos. D. Bias. Controls whether gates are more likely to occur on t 1 or t 3 . Several methods are available for splitting the master clock into t 1 and t 3 , selected by the button [E] : A coin is tossed at every pulse of t 2 , to decide whether the pulse is passed to t 1 or t 3 . BIAS controls the fairness of the coin toss. t 1 and t 3 are generated by respectively multiplying and dividing t 2 by a random ratio. Turn the BIAS knob fully clockwise or counter-clockwise to reach more extreme ratios. the triggers alternate between t 1 and t 3 , following the same kind of regularity as kick/snare drum patterns. 1. BIAS, RATE (with V/O scaling) and JITTER CV inputs. 2. External clock input. The clock signal patched in this input replaces the internal clock. In this case, the RATE knob and CV input are re-purposed as a division/multiplication control, and the jitter setting is applied to the external clock. 3. Gate outputs. Hold the button [E] and turn BIAS to adjust the gate length from 1% to 99%, or JITTER to adjust the gate length randomization (from deterministic to completely random). Only t 1 and t 3 are affected by this. t 2 has a constant 50% duty cycle.","title":"t Generator"},{"location":"modules/marbles/manual/#deja-vu-section","text":"Whenever the module needs to make a random choice (for instance, to decide on the amount of jitter to apply on the next tick of its clock, or to generate a random voltage for one of its outputs), it queries the DEJA VU section. The DEJA VU section either recyles a previously generated random choice, or samples fresh random data from a hardware random source. F. G. These buttons control whether the DEJA VU settings apply to the t or X section (or neither, or both). For example, the module can generate a non-repeating sequence of voltages locked to a looping rhythm ( t enabled, X disabled); or cycle through the same sequence of voltages on an ever-changing rhythm ( t disabled, X enabled). H. Probability of re-cycling random decisions/voltages from the past: From 7 o\u2019clock to 12 o\u2019clock, this probability goes from 0 (completely random) to 1 (locked loop). At 12 o\u2019clock, the module is thus stuck in a loop, because it never generates fresh random data. In this case, the illuminated pushbuttons [F] and [G] blink. From 12 o\u2019clock to 5 o\u2019clock, the probability of randomly jumping within the loop goes from 0 to 1. At 5 o\u2019clock, the module thus plays random permutations of the same set of decisions/voltages. I. Loop length. Lengths of 5, 7, 10 and 14 can be obtained by setting the knob between the graduations printed on the panel. 4. DEJA VU CV input.","title":"DEJA VU section"},{"location":"modules/marbles/manual/#x-generator","text":"The X generator generates three independent random voltages output on X 1 , X 2 and X 3 . They are clocked by the three outputs from the t section, or by a common external clock. J. Output voltage range. 0 to +2V, 0 to +5V or -5 to +5V. K. Probability distribution width and shape. Turning counter-clockwise from 12 o\u2019clock, the voltages are increasingly concentrated near the center of the range. Fully counter-clockwise, a constant voltage is output. At 12 o\u2019clock, they follow a bell curve - more likely to occur near the center but able to reach the extremes. At 2 o\u2019clock, they occupy the entire voltage range with equal probability. Past this point, extreme values become more likely. Fully clockwise, only the minimum and maximum voltages are possible, turning X 1 , X 2 and X 3 into random gates. L. Distribution bias. Skews the distribution towards low or high voltages. Think of this as the probabilistic equivalent of an offset: it does not shift the voltage down or up, but biases the decision towards the bottom or top of the voltage range. In the illustration below, the pink histogram represents the distribution of possible output voltages: the tallest bar corresponds to the most likely outcome. The teal oscillogram is an example of output voltage sequence. M. Horizontal and vertical \u201csteppiness\u201d of the generated voltages. At 12 o\u2019clock, generates the typical S&H steps. Turn CCW to generate smoother edges, then random linear segments, then smooth random curves. Turn CW to quantize the generated voltages to a scale, then to progressively strip the scale of its notes until only the root note remains. N. Controls how the outputs X 1 , X 2 and X 3 react to the settings dialed on the knobs [K] , [L] and [M] \u2013 allowing you to obtain different flavors of random voltages from the 3 outputs. Diversity is fun! All channels follow the settings on the control panel. X 2 follows the control panel, while X 1 and X 3 take opposite values. For example, if STEPS is turned fully CW, X 1 and X 3 will be smooth while X 2 is quantized to the root note and its octaves. X 3 follows the control panel, X 1 reacts in the opposite direction, and X 2 always stays in the middle (steppy, unbiased, bell-curve). O. External processing mode . 5. STEPS, SPREAD and BIAS CV inputs. 6. External clock input. When patched, all three outputs follow the same external clock, as opposed to being clocked by the three outputs from the t section. 7. CV outputs.","title":"X Generator"},{"location":"modules/marbles/manual/#sampling-external-cvs-with-the-x-generator","text":"Press the button [O] to enable the external processing mode. In this mode, the module samples the voltage present on the SPREAD CV input (5) whenever a random value is needed for one of the X outputs. A couple of interesting notes about external CV processing: BIAS [L] acts as a transposition control, shifting voltages up and down, and SPREAD [K] controls the range of this transposition. When no patch cable is inserted in the X section's clock input (6) , the three X output will contain the same melody, but with some notes frozen/sustained on outputs 1 and 3 \u2013 because each output is sampled at its own pace. When the channel diversity setting [N] is set to the first (green) position, and the module is externally clocked, and an external CV is fed to the module, you'd expect all 3 outputs to carry the same voltage, right? That's right, but that would be boring... In this particular configuration, the module switches to a shift-register mode in which X 2 carries X 1 's voltage shifted by one clock tick, and X 3 carries X 2 's voltage shifted by one clock tick. All outputs follow the value of the STEPS [M] knob. Always. Irrespectively of the channel diversity setting [N] . Because some sequencers do not exactly change their output CVs at the same time as they send their gate signals, Marbles tolerates up to 3ms of difference between the transitions.","title":"Sampling external CVs with the X generator"},{"location":"modules/marbles/manual/#y-generator","text":"The Y generator, by default, is a smooth, full-range (-5V to +5V), random source that is clocked at 1/16 the rate of X 2 . These settings can be modified by holding the button [N] and adjusting RATE (division factor relative to X 2 , from 1/64 to 1 ), SPREAD , BIAS and STEPS while the button is held. The Y output is never affected by the DEJA VU settings.","title":"Y Generator"},{"location":"modules/marbles/manual/#steps-quantizer","text":"The STEPS knob progressively eliminates notes from a chromatic scale: first to reveal an interesting scale, then to mask all notes except the most salient ones in this scale. The example below is for a C-major scale (first factory preset).","title":"STEPS quantizer"},{"location":"modules/marbles/manual/#selecting-a-scale","text":"Hold the voltage range button [J] for 2 seconds and repeatedly press it to select a scale. The color of the blinking LED and the rate of blinking indicates the active scale. Six memory slots are available for recording scales. They are pre-programmed with scales rooted in C (0V).","title":"Selecting a scale"},{"location":"modules/marbles/manual/#programming-a-scale","text":"Connect the CV and Gate outputs of a keyboard or MIDI interface to the SPREAD (5) and CLOCK (6) inputs respectively. Hold the external processing mode button [O] for 2 seconds. The LED above the scale selection button [J] blinks and indicates the active scale. This scale is going to be reprogrammed! Play a little jam in the scale you want to program. Fifty notes, or more, is the recommended length. Press the button [O] when done. The module analyzes your jam to measure how frequently each note occurs. The least frequently played notes will be the first to be eliminated when STEPS is turned clockwise from 12 o\u2019clock. The most frequently played note will be the last one to remain when STEPS is at 5 o\u2019clock. Note: it is also possible, at step 3, to play the scale in ascending order, instead of a long melody. In this case, the module will not know the relative importance of each note of the scale, and the gradual scale \u201ccarving\u201d will not be performed: turning the STEPS button from 12 o\u2019clock to 5\u2019clock will not modify the scale. One can take advantage of the way the module counts notes to program several subsets of the same scale along the course of the STEPS knob. For example if we play : C D E F G A B C D F G A C F G C G C We'll get, right after 12 o'clock, C D E F G A B ; then C D F G A (least frequent notes E and B are eliminated) ; then C F G (less frequent notes D and A eliminated) ; then C G (F is the next to be eliminated) ; then C (which is the most frequent note in the fragment).","title":"Programming a scale"},{"location":"modules/marbles/manual/#resetting-a-scale-to-a-factory-default","text":"Hold the external processing mode button [O] for 2 seconds to enter the scale recording mode. The LED above the scale selection button [J] blinks and indicates the active scale. This scale is going to be reprogrammed! Hold the external processing mode button [O] for 2 seconds. The currently active scale is reprogrammed to its factory data.","title":"Resetting a scale to a factory default"},{"location":"modules/marbles/manual/#tips-and-tricks","text":"If DEJA VU is past 12 o\u2019clock and the loop length is set to 1, the outputs remain frozen in the same state. If DEJA VU is around 11 o\u2019clock, the loop will slowly mutate. The DEJA VU knob has a \u201cvirtual notch\u201d at 12 o\u2019clock - even if it is not exactly at 12 o\u2019clock, you will still get a perfectly non-random loop. Once a sequence is looping, it is still possible to alter it with SPREAD/BIAS to map it to a different range of voltages. Once a sequence is looping, a rapid double press on the DEJA VU buttons reseeds it. When the X section is not externally clocked, X 1 , X 2 and X 3 are rhythmically independent from each other, each output changing its voltage at its own pace. Setting the loop LENGTH to 3 (for example), will cause each output to go through a 3-note sequence independently from the other, creating polyrhythmic effects. Self-patching is a rewarding technique with Marbles! In particular, the Y output provides a useful slow modulation source for randomizing the other parameters of the module.","title":"Tips and tricks"},{"location":"modules/marbles/manual/#advanced-topics","text":"","title":"Advanced topics"},{"location":"modules/marbles/manual/#firmware-update-procedure","text":"Unplug all CV inputs/outputs from the module. Connect the output of your audio interface/sound card to the RATE CV input. Set the RATE knob (A) to an intermediate position. Power on your modular system with the t section DEJA VU illuminated push-button (F) pressed. Make sure that no additional sound (such as email notification sounds, background music etc.) from your computer will be played during the procedure. Make sure that your speakers/monitors are not connected to your audio interface - the noises emitted during the procedure are aggressive and can harm your hearing. On non-studio audio equipment (for example the line output from a desktop computer), you might have to turn up the gain to the maximum. When you are all set, play the firmware update file into the module. While the module receives data, the RATE LED will act as vu-meter (lit in orange when the signal level is optimal). Try adjusting the RATE knob to adjust gain. When the end of the audio file is reached, the module automatically restarts - if it is not the case, please retry the procedure from the beginning. In case the signal level is inadequate, all LEDs will blink in red. Press the button (F) and retry with a higher gain. If this does not help, please retry the procedure from another computer/audio interface, and make sure that no piece of equipment or software effect (equalizer, automatic gain control, FX processor) is inserted in the signal chain.","title":" Firmware update procedure"},{"location":"modules/marbles/open_source/","text":"Github repository Schematics Firmware hacking Marbles' source code is available under the MIT licence. The code (along with the hardware description files) can be found in the marbles directory in our Eurorack modules git repository . After having cloned the repository, don't forget to run git submodule init && git submodule update to make sure the sub-projects referenced in the code are also pulled. Toolchain If you don't mind installing Vagrant and VirtualBox a cozy environment for firmware hacking is available. If you want to set up your own environment to build Marbles' code, an ARM EABI toolchain must be installed. Because of tight CPU and code size limits, we recommend you to use the same compiler version as we do: 4.8-2013-q4-major . Various pre-compiled binaries and source packages are available here . The path to the toolchain binaries must be specified in the TOOLCHAIN_PATH variable in marbles/makefile . To build the bootloader, use the following command: make -f marbles/bootloader/makefile hex To build the code, use the following command: make -f marbles/makefile If you modify lookup tables and want the big resources.cc file to be regenerated: touch marbles/resources/resources.py && make -f marbles/makefile resources Firmware programming The recommended solution for firmware programming is to use a ST Discovery board. Connect the 4 SWD lines of the board to the 4 programming lines of Marbles ( RESET , SWDIO , SWCLK and GND ). Make sure that the programming interface ( PGM_INTERFACE variable) is set to stlink-v2 in stmlib/makefile.inc . Upload the firmware with: make -f marbles/makefile upload Note that this will destroy the factory calibration data. DAC Calibration With a factory-made module, it is recommended to backup and restore the data originally written in the Flash memory of the module in range 0x08004000:0x08008000 (factory calibration data). In a DIY situation, the most direct way of calibrating the module is to initialize the structure storing the calibration data to the correct values, deduced by measurement. Modify Settings::Init() to include the following lines: persistent_data_.calibration_data.dac_offset[0] = 32768.0f /* FIXME */; persistent_data_.calibration_data.dac_scale[0] = -6212.8f /* FIXME */; // SNIP SNIP persistent_data_.calibration_data.dac_offset[3] = 32768.0f /* FIXME */; persistent_data_.calibration_data.dac_scale[3] = -6212.8f /* FIXME */; The correct values can be obtained by the following process: Flash the module with the default calibration values. For each of the 4 outputs, accurately measure the voltage produced when the module settings correspond to a 1V and 3V constant voltage (full range, SPREAD fully CCW, STEPS fully CW, BIAS adjusted for the correct octave). Use the following script to do the math!","title":"Open source"},{"location":"modules/marbles/open_source/#firmware-hacking","text":"Marbles' source code is available under the MIT licence. The code (along with the hardware description files) can be found in the marbles directory in our Eurorack modules git repository . After having cloned the repository, don't forget to run git submodule init && git submodule update to make sure the sub-projects referenced in the code are also pulled.","title":"Firmware hacking"},{"location":"modules/marbles/open_source/#toolchain","text":"If you don't mind installing Vagrant and VirtualBox a cozy environment for firmware hacking is available. If you want to set up your own environment to build Marbles' code, an ARM EABI toolchain must be installed. Because of tight CPU and code size limits, we recommend you to use the same compiler version as we do: 4.8-2013-q4-major . Various pre-compiled binaries and source packages are available here . The path to the toolchain binaries must be specified in the TOOLCHAIN_PATH variable in marbles/makefile . To build the bootloader, use the following command: make -f marbles/bootloader/makefile hex To build the code, use the following command: make -f marbles/makefile If you modify lookup tables and want the big resources.cc file to be regenerated: touch marbles/resources/resources.py && make -f marbles/makefile resources","title":"Toolchain"},{"location":"modules/marbles/open_source/#firmware-programming","text":"The recommended solution for firmware programming is to use a ST Discovery board. Connect the 4 SWD lines of the board to the 4 programming lines of Marbles ( RESET , SWDIO , SWCLK and GND ). Make sure that the programming interface ( PGM_INTERFACE variable) is set to stlink-v2 in stmlib/makefile.inc . Upload the firmware with: make -f marbles/makefile upload Note that this will destroy the factory calibration data.","title":"Firmware programming"},{"location":"modules/marbles/open_source/#dac-calibration","text":"With a factory-made module, it is recommended to backup and restore the data originally written in the Flash memory of the module in range 0x08004000:0x08008000 (factory calibration data). In a DIY situation, the most direct way of calibrating the module is to initialize the structure storing the calibration data to the correct values, deduced by measurement. Modify Settings::Init() to include the following lines: persistent_data_.calibration_data.dac_offset[0] = 32768.0f /* FIXME */; persistent_data_.calibration_data.dac_scale[0] = -6212.8f /* FIXME */; // SNIP SNIP persistent_data_.calibration_data.dac_offset[3] = 32768.0f /* FIXME */; persistent_data_.calibration_data.dac_scale[3] = -6212.8f /* FIXME */; The correct values can be obtained by the following process: Flash the module with the default calibration values. For each of the 4 outputs, accurately measure the voltage produced when the module settings correspond to a 1V and 3V constant voltage (full range, SPREAD fully CCW, STEPS fully CW, BIAS adjusted for the correct octave). Use the following script to do the math!","title":"DAC Calibration"},{"location":"modules/marbles/original_blurb/","text":"Controlled chaos, repeatable randomness Marbles is a source of random gates and voltages , which offers an extensive amount of (voltage) control on all the different flavors of randomness it produces. The module gives the musician many different ways of imposing structure on the random events generated by the module: synchronization to external clocks, control of the repetition or novelty of the generated material, quantization of the voltages, or randomization of gates or voltages generated by traditional sequencers. t : the random gate generator Marbles either follows its own internal clock, or locks onto an adjustable multiplication/division of an external clock (or regular rhythmic pattern). This regular clock is perturbed by a process simulating an instrumentist playing along a click and trying to catch up on their errors - from perfect accuracy to complete chaos. From this imperfect master clock, a 2-channel random rhythm is generated, using one of the following processes: random coin toss (similar to Branches ), random ratcheting, or random drum pattern generation (similar to a randomly modulated Grids ). X : the random voltage generator This generator produces 3 channels of random voltages , each of them clocked by the individual outputs of the t section, or by a common external clock signal. Complete control on the distribution of the output voltages is provided: concentrated or spread-out, quantized or unquantized, smoothed or steppy, centered or biased towards a specific voltage. The same transformations can be performed on an external CV, for sample-and-hold or shift-register operation. An auxiliary slowly fluctuating random voltage output ( Y ) is also available for self-patching fun! A feeling of d\u00e9j\u00e0-vu... Marbles remembers the history of every recent clock deviation, rhythm or voltage it has generated. The DEJA VU knob on the panel controls the probability of reusing past material instead of sampling fresh random data. You are thus given control on the feeling of repetition and structure in the generated random voltages and rhythms. At the extreme, the module no longer generates any novel values and loops over the same pattern (or a random permutation of it). And of course, this (variably) random looping can be performed on external CVs!","title":"Original blurb"},{"location":"modules/marbles/original_blurb/#controlled-chaos-repeatable-randomness","text":"Marbles is a source of random gates and voltages , which offers an extensive amount of (voltage) control on all the different flavors of randomness it produces. The module gives the musician many different ways of imposing structure on the random events generated by the module: synchronization to external clocks, control of the repetition or novelty of the generated material, quantization of the voltages, or randomization of gates or voltages generated by traditional sequencers.","title":"Controlled chaos, repeatable randomness"},{"location":"modules/marbles/original_blurb/#t-the-random-gate-generator","text":"Marbles either follows its own internal clock, or locks onto an adjustable multiplication/division of an external clock (or regular rhythmic pattern). This regular clock is perturbed by a process simulating an instrumentist playing along a click and trying to catch up on their errors - from perfect accuracy to complete chaos. From this imperfect master clock, a 2-channel random rhythm is generated, using one of the following processes: random coin toss (similar to Branches ), random ratcheting, or random drum pattern generation (similar to a randomly modulated Grids ).","title":"t: the random gate generator"},{"location":"modules/marbles/original_blurb/#x-the-random-voltage-generator","text":"This generator produces 3 channels of random voltages , each of them clocked by the individual outputs of the t section, or by a common external clock signal. Complete control on the distribution of the output voltages is provided: concentrated or spread-out, quantized or unquantized, smoothed or steppy, centered or biased towards a specific voltage. The same transformations can be performed on an external CV, for sample-and-hold or shift-register operation. An auxiliary slowly fluctuating random voltage output ( Y ) is also available for self-patching fun!","title":"X: the random voltage generator"},{"location":"modules/marbles/original_blurb/#a-feeling-of-deja-vu","text":"Marbles remembers the history of every recent clock deviation, rhythm or voltage it has generated. The DEJA VU knob on the panel controls the probability of reusing past material instead of sampling fresh random data. You are thus given control on the feeling of repetition and structure in the generated random voltages and rhythms. At the extreme, the module no longer generates any novel values and loops over the same pattern (or a random permutation of it). And of course, this (variably) random looping can be performed on external CVs!","title":"A feeling of d\u00e9j\u00e0-vu..."},{"location":"modules/peaks/","text":"Key data Original printed manual Features Four in one... ADSR envelope generator LFO and tap-tempo LFO Drum synth Control modes Specifications Revisions and variants 2014 2015 Key data Multifunction gap-filler ( Dual trigger to signal converter on the packaging) Parameter Value Width 8HP Depth 25mm +12V current 60mA -12V current 2mA Lifetime 08/14 to 10/17 Modulargrid Link Processor STM32F103CBT6 @ 72 MHz DAC DAC8552 Original printed manual PDF download Features Four in one... ADSR envelope generator Segment durations ranging from 0.2ms to 8s. Quartic attack, exponential decay, exponential release. LFO and tap-tempo LFO 0.03 Hz to 160 Hz. 5 basic waveforms: square, triangle, sine, stepped, random. Waveform variations and morphing for each of these: PWM, slope, folding/harmonics, step size, interpolation. Phase at reset control. Tap LFO can lock onto irregular rhythms. Drum synth Channel 1: 808 kick model with extra parameters (tune, punch). Channel 2: 808 snare model with extra parameters (tune, decay). Channel 2: A specific combination of settings transform the snare into a modelled 808 hi-hat. Control modes Twin : Channel 1&2 share the same parameters but can be triggered independently. Split : Channel 1 is edited by knobs 1&2, channel 2 edited by knobs 3&4, with a simplified 2-parameter control scheme. Expert : Channel 1&2 are completely independent. Specifications Inputs: 100k impedance, threshold at 0.6V. 16-bit CV/audio generation with 48kHz sample rate. Output level: 0 to +8V for envelopes, 10Vpp for LFOs and drum signals. Revisions and variants An initial batch of 250 units was made by a dubious CM in the US, only a small fraction of which has been sold. The next batches were made in France at the end of 2014. 2014 First batch made in France, labelled \"v0.2\": Green PCB (originally black). 2015 Hardware revision labelled \"v3\" with the following differences: Thonkiconn jacks. LEDs with round top (originally flat). Illuminated push-buttons sourced from RunRun (originally E-switch), with a more even illumination. No trimmers in the back, the calibration being now performed in software.","title":"Index"},{"location":"modules/peaks/#key-data","text":"Multifunction gap-filler ( Dual trigger to signal converter on the packaging) Parameter Value Width 8HP Depth 25mm +12V current 60mA -12V current 2mA Lifetime 08/14 to 10/17 Modulargrid Link Processor STM32F103CBT6 @ 72 MHz DAC DAC8552","title":"Key data"},{"location":"modules/peaks/#original-printed-manual","text":"PDF download","title":"Original printed manual"},{"location":"modules/peaks/#features","text":"","title":"Features"},{"location":"modules/peaks/#four-in-one","text":"","title":"Four in one..."},{"location":"modules/peaks/#adsr-envelope-generator","text":"Segment durations ranging from 0.2ms to 8s. Quartic attack, exponential decay, exponential release.","title":"ADSR envelope generator"},{"location":"modules/peaks/#lfo-and-tap-tempo-lfo","text":"0.03 Hz to 160 Hz. 5 basic waveforms: square, triangle, sine, stepped, random. Waveform variations and morphing for each of these: PWM, slope, folding/harmonics, step size, interpolation. Phase at reset control. Tap LFO can lock onto irregular rhythms.","title":"LFO and tap-tempo LFO"},{"location":"modules/peaks/#drum-synth","text":"Channel 1: 808 kick model with extra parameters (tune, punch). Channel 2: 808 snare model with extra parameters (tune, decay). Channel 2: A specific combination of settings transform the snare into a modelled 808 hi-hat.","title":"Drum synth"},{"location":"modules/peaks/#control-modes","text":"Twin : Channel 1&2 share the same parameters but can be triggered independently. Split : Channel 1 is edited by knobs 1&2, channel 2 edited by knobs 3&4, with a simplified 2-parameter control scheme. Expert : Channel 1&2 are completely independent.","title":"Control modes"},{"location":"modules/peaks/#specifications","text":"Inputs: 100k impedance, threshold at 0.6V. 16-bit CV/audio generation with 48kHz sample rate. Output level: 0 to +8V for envelopes, 10Vpp for LFOs and drum signals.","title":"Specifications"},{"location":"modules/peaks/#revisions-and-variants","text":"An initial batch of 250 units was made by a dubious CM in the US, only a small fraction of which has been sold. The next batches were made in France at the end of 2014.","title":"Revisions and variants"},{"location":"modules/peaks/#2014","text":"First batch made in France, labelled \"v0.2\": Green PCB (originally black).","title":"2014"},{"location":"modules/peaks/#2015","text":"Hardware revision labelled \"v3\" with the following differences: Thonkiconn jacks. LEDs with round top (originally flat). Illuminated push-buttons sourced from RunRun (originally E-switch), with a more even illumination. No trimmers in the back, the calibration being now performed in software.","title":"2015"},{"location":"modules/peaks/firmware/","text":"Download Latest version (1.1) Firmware update procedure Revisions v1.1 (released 20/05/17) Fixed a rarely occurring bug causing the 808 HH model to produce a distorted noise when the module is powered on. Added more filtering/hysteresis to the potentiometers, so that the hidden sequencer mode produces voltages stable enough for controlling a quantizer or oscillator. Fixed a bug causing the tap tempo LFO to skip pulses when similar patterns are sent to both inputs (with less than 21\u00b5s of difference between their edges). The code has, overall more \"headroom\" in terms of CPU usage, and provides a more stable basis for the development of alternative firmware. v1.0 Initial release.","title":"Firmware"},{"location":"modules/peaks/firmware/#download","text":"Latest version (1.1) Firmware update procedure","title":"Download"},{"location":"modules/peaks/firmware/#revisions","text":"","title":"Revisions"},{"location":"modules/peaks/firmware/#v11-released-200517","text":"Fixed a rarely occurring bug causing the 808 HH model to produce a distorted noise when the module is powered on. Added more filtering/hysteresis to the potentiometers, so that the hidden sequencer mode produces voltages stable enough for controlling a quantizer or oscillator. Fixed a bug causing the tap tempo LFO to skip pulses when similar patterns are sent to both inputs (with less than 21\u00b5s of difference between their edges). The code has, overall more \"headroom\" in terms of CPU usage, and provides a more stable basis for the development of alternative firmware.","title":"v1.1 (released 20/05/17)"},{"location":"modules/peaks/firmware/#v10","text":"Initial release.","title":"v1.0"},{"location":"modules/peaks/manual/","text":"Overview Peaks is a two-channel, general-purpose, trigger processor: it translates incoming triggers or gates into envelopes, synchronized periodic modulations (LFO and tap-LFO), or drum signals. Peaks can also be directly \"played\" thanks to its two trigger buttons. Our goal with this module is to give you many different ways of modulating your patches in as little space as possible! Installation Peaks is designed for Eurorack synthesizer systems and occupies 8 HP of space. It requires a -12V/+12V supply (2x5 connector), consuming 2mA from the -12V rail and 60mA from the +12V rail. The red stripe of the ribbon cable must be oriented on the same side as the \"Red stripe\" marking on the printed circuit board. Overview and controls Peaks is a multi-function module, but the general rule is that cool things happen whenever a trigger is received. Its four main functions are: Envelope generator - the gate/trigger input starts and holds the envelope. LFO - the gate/trigger input resets the waveform cycle. LFO with tap-tempo synchronization - the gate/trigger input sets the period of the LFO oscillations. Note that Peaks can \"learn\" irregular trigger sequences and lock onto them. Drum generator - the gate/trigger input triggers the drum sound. Peaks provides two channels of processing - each of them has a gate/trigger input jack, a gate/trigger button with an output indication LED, and an audio/CV output. Both channels provide the same function - the exception being channel 1's drum generator being a bass drum generator, and channel 2's drum generator being a snare drum/hi-hat generator. Both channels can be \"synchronized\" (aka twin mode), in that they both share the same front panel controls - for example in ADSR envelope mode, the first knob will control both channel 1 and channel 2's attack time. This can be used not only to create duophonic patches (for which you actually want both channels to behave similarly), but also to obtain two synchronized outputs of the same LFO waveform with different phase shifts... Another way of controlling the module is the split mode in which the potentiometers 1 and 2 control channel 1's settings; and the potentiometers 3 and 4 control channel 2's settings. This mode only gives access to the 2 most essential parameters of each function (for example attack and decay time for an envelope) - the other parameters being set to default \"neutral\" settings. Finally, if breaking the one knob per function rule is not a taboo for you, an expert mode allows individual control of channel 1 and 2. Controls, inputs and outputs The split button toggles between the twin (LED off) and split (LED on) modes. Hold it for a second to enter the expert mode. In this mode, the button toggles between channel 1 and 2. Hold it for a second to get back to normal operation. The FUNCTION button cycles through the 4 main functions. The 4 potentiometers modify the settings for the selected function. Please refer to the tables in the next section. TRIG 1&2 are channel 1 and 2's trigger inputs. The trigger threshold is 0.7V. Above each of these inputs is a switch that can be pressed to generate a trigger signal. The LED built into the switch shows the variations of the output signal. Finally, OUT 1&2 are channel 1 and 2's outputs. Parameters ENV function, twin & expert : Ch. 1&2 Attack Ch. 1&2 Decay Ch. 1&2 Sustain Ch. 1&2 Release ENV function, split : Dual A/D envelope generator Ch. 1 Attack Ch. 1 Decay Ch. 2 Attack Ch. 2 Decay LFO function, twin & expert : Ch. 1&2 Frequency Ch. 1&2 Waveform (sine, linear slope, square, steps, random) Ch. 1&2 Waveform variation (wavefolder for sine; ascending/triangle/descending balance for slope, pulse-width for square, number of steps, and interpolation method) Ch. 1&2 Phase on restart LFO function, split : Ch. 1 Frequency Ch. 1 Waveform Ch. 2 Frequency Ch. 2 Waveform TAP function, twin & expert : Ch. 1&2 Amplitude Ch. 1&2 Waveform Ch. 1&2 Waveform variation Ch. 1&2 Phase on restart TAP function, split : Ch. 1 Waveform Ch. 1 Waveform variation Ch. 2 Waveform Ch. 2 Waveform variation DRUM function, twin & expert : Ch. 1&2 Base frequency Ch. 1&2 Frequency modulation (\"Punch\" for BD, \"Tone\" for SD) Ch. 1&2 High-frequency content (\"Tone\" for BD, \"Snappy\" for SD) Ch. 1&2 Decay DRUM function, split : The original 808 sweet spot! Ch. 1 BD Tone Ch. 1 BD Decay Ch. 2 SD Tone Ch. 2 SD Snappy For advanced users only Four more things Hold the FUNCTION button for one second (it starts blinking). Peaks now provides four alternative functions instead of envelope/LFO/tap LFO/drum generation. These functions are: Mini step-sequencer (4-step in twin mode, 2-step in split mode) Trigger delay/shaper Trigger stream randomizer Digital drum synth Parameters Alternative ADSR function, twin & expert : 4-step minisequencer. Each knob controls a step. Channel 1 is clocked by TRIG 1 and reset by TRIG 2 . Channel 2 is clocked by TRIG 2 : Ch. 1&2 Step 1 Ch. 1&2 Step 2 Ch. 1&2 Step 3 Ch. 1&2 Step 4 Alternative ADSR function, split : Dual 2-step minisequencer. Knobs 1&2 control channel 1's steps, knobs 3&4 channel 2's steps. There is no reset, and each channel has its clock. Ch. 1 Step 1 Ch. 1 Step 2 Ch. 2 Step 1 Ch. 2 Step 2 Alternative LFO function, twin & expert : Ch. 1&2 Pre-delay Ch. 1&2 Gate duration Ch. 1&2 Delay Ch. 1&2 Number of repeats Alternative LFO function, split : Ch. 1 Delay Ch. 1 Number of repeats Ch. 2 Delay Ch. 2 Number of repeats Alternative TAP function, twin & expert : Ch. 1&2 Probability that an incoming trigger is processed Ch. 1&2 Probability that the trigger is regenerated after the delay Ch. 1&2 Delay time Ch. 1&2 Jitter Alternative TAP function, split : Ch. 1 Acceptance/regeneration probability Ch. 1 Delay Ch. 2 Acceptance/regeneration probability Ch. 2 Delay Alternative DRUM function, twin & expert : Ch. 1&2 frequency Ch. 1&2 FM intensity Ch. 1&2 FM and AM envelope decay time (the FM envelope has a shorter decay than the AM envelope, but the two values are tied to this parameter) Ch. 1&2 Color. At 12 o'clock, no modification is brought to the oscillator signal. Turn right to increase the amount of noise (for snares). Turn left to increase the amount of distortion (for 909 style kicks). Alternative DRUM function, split : Ch. 1 BD presets morphing Ch. 1 BD presets variations Ch. 2 SD presets morphing Ch. 2 SD presets variations Firmware update procedure Connect the output of your audio interface/sound card to the TRIG1 input. Power on your modular system with Peaks' TRIG1 button pressed. The split , TRIG1 , and TRIG2 LEDs will blink. Make sure that no additional sound (such as email notification sounds, background music etc.) from your computer will be played during the procedure. Make sure that your speakers/monitors are not connected to your audio interface - the noises emitted during the procedure are aggressive and can harm your hearing. On non-studio audio equipment (for example the line output from a Desktop computer), you might have to turn up the gain to the maximum. When you are all set, play the firmware update file into the module. The LEDs show a cyclic pattern and periodically flash upon receiving a valid block of data. The unit reboots after the last packet has been received. In case the signal level is inadequate or too high, the procedure will stop and the LEDs will blink alternatively. Press the TRIG1 button and retry from the start of the update file.","title":"Manual"},{"location":"modules/peaks/manual/#overview","text":"Peaks is a two-channel, general-purpose, trigger processor: it translates incoming triggers or gates into envelopes, synchronized periodic modulations (LFO and tap-LFO), or drum signals. Peaks can also be directly \"played\" thanks to its two trigger buttons. Our goal with this module is to give you many different ways of modulating your patches in as little space as possible!","title":"Overview"},{"location":"modules/peaks/manual/#installation","text":"Peaks is designed for Eurorack synthesizer systems and occupies 8 HP of space. It requires a -12V/+12V supply (2x5 connector), consuming 2mA from the -12V rail and 60mA from the +12V rail. The red stripe of the ribbon cable must be oriented on the same side as the \"Red stripe\" marking on the printed circuit board.","title":"Installation"},{"location":"modules/peaks/manual/#overview-and-controls","text":"Peaks is a multi-function module, but the general rule is that cool things happen whenever a trigger is received. Its four main functions are: Envelope generator - the gate/trigger input starts and holds the envelope. LFO - the gate/trigger input resets the waveform cycle. LFO with tap-tempo synchronization - the gate/trigger input sets the period of the LFO oscillations. Note that Peaks can \"learn\" irregular trigger sequences and lock onto them. Drum generator - the gate/trigger input triggers the drum sound. Peaks provides two channels of processing - each of them has a gate/trigger input jack, a gate/trigger button with an output indication LED, and an audio/CV output. Both channels provide the same function - the exception being channel 1's drum generator being a bass drum generator, and channel 2's drum generator being a snare drum/hi-hat generator. Both channels can be \"synchronized\" (aka twin mode), in that they both share the same front panel controls - for example in ADSR envelope mode, the first knob will control both channel 1 and channel 2's attack time. This can be used not only to create duophonic patches (for which you actually want both channels to behave similarly), but also to obtain two synchronized outputs of the same LFO waveform with different phase shifts... Another way of controlling the module is the split mode in which the potentiometers 1 and 2 control channel 1's settings; and the potentiometers 3 and 4 control channel 2's settings. This mode only gives access to the 2 most essential parameters of each function (for example attack and decay time for an envelope) - the other parameters being set to default \"neutral\" settings. Finally, if breaking the one knob per function rule is not a taboo for you, an expert mode allows individual control of channel 1 and 2.","title":"Overview and controls"},{"location":"modules/peaks/manual/#controls-inputs-and-outputs","text":"The split button toggles between the twin (LED off) and split (LED on) modes. Hold it for a second to enter the expert mode. In this mode, the button toggles between channel 1 and 2. Hold it for a second to get back to normal operation. The FUNCTION button cycles through the 4 main functions. The 4 potentiometers modify the settings for the selected function. Please refer to the tables in the next section. TRIG 1&2 are channel 1 and 2's trigger inputs. The trigger threshold is 0.7V. Above each of these inputs is a switch that can be pressed to generate a trigger signal. The LED built into the switch shows the variations of the output signal. Finally, OUT 1&2 are channel 1 and 2's outputs.","title":"Controls, inputs and outputs"},{"location":"modules/peaks/manual/#parameters","text":"ENV function, twin & expert : Ch. 1&2 Attack Ch. 1&2 Decay Ch. 1&2 Sustain Ch. 1&2 Release ENV function, split : Dual A/D envelope generator Ch. 1 Attack Ch. 1 Decay Ch. 2 Attack Ch. 2 Decay LFO function, twin & expert : Ch. 1&2 Frequency Ch. 1&2 Waveform (sine, linear slope, square, steps, random) Ch. 1&2 Waveform variation (wavefolder for sine; ascending/triangle/descending balance for slope, pulse-width for square, number of steps, and interpolation method) Ch. 1&2 Phase on restart LFO function, split : Ch. 1 Frequency Ch. 1 Waveform Ch. 2 Frequency Ch. 2 Waveform TAP function, twin & expert : Ch. 1&2 Amplitude Ch. 1&2 Waveform Ch. 1&2 Waveform variation Ch. 1&2 Phase on restart TAP function, split : Ch. 1 Waveform Ch. 1 Waveform variation Ch. 2 Waveform Ch. 2 Waveform variation DRUM function, twin & expert : Ch. 1&2 Base frequency Ch. 1&2 Frequency modulation (\"Punch\" for BD, \"Tone\" for SD) Ch. 1&2 High-frequency content (\"Tone\" for BD, \"Snappy\" for SD) Ch. 1&2 Decay DRUM function, split : The original 808 sweet spot! Ch. 1 BD Tone Ch. 1 BD Decay Ch. 2 SD Tone Ch. 2 SD Snappy","title":"Parameters"},{"location":"modules/peaks/manual/#for-advanced-users-only","text":"","title":"For advanced users only"},{"location":"modules/peaks/manual/#four-more-things","text":"Hold the FUNCTION button for one second (it starts blinking). Peaks now provides four alternative functions instead of envelope/LFO/tap LFO/drum generation. These functions are: Mini step-sequencer (4-step in twin mode, 2-step in split mode) Trigger delay/shaper Trigger stream randomizer Digital drum synth","title":"Four more things"},{"location":"modules/peaks/manual/#parameters_1","text":"Alternative ADSR function, twin & expert : 4-step minisequencer. Each knob controls a step. Channel 1 is clocked by TRIG 1 and reset by TRIG 2 . Channel 2 is clocked by TRIG 2 : Ch. 1&2 Step 1 Ch. 1&2 Step 2 Ch. 1&2 Step 3 Ch. 1&2 Step 4 Alternative ADSR function, split : Dual 2-step minisequencer. Knobs 1&2 control channel 1's steps, knobs 3&4 channel 2's steps. There is no reset, and each channel has its clock. Ch. 1 Step 1 Ch. 1 Step 2 Ch. 2 Step 1 Ch. 2 Step 2 Alternative LFO function, twin & expert : Ch. 1&2 Pre-delay Ch. 1&2 Gate duration Ch. 1&2 Delay Ch. 1&2 Number of repeats Alternative LFO function, split : Ch. 1 Delay Ch. 1 Number of repeats Ch. 2 Delay Ch. 2 Number of repeats Alternative TAP function, twin & expert : Ch. 1&2 Probability that an incoming trigger is processed Ch. 1&2 Probability that the trigger is regenerated after the delay Ch. 1&2 Delay time Ch. 1&2 Jitter Alternative TAP function, split : Ch. 1 Acceptance/regeneration probability Ch. 1 Delay Ch. 2 Acceptance/regeneration probability Ch. 2 Delay Alternative DRUM function, twin & expert : Ch. 1&2 frequency Ch. 1&2 FM intensity Ch. 1&2 FM and AM envelope decay time (the FM envelope has a shorter decay than the AM envelope, but the two values are tied to this parameter) Ch. 1&2 Color. At 12 o'clock, no modification is brought to the oscillator signal. Turn right to increase the amount of noise (for snares). Turn left to increase the amount of distortion (for 909 style kicks). Alternative DRUM function, split : Ch. 1 BD presets morphing Ch. 1 BD presets variations Ch. 2 SD presets morphing Ch. 2 SD presets variations","title":"Parameters"},{"location":"modules/peaks/manual/#firmware-update-procedure","text":"Connect the output of your audio interface/sound card to the TRIG1 input. Power on your modular system with Peaks' TRIG1 button pressed. The split , TRIG1 , and TRIG2 LEDs will blink. Make sure that no additional sound (such as email notification sounds, background music etc.) from your computer will be played during the procedure. Make sure that your speakers/monitors are not connected to your audio interface - the noises emitted during the procedure are aggressive and can harm your hearing. On non-studio audio equipment (for example the line output from a Desktop computer), you might have to turn up the gain to the maximum. When you are all set, play the firmware update file into the module. The LEDs show a cyclic pattern and periodically flash upon receiving a valid block of data. The unit reboots after the last packet has been received. In case the signal level is inadequate or too high, the procedure will stop and the LEDs will blink alternatively. Press the TRIG1 button and retry from the start of the update file.","title":" Firmware update procedure"},{"location":"modules/peaks/open_source/","text":"Github repository Schematics Firmware hacking Peaks' source code is available under the MIT licence. The code (along with the hardware description files) can be found in the peaks directory in our Eurorack modules git repository . After having cloned the repository, don't forget to run git submodule init && git submodule update to make sure the sub-projects referenced in the code are also pulled. Playground A simple way of testing the oscillators code locally on a desktop computer, without long flash/test cycles, is to use the command line program in peaks/test. It can be built and run with make -f peaks/test/makefile && ./peaks_test . No embedded toolchain is needed for that! The program generates a .wav file, peaks.wav . Playing with the methods of the Processors class is a good way of familiarizing oneself's with Peaks code. Toolchain If you don't mind installing Vagrant and VirtualBox a cozy environment for firmware hacking is available. If you want to set up your own environment to build Peaks' code, an ARM EABI toolchain must be installed. Because of tight CPU and code size limits, we recommend you to use the same compiler version as we do: 4.8-2013-q4-major . Various pre-compiled binaries and source packages are available here . The path to the toolchain binaries must be specified in the TOOLCHAIN_PATH variable in peaks/makefile . To build the bootloader, use the following command: make -f peaks/bootloader/makefile hex To build the code, use the following command: make -f peaks/makefile If you modify lookup tables and want the big resources.cc file to be regenerated: touch peaks/resources/resources.py && make -f peaks/makefile resources Firmware programming A first solution is to simply use the firmware update procedure. A .wav file for firmware upgrade can be generated with: make -f peaks/makefile wav The firmware can then be loaded into the module using the procedure described in the manual. Past this point, we assume you know what you are doing and we are not responsible for any damage to your module! Another solution is to use the built-in serial bootloader of the STM32F. Connect a FTDI dongle with a 3.3V output level ( such as this ) to the 6 pin connector at the back of the module. If necessary, edit the serial port special file corresponding to the FTDI dongle in the PGM_SERIAL_PORT variable in stmlib/makefile.inc. GND must match GND, TX must match RX and vice-versa. Hold the RESET switch on the side of the module. Press the SYSBOOT switch next to it, and release RESET . Nothing is shown on the module display (it is in bootloader limbo...) Upload the firmware with: make -f peaks/makefile upload_combo_serial The last \u2013 and recommended \u2013 solution for firmware programming is to use a JTAG interface and openOCD. We recommend Olimex' ARM-USB-OCD-H devices . An adapter must also be purchased for the mini-JTAG connector used by Peaks. Upload the firmware with: make -f peaks/makefile upload_combo_jtag","title":"Open source"},{"location":"modules/peaks/open_source/#firmware-hacking","text":"Peaks' source code is available under the MIT licence. The code (along with the hardware description files) can be found in the peaks directory in our Eurorack modules git repository . After having cloned the repository, don't forget to run git submodule init && git submodule update to make sure the sub-projects referenced in the code are also pulled.","title":"Firmware hacking"},{"location":"modules/peaks/open_source/#playground","text":"A simple way of testing the oscillators code locally on a desktop computer, without long flash/test cycles, is to use the command line program in peaks/test. It can be built and run with make -f peaks/test/makefile && ./peaks_test . No embedded toolchain is needed for that! The program generates a .wav file, peaks.wav . Playing with the methods of the Processors class is a good way of familiarizing oneself's with Peaks code.","title":"Playground"},{"location":"modules/peaks/open_source/#toolchain","text":"If you don't mind installing Vagrant and VirtualBox a cozy environment for firmware hacking is available. If you want to set up your own environment to build Peaks' code, an ARM EABI toolchain must be installed. Because of tight CPU and code size limits, we recommend you to use the same compiler version as we do: 4.8-2013-q4-major . Various pre-compiled binaries and source packages are available here . The path to the toolchain binaries must be specified in the TOOLCHAIN_PATH variable in peaks/makefile . To build the bootloader, use the following command: make -f peaks/bootloader/makefile hex To build the code, use the following command: make -f peaks/makefile If you modify lookup tables and want the big resources.cc file to be regenerated: touch peaks/resources/resources.py && make -f peaks/makefile resources","title":"Toolchain"},{"location":"modules/peaks/open_source/#firmware-programming","text":"A first solution is to simply use the firmware update procedure. A .wav file for firmware upgrade can be generated with: make -f peaks/makefile wav The firmware can then be loaded into the module using the procedure described in the manual. Past this point, we assume you know what you are doing and we are not responsible for any damage to your module! Another solution is to use the built-in serial bootloader of the STM32F. Connect a FTDI dongle with a 3.3V output level ( such as this ) to the 6 pin connector at the back of the module. If necessary, edit the serial port special file corresponding to the FTDI dongle in the PGM_SERIAL_PORT variable in stmlib/makefile.inc. GND must match GND, TX must match RX and vice-versa. Hold the RESET switch on the side of the module. Press the SYSBOOT switch next to it, and release RESET . Nothing is shown on the module display (it is in bootloader limbo...) Upload the firmware with: make -f peaks/makefile upload_combo_serial The last \u2013 and recommended \u2013 solution for firmware programming is to use a JTAG interface and openOCD. We recommend Olimex' ARM-USB-OCD-H devices . An adapter must also be purchased for the mini-JTAG connector used by Peaks. Upload the firmware with: make -f peaks/makefile upload_combo_jtag","title":"Firmware programming"},{"location":"modules/peaks/original_blurb/","text":"A swiss-army knife for percussive patches Peaks provides 4 different functions in a small 8-HP package: ADSR, LFO / Tap tempo LFO, and drum synth. Their common point? They are all about generating an audio or CV signal in response to a trigger, and are all focused on rhythmic works. Peaks is a dual-channel module \u2013 making it very useful for duophonic patches or for controlling/synthesizing the kick/snare rhythmic backbone of a patch.","title":"Original blurb"},{"location":"modules/peaks/original_blurb/#a-swiss-army-knife-for-percussive-patches","text":"Peaks provides 4 different functions in a small 8-HP package: ADSR, LFO / Tap tempo LFO, and drum synth. Their common point? They are all about generating an audio or CV signal in response to a trigger, and are all focused on rhythmic works. Peaks is a dual-channel module \u2013 making it very useful for duophonic patches or for controlling/synthesizing the kick/snare rhythmic backbone of a patch.","title":"A swiss-army knife for percussive patches"}]}